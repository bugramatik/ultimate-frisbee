

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat May 27 06:49:40 2023

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 12/02/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F4620 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataCOMRAM
    89  0023CA                     __pidataCOMRAM:
    90                           	callstack 0
    91                           
    92                           ;initializer for _dash
    93  0023CA  40                 	db	64
    94                           
    95                           ;initializer for _lcd_y
    96  0023CB  01                 	db	1
    97                           
    98                           ;initializer for _lcd_x
    99  0023CC  01                 	db	1
   100                           
   101                           	psect	idataBANK0
   102  0020E6                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _gameState
   106  0020E6  0004               	dw	4
   107  0020E8  0002               	dw	2
   108  0020EA  0003               	dw	3
   109  0020EC  0003               	dw	3
   110  0020EE  000E               	dw	14
   111  0020F0  0002               	dw	2
   112  0020F2  000E               	dw	14
   113  0020F4  0003               	dw	3
   114  0020F6  0009               	dw	9
   115  0020F8  0002               	dw	2
   116  0020FA  0000               	dw	0
   117  0020FC  0000               	dw	0
   118  0020FE  0000               	dw	0
   119  002100  0000               	dw	0
   120                           
   121                           ;initializer for _digits
   122  002102  3F                 	db	63
   123  002103  06                 	db	6
   124  002104  5B                 	db	91
   125  002105  4F                 	db	79
   126  002106  66                 	db	102
   127  002107  6D                 	db	109
   128  002108  7D                 	db	125
   129  002109  07                 	db	7
   130  00210A  7F                 	db	127
   131  00210B  6F                 	db	111
   132                           
   133                           ;initializer for _frisbee
   134  00210C  0E                 	db	14
   135  00210D  1F                 	db	31
   136  00210E  1F                 	db	31
   137  00210F  1F                 	db	31
   138  002110  0E                 	db	14
   139  002111  00                 	db	0
   140  002112  00                 	db	0
   141  002113  00                 	db	0
   142                           
   143                           ;initializer for _selected_teamB_player
   144  002114  11                 	db	17
   145  002115  15                 	db	21
   146  002116  0A                 	db	10
   147  002117  04                 	db	4
   148  002118  0E                 	db	14
   149  002119  1F                 	db	31
   150  00211A  0A                 	db	10
   151  00211B  1F                 	db	31
   152                           
   153                           ;initializer for _selected_teamA_player
   154  00211C  11                 	db	17
   155  00211D  15                 	db	21
   156  00211E  0A                 	db	10
   157  00211F  04                 	db	4
   158  002120  04                 	db	4
   159  002121  04                 	db	4
   160  002122  0A                 	db	10
   161  002123  1F                 	db	31
   162                           
   163                           ;initializer for _teamB_player
   164  002124  11                 	db	17
   165  002125  15                 	db	21
   166  002126  0A                 	db	10
   167  002127  04                 	db	4
   168  002128  0E                 	db	14
   169  002129  1F                 	db	31
   170  00212A  0A                 	db	10
   171  00212B  0A                 	db	10
   172                           
   173                           ;initializer for _teamA_player
   174  00212C  11                 	db	17
   175  00212D  15                 	db	21
   176  00212E  0A                 	db	10
   177  00212F  04                 	db	4
   178  002130  04                 	db	4
   179  002131  04                 	db	4
   180  002132  0A                 	db	10
   181  002133  0A                 	db	10
   182                           
   183                           	psect	idataBANK1
   184  0023B2                     __pidataBANK1:
   185                           	callstack 0
   186                           
   187                           ;initializer for _frisbee_target
   188  0023B2  0E                 	db	14
   189  0023B3  11                 	db	17
   190  0023B4  11                 	db	17
   191  0023B5  11                 	db	17
   192  0023B6  0E                 	db	14
   193  0023B7  00                 	db	0
   194  0023B8  00                 	db	0
   195  0023B9  00                 	db	0
   196                           
   197                           ;initializer for _selected_teamB_player_with_frisbee
   198  0023BA  1F                 	db	31
   199  0023BB  15                 	db	21
   200  0023BC  0A                 	db	10
   201  0023BD  04                 	db	4
   202  0023BE  0E                 	db	14
   203  0023BF  1F                 	db	31
   204  0023C0  0A                 	db	10
   205  0023C1  1F                 	db	31
   206                           
   207                           ;initializer for _selected_teamA_player_with_frisbee
   208  0023C2  1F                 	db	31
   209  0023C3  15                 	db	21
   210  0023C4  0A                 	db	10
   211  0023C5  04                 	db	4
   212  0023C6  04                 	db	4
   213  0023C7  04                 	db	4
   214  0023C8  0A                 	db	10
   215  0023C9  1F                 	db	31
   216  0000                     _TMR0	set	4054
   217  0000                     _T0CON	set	4053
   218  0000                     _TRISBbits	set	3987
   219  0000                     _LATB	set	3978
   220  0000                     _PORTBbits	set	3969
   221  0000                     _INTCONbits	set	4082
   222  0000                     _LATA	set	3977
   223  0000                     _PORTA	set	3968
   224  0000                     _TRISA	set	3986
   225  0000                     _TRISD	set	3989
   226  0000                     _TRISEbits	set	3990
   227  0000                     _PORTD	set	3971
   228  0000                     _PORTEbits	set	3972
   229  0000                     _ADCON2bits	set	4032
   230  0000                     _TRISAbits	set	3986
   231  0000                     _ADCON1bits	set	4033
   232  0000                     _ADRESL	set	4035
   233  0000                     _ADRESH	set	4036
   234  0000                     _PIR1bits	set	3998
   235  0000                     _ADCON0bits	set	4034
   236  0000                     _TMR0IF	set	32658
   237                           
   238                           	psect	smallconst
   239  001000                     __psmallconst:
   240                           	callstack 0
   241  001000  00                 	db	0
   242  001001                     STR_1:
   243  001001  55                 	db	85	;'U'
   244  001002  70                 	db	112	;'p'
   245  001003  64                 	db	100	;'d'
   246  001004  61                 	db	97	;'a'
   247  001005  74                 	db	116	;'t'
   248  001006  69                 	db	105	;'i'
   249  001007  6E                 	db	110	;'n'
   250  001008  67                 	db	103	;'g'
   251  001009  20                 	db	32
   252  00100A  70                 	db	112	;'p'
   253  00100B  6C                 	db	108	;'l'
   254  00100C  61                 	db	97	;'a'
   255  00100D  79                 	db	121	;'y'
   256  00100E  65                 	db	101	;'e'
   257  00100F  72                 	db	114	;'r'
   258  001010  20                 	db	32
   259  001011  70                 	db	112	;'p'
   260  001012  6F                 	db	111	;'o'
   261  001013  73                 	db	115	;'s'
   262  001014  69                 	db	105	;'i'
   263  001015  74                 	db	116	;'t'
   264  001016  69                 	db	105	;'i'
   265  001017  6F                 	db	111	;'o'
   266  001018  6E                 	db	110	;'n'
   267  001019  20                 	db	32
   268  00101A  66                 	db	102	;'f'
   269  00101B  72                 	db	114	;'r'
   270  00101C  6F                 	db	111	;'o'
   271  00101D  6D                 	db	109	;'m'
   272  00101E  20                 	db	32
   273  00101F  28                 	db	40
   274  001020  25                 	db	37
   275  001021  64                 	db	100	;'d'
   276  001022  2C                 	db	44
   277  001023  20                 	db	32
   278  001024  25                 	db	37
   279  001025  64                 	db	100	;'d'
   280  001026  29                 	db	41
   281  001027  20                 	db	32
   282  001028  74                 	db	116	;'t'
   283  001029  6F                 	db	111	;'o'
   284  00102A  20                 	db	32
   285  00102B  28                 	db	40
   286  00102C  25                 	db	37
   287  00102D  64                 	db	100	;'d'
   288  00102E  2C                 	db	44
   289  00102F  20                 	db	32
   290  001030  25                 	db	37
   291  001031  64                 	db	100	;'d'
   292  001032  29                 	db	41
   293  001033  0A                 	db	10
   294  001034  00                 	db	0
   295  001035                     STR_2:
   296  001035  55                 	db	85	;'U'
   297  001036  70                 	db	112	;'p'
   298  001037  20                 	db	32
   299  001038  62                 	db	98	;'b'
   300  001039  75                 	db	117	;'u'
   301  00103A  74                 	db	116	;'t'
   302  00103B  74                 	db	116	;'t'
   303  00103C  6F                 	db	111	;'o'
   304  00103D  6E                 	db	110	;'n'
   305  00103E  21                 	db	33
   306  00103F  21                 	db	33
   307  001040  0A                 	db	10
   308  001041  00                 	db	0
   309  001042  00                 	db	0	; dummy byte at the end
   310  0000                     
   311                           ; #config settings
   312                           
   313                           	psect	cinit
   314  001F08                     __pcinit:
   315                           	callstack 0
   316  001F08                     start_initialization:
   317                           	callstack 0
   318  001F08                     __initialization:
   319                           	callstack 0
   320                           
   321                           ; Initialize objects allocated to BANK1 (24 bytes)
   322                           ; load TBLPTR registers with __pidataBANK1
   323  001F08  0EB2               	movlw	low __pidataBANK1
   324  001F0A  6EF6               	movwf	tblptrl,c
   325  001F0C  0E23               	movlw	high __pidataBANK1
   326  001F0E  6EF7               	movwf	tblptrh,c
   327  001F10  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   328  001F12  6EF8               	movwf	tblptru,c
   329  001F14  EE01  F066         	lfsr	0,__pdataBANK1
   330  001F18  EE10 F018          	lfsr	1,24
   331  001F1C                     copy_data0:
   332  001F1C  0009               	tblrd		*+
   333  001F1E  CFF5 FFEE          	movff	tablat,postinc0
   334  001F22  50E5               	movf	postdec1,w,c
   335  001F24  50E1               	movf	fsr1l,w,c
   336  001F26  E1FA               	bnz	copy_data0
   337                           
   338                           ; Initialize objects allocated to BANK0 (78 bytes)
   339                           ; load TBLPTR registers with __pidataBANK0
   340  001F28  0EE6               	movlw	low __pidataBANK0
   341  001F2A  6EF6               	movwf	tblptrl,c
   342  001F2C  0E20               	movlw	high __pidataBANK0
   343  001F2E  6EF7               	movwf	tblptrh,c
   344  001F30  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   345  001F32  6EF8               	movwf	tblptru,c
   346  001F34  EE00  F080         	lfsr	0,__pdataBANK0
   347  001F38  EE10 F04E          	lfsr	1,78
   348  001F3C                     copy_data1:
   349  001F3C  0009               	tblrd		*+
   350  001F3E  CFF5 FFEE          	movff	tablat,postinc0
   351  001F42  50E5               	movf	postdec1,w,c
   352  001F44  50E1               	movf	fsr1l,w,c
   353  001F46  E1FA               	bnz	copy_data1
   354                           
   355                           ; Initialize objects allocated to COMRAM (3 bytes)
   356                           ; load TBLPTR registers with __pidataCOMRAM
   357  001F48  0ECA               	movlw	low __pidataCOMRAM
   358  001F4A  6EF6               	movwf	tblptrl,c
   359  001F4C  0E23               	movlw	high __pidataCOMRAM
   360  001F4E  6EF7               	movwf	tblptrh,c
   361  001F50  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   362  001F52  6EF8               	movwf	tblptru,c
   363  001F54  0009               	tblrd		*+	;fetch initializer
   364  001F56  CFF5 F07C          	movff	tablat,__pdataCOMRAM
   365  001F5A  0009               	tblrd		*+	;fetch initializer
   366  001F5C  CFF5 F07D          	movff	tablat,__pdataCOMRAM+1
   367  001F60  0009               	tblrd		*+	;fetch initializer
   368  001F62  CFF5 F07E          	movff	tablat,__pdataCOMRAM+2
   369                           
   370                           ; Clear objects allocated to BANK1 (102 bytes)
   371  001F66  EE01  F000         	lfsr	0,__pbssBANK1
   372  001F6A  0E66               	movlw	102
   373  001F6C                     clear_0:
   374  001F6C  6AEE               	clrf	postinc0,c
   375  001F6E  06E8               	decf	wreg,f,c
   376  001F70  E1FD               	bnz	clear_0
   377                           
   378                           ; Clear objects allocated to BANK0 (13 bytes)
   379  001F72  EE00  F0E2         	lfsr	0,__pbssBANK0
   380  001F76  0E0D               	movlw	13
   381  001F78                     clear_1:
   382  001F78  6AEE               	clrf	postinc0,c
   383  001F7A  06E8               	decf	wreg,f,c
   384  001F7C  E1FD               	bnz	clear_1
   385                           
   386                           ; Clear objects allocated to COMRAM (6 bytes)
   387  001F7E  6A7B               	clrf	(__pbssCOMRAM+5)& (0+255),c
   388  001F80  6A7A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   389  001F82  6A79               	clrf	(__pbssCOMRAM+3)& (0+255),c
   390  001F84  6A78               	clrf	(__pbssCOMRAM+2)& (0+255),c
   391  001F86  6A77               	clrf	(__pbssCOMRAM+1)& (0+255),c
   392  001F88  6A76               	clrf	__pbssCOMRAM& (0+255),c
   393  001F8A                     end_of_initialization:
   394                           	callstack 0
   395  001F8A                     __end_of__initialization:
   396                           	callstack 0
   397  001F8A  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   398  001F8C  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   399  001F8E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   400  001F90  6EF8               	movwf	tblptru,c
   401  001F92  0100               	movlb	0
   402  001F94  EF62  F00D         	goto	_main	;jump to C main() function
   403                           
   404                           	psect	bssCOMRAM
   405  000076                     __pbssCOMRAM:
   406                           	callstack 0
   407  000076                     _prec:
   408                           	callstack 0
   409  000076                     	ds	2
   410  000078                     _flags:
   411                           	callstack 0
   412  000078                     	ds	2
   413  00007A                     _display_state:
   414                           	callstack 0
   415  00007A                     	ds	2
   416                           
   417                           	psect	dataCOMRAM
   418  00007C                     __pdataCOMRAM:
   419                           	callstack 0
   420  00007C                     _dash:
   421                           	callstack 0
   422  00007C                     	ds	1
   423  00007D                     _lcd_y:
   424                           	callstack 0
   425  00007D                     	ds	1
   426  00007E                     _lcd_x:
   427                           	callstack 0
   428  00007E                     	ds	1
   429                           
   430                           	psect	bssBANK0
   431  0000E2                     __pbssBANK0:
   432                           	callstack 0
   433  0000E2                     _nout:
   434                           	callstack 0
   435  0000E2                     	ds	2
   436  0000E4                     _width:
   437                           	callstack 0
   438  0000E4                     	ds	2
   439  0000E6                     _CONVERT:
   440                           	callstack 0
   441  0000E6                     	ds	1
   442  0000E7                     _empty:
   443                           	callstack 0
   444  0000E7                     	ds	8
   445                           
   446                           	psect	dataBANK0
   447  000080                     __pdataBANK0:
   448                           	callstack 0
   449  000080                     _gameState:
   450                           	callstack 0
   451  000080                     	ds	28
   452  00009C                     _digits:
   453                           	callstack 0
   454  00009C                     	ds	10
   455  0000A6                     _frisbee:
   456                           	callstack 0
   457  0000A6                     	ds	8
   458  0000AE                     _selected_teamB_player:
   459                           	callstack 0
   460  0000AE                     	ds	8
   461  0000B6                     _selected_teamA_player:
   462                           	callstack 0
   463  0000B6                     	ds	8
   464  0000BE                     _teamB_player:
   465                           	callstack 0
   466  0000BE                     	ds	8
   467  0000C6                     _teamA_player:
   468                           	callstack 0
   469  0000C6                     	ds	8
   470                           
   471                           	psect	bssBANK1
   472  000100                     __pbssBANK1:
   473                           	callstack 0
   474  000100                     _frisbee_steps:
   475                           	callstack 0
   476  000100                     	ds	60
   477  00013C                     	ds	10
   478  000146                     _dbuf:
   479                           	callstack 0
   480  000146                     	ds	32
   481                           
   482                           	psect	dataBANK1
   483  000166                     __pdataBANK1:
   484                           	callstack 0
   485  000166                     _frisbee_target:
   486                           	callstack 0
   487  000166                     	ds	8
   488  00016E                     _selected_teamB_player_with_frisbee:
   489                           	callstack 0
   490  00016E                     	ds	8
   491  000176                     _selected_teamA_player_with_frisbee:
   492                           	callstack 0
   493  000176                     	ds	8
   494                           
   495                           	psect	cstackBANK1
   496  00017E                     __pcstackBANK1:
   497                           	callstack 0
   498  00017E                     main@values:
   499                           	callstack 0
   500                           
   501                           ; 10 bytes @ 0x0
   502  00017E                     	ds	10
   503                           
   504                           	psect	cstackBANK0
   505  0000CE                     __pcstackBANK0:
   506                           	callstack 0
   507  0000CE                     ??_FNC:
   508                           
   509                           ; 1 bytes @ 0x0
   510  0000CE                     	ds	14
   511  0000DC                     ??_LCDCmd:
   512  0000DC                     ??_LCDDat:
   513  0000DC                     ?_readADCChannel:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0xE
   517  0000DC                     	ds	1
   518  0000DD                     LCDCmd@cmd:
   519                           	callstack 0
   520  0000DD                     LCDDat@dat:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0xF
   524  0000DD                     	ds	1
   525  0000DE                     ??_readADCChannel:
   526  0000DE                     LCDGoto@p_1:
   527                           	callstack 0
   528  0000DE                     LCDAddSpecialCharacter@data:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x10
   532  0000DE                     	ds	1
   533  0000DF                     LCDGoto@p_2:
   534                           	callstack 0
   535                           
   536                           ; 1 bytes @ 0x11
   537  0000DF                     	ds	1
   538  0000E0                     readADCChannel@channel:
   539                           	callstack 0
   540  0000E0                     LCDAddSpecialCharacter@character_index:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x12
   544  0000E0                     	ds	1
   545  0000E1                     LCDAddSpecialCharacter@i:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x13
   549  0000E1                     	ds	1
   550  0000E2                     
   551                           ; 1 bytes @ 0x14
   552                           
   553                           	psect	cstackCOMRAM
   554  000001                     __pcstackCOMRAM:
   555                           	callstack 0
   556  000001                     ??i2_LCDCmd:
   557  000001                     ??i2_LCDDat:
   558  000001                     ?_strlen:
   559                           	callstack 0
   560  000001                     ?___awmod:
   561                           	callstack 0
   562  000001                     ?___aodiv:
   563                           	callstack 0
   564  000001                     ?___aomod:
   565                           	callstack 0
   566  000001                     ___awmod@dividend:
   567                           	callstack 0
   568  000001                     fputc@c:
   569                           	callstack 0
   570  000001                     strlen@s:
   571                           	callstack 0
   572  000001                     ___aodiv@dividend:
   573                           	callstack 0
   574  000001                     ___aomod@dividend:
   575                           	callstack 0
   576                           
   577                           ; 8 bytes @ 0x0
   578  000001                     	ds	1
   579  000002                     i2LCDCmd@cmd:
   580                           	callstack 0
   581  000002                     i2LCDDat@dat:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x1
   585  000002                     	ds	1
   586  000003                     i2LCDGoto@p_1:
   587                           	callstack 0
   588  000003                     ___awmod@divisor:
   589                           	callstack 0
   590  000003                     fputc@fp:
   591                           	callstack 0
   592  000003                     strlen@a:
   593                           	callstack 0
   594  000003                     i2LCDAddSpecialCharacter@data:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x2
   598  000003                     	ds	1
   599  000004                     i2LCDGoto@p_2:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x3
   603  000004                     	ds	1
   604  000005                     ??_fputc:
   605  000005                     ___awmod@counter:
   606                           	callstack 0
   607  000005                     i2LCDAddSpecialCharacter@character_index:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x4
   611  000005                     	ds	1
   612  000006                     ___awmod@sign:
   613                           	callstack 0
   614  000006                     i2LCDAddSpecialCharacter@i:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x5
   618  000006                     	ds	3
   619  000009                     ___aodiv@divisor:
   620                           	callstack 0
   621  000009                     ___aomod@divisor:
   622                           	callstack 0
   623                           
   624                           ; 8 bytes @ 0x8
   625  000009                     	ds	1
   626  00000A                     fputs@s:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x9
   630  00000A                     	ds	2
   631  00000C                     fputs@fp:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0xB
   635  00000C                     	ds	2
   636  00000E                     fputs@c:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0xD
   640  00000E                     	ds	1
   641  00000F                     fputs@i:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0xE
   645  00000F                     	ds	2
   646  000011                     ?_pad:
   647                           	callstack 0
   648  000011                     ___aodiv@counter:
   649                           	callstack 0
   650  000011                     ___aomod@counter:
   651                           	callstack 0
   652  000011                     pad@fp:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x10
   656  000011                     	ds	1
   657  000012                     ___aodiv@sign:
   658                           	callstack 0
   659  000012                     ___aomod@sign:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x11
   663  000012                     	ds	1
   664  000013                     ?_abs:
   665                           	callstack 0
   666  000013                     pad@buf:
   667                           	callstack 0
   668  000013                     abs@a:
   669                           	callstack 0
   670  000013                     ___aodiv@quotient:
   671                           	callstack 0
   672                           
   673                           ; 8 bytes @ 0x12
   674  000013                     	ds	2
   675  000015                     ??_abs:
   676  000015                     pad@p:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x14
   680  000015                     	ds	2
   681  000017                     ??_pad:
   682                           
   683                           ; 1 bytes @ 0x16
   684  000017                     	ds	1
   685  000018                     pad@i:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x17
   689  000018                     	ds	2
   690  00001A                     pad@w:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x19
   694  00001A                     	ds	2
   695  00001C                     ?_dtoa:
   696                           	callstack 0
   697  00001C                     dtoa@fp:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x1B
   701  00001C                     	ds	2
   702  00001E                     dtoa@d:
   703                           	callstack 0
   704                           
   705                           ; 8 bytes @ 0x1D
   706  00001E                     	ds	8
   707  000026                     ??_dtoa:
   708                           
   709                           ; 1 bytes @ 0x25
   710  000026                     	ds	8
   711  00002E                     _dtoa$1228:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x2D
   715  00002E                     	ds	2
   716  000030                     dtoa@p:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x2F
   720  000030                     	ds	2
   721  000032                     dtoa@w:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x31
   725  000032                     	ds	2
   726  000034                     dtoa@s:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x33
   730  000034                     	ds	2
   731  000036                     dtoa@n:
   732                           	callstack 0
   733                           
   734                           ; 8 bytes @ 0x35
   735  000036                     	ds	8
   736  00003E                     dtoa@i:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x3D
   740  00003E                     	ds	2
   741  000040                     ?_vfpfcnvrt:
   742                           	callstack 0
   743  000040                     vfpfcnvrt@fp:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x3F
   747  000040                     	ds	2
   748  000042                     vfpfcnvrt@fmt:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x41
   752  000042                     	ds	2
   753  000044                     vfpfcnvrt@ap:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x43
   757  000044                     	ds	2
   758  000046                     ??_vfpfcnvrt:
   759                           
   760                           ; 1 bytes @ 0x45
   761  000046                     	ds	2
   762  000048                     vfpfcnvrt@ll:
   763                           	callstack 0
   764                           
   765                           ; 8 bytes @ 0x47
   766  000048                     	ds	8
   767  000050                     ?_vfprintf:
   768                           	callstack 0
   769  000050                     vfprintf@fp:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x4F
   773  000050                     	ds	2
   774  000052                     vfprintf@fmt:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x51
   778  000052                     	ds	2
   779  000054                     vfprintf@ap:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x53
   783  000054                     	ds	2
   784  000056                     vfprintf@cfmt:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x55
   788  000056                     	ds	2
   789  000058                     ?_printf:
   790                           	callstack 0
   791  000058                     printf@fmt:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x57
   795  000058                     	ds	10
   796  000062                     
   797                           ; 1 bytes @ 0x61
   798  000062                     	ds	2
   799  000064                     printf@ap:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x63
   803  000064                     	ds	2
   804  000066                     updatePlayerPositionOnLCD@oldX:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x65
   808  000066                     	ds	2
   809  000068                     updatePlayerPositionOnLCD@oldY:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x67
   813  000068                     	ds	2
   814  00006A                     updatePlayerPositionOnLCD@newX:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x69
   818  00006A                     	ds	2
   819  00006C                     updatePlayerPositionOnLCD@newY:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x6B
   823  00006C                     	ds	2
   824  00006E                     updatePlayerPositionOnLCD@selectedPlayer:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x6D
   828  00006E                     	ds	2
   829  000070                     _updatePlayerPositionOnLCD$670:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x6F
   833  000070                     	ds	2
   834  000072                     FNC@oldX:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x71
   838  000072                     	ds	2
   839  000074                     FNC@oldY:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x73
   843  000074                     	ds	2
   844                           
   845 ;;
   846 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   847 ;;
   848 ;; *************** function _main *****************
   849 ;; Defined at:
   850 ;;		line 163 in file "newmain.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  values         10    0[BANK1 ] unsigned char [10]
   855 ;;  convertion      2    0        unsigned short 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;Total ram usage:       12 bytes
   870 ;; Hardware stack levels required when called:   12
   871 ;; This function calls:
   872 ;;		_InitLCD
   873 ;;		_LCDAddSpecialCharacter
   874 ;;		_LCDDat
   875 ;;		_LCDGoto
   876 ;;		_initADC
   877 ;;		_readADCChannel
   878 ;; This function is called by:
   879 ;;		Startup code after reset
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text0
   884  001AC4                     __ptext0:
   885                           	callstack 0
   886  001AC4                     _main:
   887                           	callstack 19
   888  001AC4                     
   889                           ;newmain.c: 165:     initADC();
   890  001AC4  ECC7  F011         	call	_initADC	;wreg free
   891  001AC8                     
   892                           ;newmain.c: 167:     InitLCD();
   893  001AC8  EC6A  F011         	call	_InitLCD	;wreg free
   894                           
   895                           ;newmain.c: 168:     LATB = 0;
   896  001ACC  0E00               	movlw	0
   897  001ACE  6E8A               	movwf	138,c	;volatile
   898  001AD0                     
   899                           ;newmain.c: 183:     LCDAddSpecialCharacter(0, selected_teamA_player);
   900  001AD0  0EB6               	movlw	low _selected_teamA_player
   901  001AD2  0100               	movlb	0	; () banked
   902  001AD4  6FDE               	movwf	LCDAddSpecialCharacter@data& (0+255),b
   903  001AD6  0E00               	movlw	high _selected_teamA_player
   904  001AD8  6FDF               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
   905  001ADA  0E00               	movlw	0
   906  001ADC  ECBC  F010         	call	_LCDAddSpecialCharacter
   907  001AE0                     
   908                           ;newmain.c: 184:     LCDAddSpecialCharacter(1, teamA_player);
   909  001AE0  0EC6               	movlw	low _teamA_player
   910  001AE2  0100               	movlb	0	; () banked
   911  001AE4  6FDE               	movwf	LCDAddSpecialCharacter@data& (0+255),b
   912  001AE6  0E00               	movlw	high _teamA_player
   913  001AE8  6FDF               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
   914  001AEA  0E01               	movlw	1
   915  001AEC  ECBC  F010         	call	_LCDAddSpecialCharacter
   916  001AF0                     
   917                           ;newmain.c: 185:     LCDAddSpecialCharacter(2, teamB_player);
   918  001AF0  0EBE               	movlw	low _teamB_player
   919  001AF2  0100               	movlb	0	; () banked
   920  001AF4  6FDE               	movwf	LCDAddSpecialCharacter@data& (0+255),b
   921  001AF6  0E00               	movlw	high _teamB_player
   922  001AF8  6FDF               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
   923  001AFA  0E02               	movlw	2
   924  001AFC  ECBC  F010         	call	_LCDAddSpecialCharacter
   925  001B00                     
   926                           ;newmain.c: 186:     LCDAddSpecialCharacter(3, teamB_player);
   927  001B00  0EBE               	movlw	low _teamB_player
   928  001B02  0100               	movlb	0	; () banked
   929  001B04  6FDE               	movwf	LCDAddSpecialCharacter@data& (0+255),b
   930  001B06  0E00               	movlw	high _teamB_player
   931  001B08  6FDF               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
   932  001B0A  0E03               	movlw	3
   933  001B0C  ECBC  F010         	call	_LCDAddSpecialCharacter
   934  001B10                     
   935                           ;newmain.c: 187:     LCDAddSpecialCharacter(4, frisbee);
   936  001B10  0EA6               	movlw	low _frisbee
   937  001B12  0100               	movlb	0	; () banked
   938  001B14  6FDE               	movwf	LCDAddSpecialCharacter@data& (0+255),b
   939  001B16  0E00               	movlw	high _frisbee
   940  001B18  6FDF               	movwf	(LCDAddSpecialCharacter@data+1)& (0+255),b
   941  001B1A  0E04               	movlw	4
   942  001B1C  ECBC  F010         	call	_LCDAddSpecialCharacter
   943  001B20                     
   944                           ;newmain.c: 188:     LCDGoto(3, 2);
   945  001B20  0E02               	movlw	2
   946  001B22  0100               	movlb	0	; () banked
   947  001B24  6FDE               	movwf	LCDGoto@p_1& (0+255),b
   948  001B26  0E03               	movlw	3
   949  001B28  ECCC  F00F         	call	_LCDGoto
   950  001B2C                     
   951                           ;newmain.c: 189:     LCDDat(0);
   952  001B2C  0E00               	movlw	0
   953  001B2E  ECFC  F010         	call	_LCDDat
   954  001B32                     
   955                           ;newmain.c: 190:     LCDGoto(3, 3);
   956  001B32  0E03               	movlw	3
   957  001B34  0100               	movlb	0	; () banked
   958  001B36  6FDE               	movwf	LCDGoto@p_1& (0+255),b
   959  001B38  0E03               	movlw	3
   960  001B3A  ECCC  F00F         	call	_LCDGoto
   961  001B3E                     
   962                           ;newmain.c: 191:     LCDDat(1);
   963  001B3E  0E01               	movlw	1
   964  001B40  ECFC  F010         	call	_LCDDat
   965  001B44                     
   966                           ;newmain.c: 193:     LCDGoto(14, 2);
   967  001B44  0E02               	movlw	2
   968  001B46  0100               	movlb	0	; () banked
   969  001B48  6FDE               	movwf	LCDGoto@p_1& (0+255),b
   970  001B4A  0E0E               	movlw	14
   971  001B4C  ECCC  F00F         	call	_LCDGoto
   972  001B50                     
   973                           ;newmain.c: 194:     LCDDat(2);
   974  001B50  0E02               	movlw	2
   975  001B52  ECFC  F010         	call	_LCDDat
   976  001B56                     
   977                           ;newmain.c: 196:     LCDGoto(14, 3);
   978  001B56  0E03               	movlw	3
   979  001B58  0100               	movlb	0	; () banked
   980  001B5A  6FDE               	movwf	LCDGoto@p_1& (0+255),b
   981  001B5C  0E0E               	movlw	14
   982  001B5E  ECCC  F00F         	call	_LCDGoto
   983  001B62                     
   984                           ;newmain.c: 197:     LCDDat(3);
   985  001B62  0E03               	movlw	3
   986  001B64  ECFC  F010         	call	_LCDDat
   987  001B68                     
   988                           ;newmain.c: 199:     LCDGoto(9, 2);
   989  001B68  0E02               	movlw	2
   990  001B6A  0100               	movlb	0	; () banked
   991  001B6C  6FDE               	movwf	LCDGoto@p_1& (0+255),b
   992  001B6E  0E09               	movlw	9
   993  001B70  ECCC  F00F         	call	_LCDGoto
   994  001B74                     
   995                           ;newmain.c: 200:     LCDDat(4);
   996  001B74  0E04               	movlw	4
   997  001B76  ECFC  F010         	call	_LCDDat
   998  001B7A                     
   999                           ;newmain.c: 204:     char values[10] = {0};
  1000  001B7A  EE21  F07E         	lfsr	2,main@values
  1001  001B7E  0E09               	movlw	9
  1002  001B80                     u1791:
  1003  001B80  6ADE               	clrf	postinc2,c
  1004  001B82  06E8               	decf	wreg,f,c
  1005  001B84  E2FD               	bc	u1791
  1006  001B86                     
  1007                           ;newmain.c: 207:     TRISBbits.RB0 = 1;
  1008  001B86  8093               	bsf	147,0,c	;volatile
  1009  001B88                     
  1010                           ;newmain.c: 208:     TRISBbits.RB4 = 1;
  1011  001B88  8893               	bsf	147,4,c	;volatile
  1012  001B8A                     
  1013                           ;newmain.c: 209:     TRISBbits.RB5 = 1;
  1014  001B8A  8A93               	bsf	147,5,c	;volatile
  1015  001B8C                     
  1016                           ;newmain.c: 210:     TRISBbits.RB6 = 1;
  1017  001B8C  8C93               	bsf	147,6,c	;volatile
  1018  001B8E                     
  1019                           ;newmain.c: 211:     TRISBbits.RB7 = 1;
  1020  001B8E  8E93               	bsf	147,7,c	;volatile
  1021  001B90                     
  1022                           ;newmain.c: 214:     INTCONbits.RBIE = 1;
  1023  001B90  86F2               	bsf	242,3,c	;volatile
  1024  001B92                     
  1025                           ;newmain.c: 217:     INTCONbits.RBIF = 0;
  1026  001B92  90F2               	bcf	242,0,c	;volatile
  1027  001B94                     
  1028                           ;newmain.c: 223:     INTCONbits.INT0IE = 1;
  1029  001B94  88F2               	bsf	242,4,c	;volatile
  1030  001B96                     
  1031                           ;newmain.c: 224:     INTCONbits.INT0IF = 0;
  1032  001B96  92F2               	bcf	242,1,c	;volatile
  1033  001B98                     
  1034                           ;newmain.c: 225:     INTCONbits.GIE = 1;
  1035  001B98  8EF2               	bsf	242,7,c	;volatile
  1036  001B9A                     
  1037                           ;newmain.c: 226:     INTCONbits.PEIE = 1;
  1038  001B9A  8CF2               	bsf	242,6,c	;volatile
  1039  001B9C                     
  1040                           ;newmain.c: 227:     INTCONbits.TMR0IE = 1;
  1041  001B9C  8AF2               	bsf	242,5,c	;volatile
  1042  001B9E                     
  1043                           ;newmain.c: 229:     T0CON = 0b11000111;
  1044  001B9E  0EC7               	movlw	199
  1045  001BA0  6ED5               	movwf	213,c	;volatile
  1046  001BA2                     l2577:
  1047                           
  1048                           ;newmain.c: 231:     {;newmain.c: 232:         if(CONVERT == 1)
  1049  001BA2  0100               	movlb	0	; () banked
  1050  001BA4  05E6               	decf	_CONVERT& (0+255),w,b	;volatile
  1051  001BA6  A4D8               	btfss	status,2,c
  1052  001BA8  EFD8  F00D         	goto	u1801
  1053  001BAC  EFDA  F00D         	goto	u1800
  1054  001BB0                     u1801:
  1055  001BB0  EFD1  F00D         	goto	l2577
  1056  001BB4                     u1800:
  1057  001BB4                     
  1058                           ; BSR set to: 0
  1059  001BB4  0E00               	movlw	0
  1060  001BB6  EC9D  F00E         	call	_readADCChannel
  1061  001BBA                     
  1062                           ;newmain.c: 239:             CONVERT = 0;
  1063  001BBA  0E00               	movlw	0
  1064  001BBC  0100               	movlb	0	; () banked
  1065  001BBE  6FE6               	movwf	_CONVERT& (0+255),b	;volatile
  1066  001BC0  EFD1  F00D         	goto	l2577
  1067  001BC4  EF07  F000         	goto	start
  1068  001BC8                     __end_of_main:
  1069                           	callstack 0
  1070                           
  1071 ;; *************** function _readADCChannel *****************
  1072 ;; Defined at:
  1073 ;;		line 13 in file "./ADC.h"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  channel         1    wreg     unsigned char 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  channel         1   18[BANK0 ] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  2   14[BANK0 ] unsigned short 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1087 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;Total ram usage:        5 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; Hardware stack levels required when called:   10
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text1
  1102  001D3A                     __ptext1:
  1103                           	callstack 0
  1104  001D3A                     _readADCChannel:
  1105                           	callstack 20
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;incstack = 0
  1109                           ;readADCChannel@channel stored from wreg
  1110  001D3A  0100               	movlb	0	; () banked
  1111  001D3C  6FE0               	movwf	readADCChannel@channel& (0+255),b
  1112  001D3E                     
  1113                           ;./ADC.h: 13:     unsigned short readADCChannel(unsigned char channel);./ADC.h: 14:     
      +                          {;./ADC.h: 16:         ADCON0bits.CHS0 = channel & 0x1;
  1114  001D3E  C0E0  F0DE         	movff	readADCChannel@channel,??_readADCChannel
  1115  001D42  0E01               	movlw	1
  1116  001D44  0100               	movlb	0	; () banked
  1117  001D46  17DE               	andwf	??_readADCChannel& (0+255),f,b
  1118  001D48  47DE               	rlncf	??_readADCChannel& (0+255),f,b
  1119  001D4A  47DE               	rlncf	??_readADCChannel& (0+255),f,b
  1120  001D4C  50C2               	movf	194,w,c	;volatile
  1121  001D4E  19DE               	xorwf	??_readADCChannel& (0+255),w,b
  1122  001D50  0BFB               	andlw	-5
  1123  001D52  19DE               	xorwf	??_readADCChannel& (0+255),w,b
  1124  001D54  6EC2               	movwf	194,c	;volatile
  1125                           
  1126                           ;./ADC.h: 17:         ADCON0bits.CHS1 = (channel >> 1) & 0x1;
  1127  001D56  C0E0  F0DE         	movff	readADCChannel@channel,??_readADCChannel
  1128  001D5A  90D8               	bcf	status,0,c
  1129  001D5C  33DE               	rrcf	??_readADCChannel& (0+255),f,b
  1130  001D5E  0E01               	movlw	1
  1131  001D60  17DE               	andwf	??_readADCChannel& (0+255),f,b
  1132  001D62  47DE               	rlncf	??_readADCChannel& (0+255),f,b
  1133  001D64  47DE               	rlncf	??_readADCChannel& (0+255),f,b
  1134  001D66  47DE               	rlncf	??_readADCChannel& (0+255),f,b
  1135  001D68  50C2               	movf	194,w,c	;volatile
  1136  001D6A  19DE               	xorwf	??_readADCChannel& (0+255),w,b
  1137  001D6C  0BF7               	andlw	-9
  1138  001D6E  19DE               	xorwf	??_readADCChannel& (0+255),w,b
  1139  001D70  6EC2               	movwf	194,c	;volatile
  1140                           
  1141                           ;./ADC.h: 18:         ADCON0bits.CHS2 = (channel >> 2) & 0x1;
  1142  001D72  C0E0  F0DE         	movff	readADCChannel@channel,??_readADCChannel
  1143  001D76  90D8               	bcf	status,0,c
  1144  001D78  33DE               	rrcf	??_readADCChannel& (0+255),f,b
  1145  001D7A  90D8               	bcf	status,0,c
  1146  001D7C  33DE               	rrcf	??_readADCChannel& (0+255),f,b
  1147  001D7E  0E01               	movlw	1
  1148  001D80  17DE               	andwf	??_readADCChannel& (0+255),f,b
  1149  001D82  3BDE               	swapf	??_readADCChannel& (0+255),f,b
  1150  001D84  50C2               	movf	194,w,c	;volatile
  1151  001D86  19DE               	xorwf	??_readADCChannel& (0+255),w,b
  1152  001D88  0BEF               	andlw	-17
  1153  001D8A  19DE               	xorwf	??_readADCChannel& (0+255),w,b
  1154  001D8C  6EC2               	movwf	194,c	;volatile
  1155                           
  1156                           ;./ADC.h: 19:         ADCON0bits.CHS3 = (channel >> 3) & 0x1;
  1157  001D8E  C0E0  F0DE         	movff	readADCChannel@channel,??_readADCChannel
  1158  001D92  90D8               	bcf	status,0,c
  1159  001D94  33DE               	rrcf	??_readADCChannel& (0+255),f,b
  1160  001D96  90D8               	bcf	status,0,c
  1161  001D98  33DE               	rrcf	??_readADCChannel& (0+255),f,b
  1162  001D9A  90D8               	bcf	status,0,c
  1163  001D9C  33DE               	rrcf	??_readADCChannel& (0+255),f,b
  1164  001D9E  0E01               	movlw	1
  1165  001DA0  17DE               	andwf	??_readADCChannel& (0+255),f,b
  1166  001DA2  3BDE               	swapf	??_readADCChannel& (0+255),f,b
  1167  001DA4  47DE               	rlncf	??_readADCChannel& (0+255),f,b
  1168  001DA6  50C2               	movf	194,w,c	;volatile
  1169  001DA8  19DE               	xorwf	??_readADCChannel& (0+255),w,b
  1170  001DAA  0BDF               	andlw	-33
  1171  001DAC  19DE               	xorwf	??_readADCChannel& (0+255),w,b
  1172  001DAE  6EC2               	movwf	194,c	;volatile
  1173  001DB0                     
  1174                           ; BSR set to: 0
  1175                           ;./ADC.h: 23:         ADCON0bits.GODONE = 1;
  1176  001DB0  82C2               	bsf	194,1,c	;volatile
  1177  001DB2                     l51:
  1178  001DB2  B2C2               	btfsc	194,1,c	;volatile
  1179  001DB4  EFDE  F00E         	goto	u1711
  1180  001DB8  EFE0  F00E         	goto	u1710
  1181  001DBC                     u1711:
  1182  001DBC  EFD9  F00E         	goto	l51
  1183  001DC0                     u1710:
  1184  001DC0                     
  1185                           ;./ADC.h: 28:         PIR1bits.ADIF = 0;
  1186  001DC0  9C9E               	bcf	158,6,c	;volatile
  1187  001DC2                     
  1188                           ;./ADC.h: 30:         return (unsigned short)((ADRESH << 8)+ADRESL);
  1189  001DC2  50C4               	movf	196,w,c	;volatile
  1190  001DC4  0100               	movlb	0	; () banked
  1191  001DC6  6FDF               	movwf	(??_readADCChannel+1)& (0+255),b
  1192  001DC8  6BDE               	clrf	??_readADCChannel& (0+255),b
  1193  001DCA  50C3               	movf	195,w,c	;volatile
  1194  001DCC  25DE               	addwf	??_readADCChannel& (0+255),w,b
  1195  001DCE  6FDC               	movwf	?_readADCChannel& (0+255),b
  1196  001DD0  0E00               	movlw	0
  1197  001DD2  21DF               	addwfc	(??_readADCChannel+1)& (0+255),w,b
  1198  001DD4  6FDD               	movwf	(?_readADCChannel+1)& (0+255),b
  1199  001DD6                     
  1200                           ; BSR set to: 0
  1201  001DD6  0012               	return		;funcret
  1202  001DD8                     __end_of_readADCChannel:
  1203                           	callstack 0
  1204                           
  1205 ;; *************** function _initADC *****************
  1206 ;; Defined at:
  1207 ;;		line 35 in file "./ADC.h"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		None
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:   10
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text2
  1236  00238E                     __ptext2:
  1237                           	callstack 0
  1238  00238E                     _initADC:
  1239                           	callstack 20
  1240  00238E                     
  1241                           ;./ADC.h: 37:         ADCON1bits.PCFG3 = 1;
  1242  00238E  86C1               	bsf	193,3,c	;volatile
  1243                           
  1244                           ;./ADC.h: 38:         ADCON1bits.PCFG2 = 1;
  1245  002390  84C1               	bsf	193,2,c	;volatile
  1246                           
  1247                           ;./ADC.h: 39:         ADCON1bits.PCFG1 = 0;
  1248  002392  92C1               	bcf	193,1,c	;volatile
  1249                           
  1250                           ;./ADC.h: 40:         ADCON1bits.PCFG0 = 0;
  1251  002394  90C1               	bcf	193,0,c	;volatile
  1252                           
  1253                           ;./ADC.h: 42:         ADCON1bits.VCFG0 = 0;
  1254  002396  98C1               	bcf	193,4,c	;volatile
  1255                           
  1256                           ;./ADC.h: 43:         ADCON1bits.VCFG1 = 0;
  1257  002398  9AC1               	bcf	193,5,c	;volatile
  1258                           
  1259                           ;./ADC.h: 45:         TRISAbits.RA0 = 1;
  1260  00239A  8092               	bsf	146,0,c	;volatile
  1261                           
  1262                           ;./ADC.h: 46:         TRISAbits.RA1 = 1;
  1263  00239C  8292               	bsf	146,1,c	;volatile
  1264                           
  1265                           ;./ADC.h: 47:         TRISAbits.RA2 = 0;
  1266  00239E  9492               	bcf	146,2,c	;volatile
  1267                           
  1268                           ;./ADC.h: 56:         ADCON2bits.ADCS2 = 0;
  1269  0023A0  94C0               	bcf	192,2,c	;volatile
  1270                           
  1271                           ;./ADC.h: 57:         ADCON2bits.ADCS1 = 1;
  1272  0023A2  82C0               	bsf	192,1,c	;volatile
  1273                           
  1274                           ;./ADC.h: 58:         ADCON2bits.ADCS0 = 0;
  1275  0023A4  90C0               	bcf	192,0,c	;volatile
  1276                           
  1277                           ;./ADC.h: 60:         ADCON2bits.ACQT2 = 0;
  1278  0023A6  9AC0               	bcf	192,5,c	;volatile
  1279                           
  1280                           ;./ADC.h: 61:         ADCON2bits.ACQT1 = 1;
  1281  0023A8  88C0               	bsf	192,4,c	;volatile
  1282                           
  1283                           ;./ADC.h: 62:         ADCON2bits.ACQT0 = 0;
  1284  0023AA  96C0               	bcf	192,3,c	;volatile
  1285                           
  1286                           ;./ADC.h: 64:         ADCON2bits.ADFM = 1;
  1287  0023AC  8EC0               	bsf	192,7,c	;volatile
  1288                           
  1289                           ;./ADC.h: 66:         ADCON0bits.ADON = 1;
  1290  0023AE  80C2               	bsf	194,0,c	;volatile
  1291  0023B0  0012               	return		;funcret
  1292  0023B2                     __end_of_initADC:
  1293                           	callstack 0
  1294                           
  1295 ;; *************** function _LCDGoto *****************
  1296 ;; Defined at:
  1297 ;;		line 72 in file "./LCD.h"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  p_2             1    wreg     unsigned char 
  1300 ;;  p_1             1   16[BANK0 ] unsigned char 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  p_2             1   17[BANK0 ] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1312 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;Total ram usage:        2 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:   11
  1319 ;; This function calls:
  1320 ;;		_LCDCmd
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text3
  1327  001F98                     __ptext3:
  1328                           	callstack 0
  1329  001F98                     _LCDGoto:
  1330                           	callstack 19
  1331                           
  1332                           ;incstack = 0
  1333                           ;LCDGoto@p_2 stored from wreg
  1334  001F98  0100               	movlb	0	; () banked
  1335  001F9A  6FDF               	movwf	LCDGoto@p_2& (0+255),b
  1336  001F9C                     
  1337                           ;./LCD.h: 73:   if(p_1==1) {
  1338  001F9C  0100               	movlb	0	; () banked
  1339  001F9E  05DE               	decf	LCDGoto@p_1& (0+255),w,b
  1340  001FA0  A4D8               	btfss	status,2,c
  1341  001FA2  EFD5  F00F         	goto	u1721
  1342  001FA6  EFD7  F00F         	goto	u1720
  1343  001FAA                     u1721:
  1344  001FAA  EFDE  F00F         	goto	l2445
  1345  001FAE                     u1720:
  1346  001FAE                     
  1347                           ; BSR set to: 0
  1348                           ;./LCD.h: 74:     LCDCmd(0x80 +((p_2-1)%16));
  1349  001FAE  05DF               	decf	LCDGoto@p_2& (0+255),w,b
  1350  001FB0  0B0F               	andlw	15
  1351  001FB2  0F80               	addlw	128
  1352  001FB4  EC34  F011         	call	_LCDCmd
  1353                           
  1354                           ;./LCD.h: 75:   }
  1355  001FB8  EF03  F010         	goto	l2455
  1356  001FBC                     l2445:
  1357                           
  1358                           ; BSR set to: 0
  1359  001FBC  0E02               	movlw	2
  1360  001FBE  19DE               	xorwf	LCDGoto@p_1& (0+255),w,b
  1361  001FC0  A4D8               	btfss	status,2,c
  1362  001FC2  EFE5  F00F         	goto	u1731
  1363  001FC6  EFE7  F00F         	goto	u1730
  1364  001FCA                     u1731:
  1365  001FCA  EFEE  F00F         	goto	l2449
  1366  001FCE                     u1730:
  1367  001FCE                     
  1368                           ; BSR set to: 0
  1369                           ;./LCD.h: 77:     LCDCmd(0xC0 +((p_2-1)%16));
  1370  001FCE  05DF               	decf	LCDGoto@p_2& (0+255),w,b
  1371  001FD0  0B0F               	andlw	15
  1372  001FD2  0FC0               	addlw	192
  1373  001FD4  EC34  F011         	call	_LCDCmd
  1374                           
  1375                           ;./LCD.h: 78:   }
  1376  001FD8  EF03  F010         	goto	l2455
  1377  001FDC                     l2449:
  1378                           
  1379                           ; BSR set to: 0
  1380  001FDC  0E03               	movlw	3
  1381  001FDE  19DE               	xorwf	LCDGoto@p_1& (0+255),w,b
  1382  001FE0  A4D8               	btfss	status,2,c
  1383  001FE2  EFF5  F00F         	goto	u1741
  1384  001FE6  EFF7  F00F         	goto	u1740
  1385  001FEA                     u1741:
  1386  001FEA  EFFE  F00F         	goto	l2453
  1387  001FEE                     u1740:
  1388  001FEE                     
  1389                           ; BSR set to: 0
  1390                           ;./LCD.h: 80:     LCDCmd(0x90 +((p_2-1)%16));
  1391  001FEE  05DF               	decf	LCDGoto@p_2& (0+255),w,b
  1392  001FF0  0B0F               	andlw	15
  1393  001FF2  0F90               	addlw	144
  1394  001FF4  EC34  F011         	call	_LCDCmd
  1395                           
  1396                           ;./LCD.h: 81:   }
  1397  001FF8  EF03  F010         	goto	l2455
  1398  001FFC                     l2453:
  1399                           
  1400                           ; BSR set to: 0
  1401                           ;./LCD.h: 83:     LCDCmd(0xD0 +((p_2-1)%16));
  1402  001FFC  05DF               	decf	LCDGoto@p_2& (0+255),w,b
  1403  001FFE  0B0F               	andlw	15
  1404  002000  0FD0               	addlw	208
  1405  002002  EC34  F011         	call	_LCDCmd
  1406  002006                     l2455:
  1407                           
  1408                           ;./LCD.h: 85:   lcd_x = p_2;
  1409  002006  C0DF  F07E         	movff	LCDGoto@p_2,_lcd_x
  1410  00200A                     
  1411                           ;./LCD.h: 86:   lcd_y = p_1;
  1412  00200A  C0DE  F07D         	movff	LCDGoto@p_1,_lcd_y
  1413  00200E  0012               	return		;funcret
  1414  002010                     __end_of_LCDGoto:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _LCDAddSpecialCharacter *****************
  1418 ;; Defined at:
  1419 ;;		line 129 in file "./LCD.h"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  character_in    1    wreg     unsigned char 
  1422 ;;  data            2   16[BANK0 ] PTR unsigned char 
  1423 ;;		 -> frisbee(8), teamB_player(8), teamA_player(8), selected_teamB_player(8), 
  1424 ;;		 -> selected_teamA_player(8), empty(8), 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  character_in    1   18[BANK0 ] unsigned char 
  1427 ;;  i               1   19[BANK0 ] unsigned char 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1437 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;Total ram usage:        4 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; Hardware stack levels required when called:   11
  1444 ;; This function calls:
  1445 ;;		_LCDCmd
  1446 ;;		_LCDDat
  1447 ;; This function is called by:
  1448 ;;		_main
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text4
  1453  002178                     __ptext4:
  1454                           	callstack 0
  1455  002178                     _LCDAddSpecialCharacter:
  1456                           	callstack 19
  1457                           
  1458                           ;incstack = 0
  1459                           ;LCDAddSpecialCharacter@character_index stored from wreg
  1460  002178  0100               	movlb	0	; () banked
  1461  00217A  6FE0               	movwf	LCDAddSpecialCharacter@character_index& (0+255),b
  1462  00217C                     
  1463                           ;./LCD.h: 135:     LCDCmd(0b01000000+(character_index*8));
  1464  00217C  0100               	movlb	0	; () banked
  1465  00217E  51E0               	movf	LCDAddSpecialCharacter@character_index& (0+255),w,b
  1466  002180  0D08               	mullw	8
  1467  002182  50F3               	movf	243,w,c
  1468  002184  0F40               	addlw	64
  1469  002186  EC34  F011         	call	_LCDCmd
  1470  00218A                     
  1471                           ;./LCD.h: 136:     for(byte i=0; i < 8; i++) {
  1472  00218A  0E00               	movlw	0
  1473  00218C  0100               	movlb	0	; () banked
  1474  00218E  6FE1               	movwf	LCDAddSpecialCharacter@i& (0+255),b
  1475  002190                     l2487:
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;./LCD.h: 137:         LCDDat(data[i]);
  1479  002190  51E1               	movf	LCDAddSpecialCharacter@i& (0+255),w,b
  1480  002192  25DE               	addwf	LCDAddSpecialCharacter@data& (0+255),w,b
  1481  002194  6ED9               	movwf	fsr2l,c
  1482  002196  0E00               	movlw	0
  1483  002198  21DF               	addwfc	(LCDAddSpecialCharacter@data+1)& (0+255),w,b
  1484  00219A  6EDA               	movwf	fsr2h,c
  1485  00219C  50DF               	movf	indf2,w,c
  1486  00219E  ECFC  F010         	call	_LCDDat
  1487  0021A2                     
  1488                           ;./LCD.h: 138:     }
  1489  0021A2  0100               	movlb	0	; () banked
  1490  0021A4  2BE1               	incf	LCDAddSpecialCharacter@i& (0+255),f,b
  1491  0021A6                     
  1492                           ; BSR set to: 0
  1493  0021A6  0E07               	movlw	7
  1494  0021A8  65E1               	cpfsgt	LCDAddSpecialCharacter@i& (0+255),b
  1495  0021AA  EFD9  F010         	goto	u1751
  1496  0021AE  EFDB  F010         	goto	u1750
  1497  0021B2                     u1751:
  1498  0021B2  EFC8  F010         	goto	l2487
  1499  0021B6                     u1750:
  1500  0021B6                     
  1501                           ; BSR set to: 0
  1502  0021B6  0012               	return		;funcret
  1503  0021B8                     __end_of_LCDAddSpecialCharacter:
  1504                           	callstack 0
  1505                           
  1506 ;; *************** function _LCDDat *****************
  1507 ;; Defined at:
  1508 ;;		line 58 in file "./LCD.h"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  dat             1    wreg     unsigned char 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  dat             1   15[BANK0 ] unsigned char 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      void 
  1515 ;; Registers used:
  1516 ;;		wreg
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;Total ram usage:        2 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:   10
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_LCDAddSpecialCharacter
  1533 ;;		_main
  1534 ;;		_LCDStr
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text5
  1539  0021F8                     __ptext5:
  1540                           	callstack 0
  1541  0021F8                     _LCDDat:
  1542                           	callstack 20
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;incstack = 0
  1546                           ;LCDDat@dat stored from wreg
  1547  0021F8  0100               	movlb	0	; () banked
  1548  0021FA  6FDD               	movwf	LCDDat@dat& (0+255),b
  1549  0021FC                     
  1550                           ;./LCD.h: 59:   PORTEbits.RE1 = 0;
  1551  0021FC  9284               	bcf	132,1,c	;volatile
  1552                           
  1553                           ;./LCD.h: 60:   PORTEbits.RE2 = 1;
  1554  0021FE  8484               	bsf	132,2,c	;volatile
  1555  002200                     
  1556                           ;./LCD.h: 61:   PORTD = dat;
  1557  002200  C0DD  FF83         	movff	LCDDat@dat,3971	;volatile
  1558  002204                     
  1559                           ;./LCD.h: 62:   PORTEbits.RE1 = 1;
  1560  002204  8284               	bsf	132,1,c	;volatile
  1561  002206                     
  1562                           ;./LCD.h: 63:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  1563  002206  0E1A               	movlw	26
  1564  002208  0100               	movlb	0	; () banked
  1565  00220A  6FDC               	movwf	??_LCDDat& (0+255),b
  1566  00220C  0EF8               	movlw	248
  1567  00220E                     u1817:
  1568  00220E  2EE8               	decfsz	wreg,f,c
  1569  002210  D7FE               	bra	u1817
  1570  002212  2FDC               	decfsz	??_LCDDat& (0+255),f,b
  1571  002214  D7FC               	bra	u1817
  1572  002216  F000               	nop	
  1573  002218                     
  1574                           ;./LCD.h: 64:   PORTEbits.RE1 = 0;
  1575  002218  9284               	bcf	132,1,c	;volatile
  1576  00221A                     
  1577                           ;./LCD.h: 65:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  1578  00221A  0E1A               	movlw	26
  1579  00221C  0100               	movlb	0	; () banked
  1580  00221E  6FDC               	movwf	??_LCDDat& (0+255),b
  1581  002220  0EF8               	movlw	248
  1582  002222                     u1827:
  1583  002222  2EE8               	decfsz	wreg,f,c
  1584  002224  D7FE               	bra	u1827
  1585  002226  2FDC               	decfsz	??_LCDDat& (0+255),f,b
  1586  002228  D7FC               	bra	u1827
  1587  00222A  F000               	nop	
  1588  00222C                     
  1589                           ;./LCD.h: 66:   PORTEbits.RE2 = 0;
  1590  00222C  9484               	bcf	132,2,c	;volatile
  1591  00222E  0012               	return		;funcret
  1592  002230                     __end_of_LCDDat:
  1593                           	callstack 0
  1594                           
  1595 ;; *************** function _InitLCD *****************
  1596 ;; Defined at:
  1597 ;;		line 108 in file "./LCD.h"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;Total ram usage:        0 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:   11
  1618 ;; This function calls:
  1619 ;;		_LCDCmd
  1620 ;; This function is called by:
  1621 ;;		_main
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text6
  1626  0022D4                     __ptext6:
  1627                           	callstack 0
  1628  0022D4                     _InitLCD:
  1629                           	callstack 19
  1630  0022D4                     
  1631                           ;./LCD.h: 109:   TRISEbits.RE1 = 0;
  1632  0022D4  9296               	bcf	150,1,c	;volatile
  1633                           
  1634                           ;./LCD.h: 110:   TRISEbits.RE2 = 0;
  1635  0022D6  9496               	bcf	150,2,c	;volatile
  1636  0022D8                     
  1637                           ;./LCD.h: 111:   TRISD = 0;
  1638  0022D8  0E00               	movlw	0
  1639  0022DA  6E95               	movwf	149,c	;volatile
  1640  0022DC                     
  1641                           ;./LCD.h: 113:   PORTEbits.RE1 = 0;
  1642  0022DC  9284               	bcf	132,1,c	;volatile
  1643  0022DE                     
  1644                           ;./LCD.h: 114:   PORTEbits.RE2 = 0;
  1645  0022DE  9484               	bcf	132,2,c	;volatile
  1646  0022E0                     
  1647                           ;./LCD.h: 115:   LCDCmd(0x38);
  1648  0022E0  0E38               	movlw	56
  1649  0022E2  EC34  F011         	call	_LCDCmd
  1650  0022E6                     
  1651                           ;./LCD.h: 116:   LCDCmd(0x08);
  1652  0022E6  0E08               	movlw	8
  1653  0022E8  EC34  F011         	call	_LCDCmd
  1654  0022EC                     
  1655                           ;./LCD.h: 117:   LCDCmd(0x0C);
  1656  0022EC  0E0C               	movlw	12
  1657  0022EE  EC34  F011         	call	_LCDCmd
  1658  0022F2                     
  1659                           ;./LCD.h: 118:   LCDCmd(0x06);
  1660  0022F2  0E06               	movlw	6
  1661  0022F4  EC34  F011         	call	_LCDCmd
  1662  0022F8                     
  1663                           ;./LCD.h: 119:   LCDCmd(0x01);
  1664  0022F8  0E01               	movlw	1
  1665  0022FA  EC34  F011         	call	_LCDCmd
  1666  0022FE                     
  1667                           ;./LCD.h: 120:   LCDCmd(0x80);
  1668  0022FE  0E80               	movlw	128
  1669  002300  EC34  F011         	call	_LCDCmd
  1670  002304  0012               	return		;funcret
  1671  002306                     __end_of_InitLCD:
  1672                           	callstack 0
  1673                           
  1674 ;; *************** function _LCDCmd *****************
  1675 ;; Defined at:
  1676 ;;		line 48 in file "./LCD.h"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  cmd             1    wreg     unsigned char 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  cmd             1   15[BANK0 ] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;Total ram usage:        2 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:   10
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_LCDGoto
  1701 ;;		_InitLCD
  1702 ;;		_LCDAddSpecialCharacter
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text7
  1707  002268                     __ptext7:
  1708                           	callstack 0
  1709  002268                     _LCDCmd:
  1710                           	callstack 19
  1711                           
  1712                           ;incstack = 0
  1713                           ;LCDCmd@cmd stored from wreg
  1714  002268  0100               	movlb	0	; () banked
  1715  00226A  6FDD               	movwf	LCDCmd@cmd& (0+255),b
  1716  00226C                     
  1717                           ;./LCD.h: 49:   PORTEbits.RE1 = 0;
  1718  00226C  9284               	bcf	132,1,c	;volatile
  1719                           
  1720                           ;./LCD.h: 50:   PORTEbits.RE2 = 0;
  1721  00226E  9484               	bcf	132,2,c	;volatile
  1722  002270                     
  1723                           ;./LCD.h: 51:   PORTD = cmd;
  1724  002270  C0DD  FF83         	movff	LCDCmd@cmd,3971	;volatile
  1725  002274                     
  1726                           ;./LCD.h: 52:   PORTEbits.RE1 = 1;
  1727  002274  8284               	bsf	132,1,c	;volatile
  1728  002276                     
  1729                           ;./LCD.h: 53:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  1730  002276  0E1A               	movlw	26
  1731  002278  0100               	movlb	0	; () banked
  1732  00227A  6FDC               	movwf	??_LCDCmd& (0+255),b
  1733  00227C  0EF8               	movlw	248
  1734  00227E                     u1837:
  1735  00227E  2EE8               	decfsz	wreg,f,c
  1736  002280  D7FE               	bra	u1837
  1737  002282  2FDC               	decfsz	??_LCDCmd& (0+255),f,b
  1738  002284  D7FC               	bra	u1837
  1739  002286  F000               	nop	
  1740  002288                     
  1741                           ;./LCD.h: 54:   PORTEbits.RE1 = 0;
  1742  002288  9284               	bcf	132,1,c	;volatile
  1743  00228A                     
  1744                           ;./LCD.h: 55:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  1745  00228A  0E1A               	movlw	26
  1746  00228C  0100               	movlb	0	; () banked
  1747  00228E  6FDC               	movwf	??_LCDCmd& (0+255),b
  1748  002290  0EF8               	movlw	248
  1749  002292                     u1847:
  1750  002292  2EE8               	decfsz	wreg,f,c
  1751  002294  D7FE               	bra	u1847
  1752  002296  2FDC               	decfsz	??_LCDCmd& (0+255),f,b
  1753  002298  D7FC               	bra	u1847
  1754  00229A  F000               	nop	
  1755  00229C  0012               	return		;funcret
  1756  00229E                     __end_of_LCDCmd:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function _FNC *****************
  1760 ;; Defined at:
  1761 ;;		line 86 in file "newmain.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  oldY            2  115[COMRAM] int 
  1766 ;;  oldX            2  113[COMRAM] int 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Totals:         4      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;Total ram usage:       18 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    9
  1783 ;; This function calls:
  1784 ;;		___awmod
  1785 ;;		_printf
  1786 ;;		_updatePlayerPositionOnLCD
  1787 ;; This function is called by:
  1788 ;;		Interrupt level 2
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	intcode
  1793  000008                     __pintcode:
  1794                           	callstack 0
  1795  000008                     _FNC:
  1796                           	callstack 19
  1797                           
  1798                           ;incstack = 0
  1799  000008  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1800  00000A  ED22  F008         	call	int_func,f	;refresh shadow registers
  1801                           
  1802                           	psect	intcode_body
  1803  001044                     __pintcode_body:
  1804                           	callstack 19
  1805  001044                     int_func:
  1806                           	callstack 19
  1807  001044  0006               	pop		; remove dummy address from shadow register refresh
  1808  001046  CFE1 F0D2          	movff	fsr1l,??_FNC+4
  1809  00104A  CFE2 F0D3          	movff	fsr1h,??_FNC+5
  1810  00104E  CFD9 F0D4          	movff	fsr2l,??_FNC+6
  1811  001052  CFDA F0D5          	movff	fsr2h,??_FNC+7
  1812  001056  CFF3 F0D6          	movff	prodl,??_FNC+8
  1813  00105A  CFF4 F0D7          	movff	prodh,??_FNC+9
  1814  00105E  CFF6 F0D8          	movff	tblptrl,??_FNC+10
  1815  001062  CFF7 F0D9          	movff	tblptrh,??_FNC+11
  1816  001066  CFF8 F0DA          	movff	tblptru,??_FNC+12
  1817  00106A  CFF5 F0DB          	movff	tablat,??_FNC+13
  1818  00106E                     
  1819                           ;newmain.c: 89:     if (TMR0IF) {
  1820  00106E  A4F2               	btfss	4082,2,c	;volatile
  1821  001070  EF3C  F008         	goto	i2u162_41
  1822  001074  EF3E  F008         	goto	i2u162_40
  1823  001078                     i2u162_41:
  1824  001078  EF94  F008         	goto	i2l2273
  1825  00107C                     i2u162_40:
  1826  00107C                     
  1827                           ;newmain.c: 90:         TMR0IF = 0;
  1828  00107C  94F2               	bcf	4082,2,c	;volatile
  1829  00107E                     
  1830                           ;newmain.c: 91:         TMR0 = 100;
  1831  00107E  0E00               	movlw	0
  1832  001080  6ED7               	movwf	215,c	;volatile
  1833  001082  0E64               	movlw	100
  1834  001084  6ED6               	movwf	214,c	;volatile
  1835                           
  1836                           ;newmain.c: 93:         switch (display_state) {
  1837  001086  EF69  F008         	goto	i2l2269
  1838  00108A                     i2l2251:
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;newmain.c: 95:                 TRISA = 0b00000000;
  1842  00108A  0E00               	movlw	0
  1843  00108C  6E92               	movwf	146,c	;volatile
  1844  00108E                     
  1845                           ; BSR set to: 0
  1846                           ;newmain.c: 96:                 PORTD = digits[gameState.teamA_score];
  1847  00108E  0E9C               	movlw	low _digits
  1848  001090  2596               	addwf	(_gameState+22)& (0+255),w,b
  1849  001092  6ED9               	movwf	fsr2l,c
  1850  001094  0E00               	movlw	high _digits
  1851  001096  2197               	addwfc	(_gameState+23)& (0+255),w,b
  1852  001098  6EDA               	movwf	fsr2h,c
  1853  00109A  50DF               	movf	indf2,w,c
  1854  00109C  6E83               	movwf	131,c	;volatile
  1855  00109E                     
  1856                           ; BSR set to: 0
  1857                           ;newmain.c: 97:                 PORTA = 0b00001000;
  1858  00109E  0E08               	movlw	8
  1859  0010A0  6E80               	movwf	128,c	;volatile
  1860                           
  1861                           ;newmain.c: 98:                 break;
  1862  0010A2  EF84  F008         	goto	i2l2271
  1863  0010A6                     i2l2257:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;newmain.c: 100:                 TRISA = 0b00000000;
  1867  0010A6  0E00               	movlw	0
  1868  0010A8  6E92               	movwf	146,c	;volatile
  1869  0010AA                     
  1870                           ; BSR set to: 0
  1871                           ;newmain.c: 101:                 PORTD = dash;
  1872  0010AA  C07C  FF83         	movff	_dash,3971	;volatile
  1873                           
  1874                           ;newmain.c: 102:                 LATA = 0b00010000;
  1875  0010AE  0E10               	movlw	16
  1876  0010B0  6E89               	movwf	137,c	;volatile
  1877                           
  1878                           ;newmain.c: 103:                 break;
  1879  0010B2  EF84  F008         	goto	i2l2271
  1880  0010B6                     i2l2261:
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;newmain.c: 105:                 TRISA = 0b00000000;
  1884  0010B6  0E00               	movlw	0
  1885  0010B8  6E92               	movwf	146,c	;volatile
  1886  0010BA                     
  1887                           ; BSR set to: 0
  1888                           ;newmain.c: 106:                 PORTD = digits[gameState.teamB_score];
  1889  0010BA  0E9C               	movlw	low _digits
  1890  0010BC  2598               	addwf	(_gameState+24)& (0+255),w,b
  1891  0010BE  6ED9               	movwf	fsr2l,c
  1892  0010C0  0E00               	movlw	high _digits
  1893  0010C2  2199               	addwfc	(_gameState+25)& (0+255),w,b
  1894  0010C4  6EDA               	movwf	fsr2h,c
  1895  0010C6  50DF               	movf	indf2,w,c
  1896  0010C8  6E83               	movwf	131,c	;volatile
  1897  0010CA                     
  1898                           ; BSR set to: 0
  1899                           ;newmain.c: 107:                 LATA = 0b00100000;
  1900  0010CA  0E20               	movlw	32
  1901  0010CC  6E89               	movwf	137,c	;volatile
  1902                           
  1903                           ;newmain.c: 108:                 break;
  1904  0010CE  EF84  F008         	goto	i2l2271
  1905  0010D2                     i2l2269:
  1906  0010D2  C07A  F0CE         	movff	_display_state,??_FNC	;volatile
  1907  0010D6  C07B  F0CF         	movff	_display_state+1,??_FNC+1	;volatile
  1908                           
  1909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1910                           ; Switch size 1, requested type "simple"
  1911                           ; Number of cases is 1, Range of values is 0 to 0
  1912                           ; switch strategies available:
  1913                           ; Name         Instructions Cycles
  1914                           ; simple_byte            4     3 (average)
  1915                           ;	Chosen strategy is simple_byte
  1916  0010DA  0100               	movlb	0	; () banked
  1917  0010DC  51CF               	movf	(??_FNC+1)& (0+255),w,b
  1918  0010DE  0A00               	xorlw	0	; case 0
  1919  0010E0  B4D8               	btfsc	status,2,c
  1920  0010E2  EF75  F008         	goto	i2l2613
  1921  0010E6  EF84  F008         	goto	i2l2271
  1922  0010EA                     i2l2613:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ; Switch size 1, requested type "simple"
  1926                           ; Number of cases is 3, Range of values is 0 to 2
  1927                           ; switch strategies available:
  1928                           ; Name         Instructions Cycles
  1929                           ; simple_byte           10     6 (average)
  1930                           ;	Chosen strategy is simple_byte
  1931  0010EA  51CE               	movf	??_FNC& (0+255),w,b
  1932  0010EC  0A00               	xorlw	0	; case 0
  1933  0010EE  B4D8               	btfsc	status,2,c
  1934  0010F0  EF45  F008         	goto	i2l2251
  1935  0010F4  0A01               	xorlw	1	; case 1
  1936  0010F6  B4D8               	btfsc	status,2,c
  1937  0010F8  EF53  F008         	goto	i2l2257
  1938  0010FC  0A03               	xorlw	3	; case 2
  1939  0010FE  B4D8               	btfsc	status,2,c
  1940  001100  EF5B  F008         	goto	i2l2261
  1941  001104  EF84  F008         	goto	i2l2271
  1942  001108                     i2l2271:
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;newmain.c: 111:         display_state = (display_state + 1) % 3;
  1946  001108  0E01               	movlw	1
  1947  00110A  247A               	addwf	_display_state^0,w,c	;volatile
  1948  00110C  6E01               	movwf	___awmod@dividend^0,c
  1949  00110E  0E00               	movlw	0
  1950  001110  207B               	addwfc	(_display_state+1)^0,w,c	;volatile
  1951  001112  6E02               	movwf	(___awmod@dividend+1)^0,c
  1952  001114  0E00               	movlw	0
  1953  001116  6E04               	movwf	(___awmod@divisor+1)^0,c
  1954  001118  0E03               	movlw	3
  1955  00111A  6E03               	movwf	___awmod@divisor^0,c
  1956  00111C  EC45  F00E         	call	___awmod	;wreg free
  1957  001120  C001  F07A         	movff	?___awmod,_display_state	;volatile
  1958  001124  C002  F07B         	movff	?___awmod+1,_display_state+1	;volatile
  1959  001128                     i2l2273:
  1960                           
  1961                           ;newmain.c: 114:     if(INTCONbits.INT0IF)
  1962  001128  A2F2               	btfss	242,1,c	;volatile
  1963  00112A  EF99  F008         	goto	i2u163_41
  1964  00112E  EF9B  F008         	goto	i2u163_40
  1965  001132                     i2u163_41:
  1966  001132  EF9F  F008         	goto	i2l2279
  1967  001136                     i2u163_40:
  1968  001136                     
  1969                           ;newmain.c: 115:     {;newmain.c: 117:         CONVERT = 1;
  1970  001136  0E01               	movlw	1
  1971  001138  0100               	movlb	0	; () banked
  1972  00113A  6FE6               	movwf	_CONVERT& (0+255),b	;volatile
  1973  00113C                     
  1974                           ; BSR set to: 0
  1975                           ;newmain.c: 118:         INTCONbits.INT0IF = 0;
  1976  00113C  92F2               	bcf	242,1,c	;volatile
  1977  00113E                     i2l2279:
  1978                           
  1979                           ;newmain.c: 121:     if(INTCONbits.RBIF)
  1980  00113E  A0F2               	btfss	242,0,c	;volatile
  1981  001140  EFA4  F008         	goto	i2u164_41
  1982  001144  EFA6  F008         	goto	i2u164_40
  1983  001148                     i2u164_41:
  1984  001148  EF8D  F009         	goto	i2l187
  1985  00114C                     i2u164_40:
  1986  00114C                     
  1987                           ;newmain.c: 122:     {;newmain.c: 124:         int oldX = gameState.player_positions[gam
      +                          eState.selected_player].x;
  1988  00114C  0E80               	movlw	low _gameState
  1989  00114E  0100               	movlb	0	; () banked
  1990  001150  6FCE               	movwf	??_FNC& (0+255),b
  1991  001152  0E00               	movlw	high _gameState
  1992  001154  6FCF               	movwf	(??_FNC+1)& (0+255),b
  1993  001156  90D8               	bcf	status,0,c
  1994  001158  3594               	rlcf	(_gameState+20)& (0+255),w,b
  1995  00115A  6ED9               	movwf	fsr2l,c
  1996  00115C  3595               	rlcf	(_gameState+21)& (0+255),w,b
  1997  00115E  6EDA               	movwf	fsr2h,c
  1998  001160  90D8               	bcf	status,0,c
  1999  001162  36D9               	rlcf	fsr2l,f,c
  2000  001164  36DA               	rlcf	fsr2h,f,c
  2001  001166  51CE               	movf	??_FNC& (0+255),w,b
  2002  001168  26D9               	addwf	fsr2l,f,c
  2003  00116A  51CF               	movf	(??_FNC+1)& (0+255),w,b
  2004  00116C  22DA               	addwfc	fsr2h,f,c
  2005  00116E  CFDE F072          	movff	postinc2,FNC@oldX
  2006  001172  CFDD F073          	movff	postdec2,FNC@oldX+1
  2007                           
  2008                           ;newmain.c: 125:         int oldY = gameState.player_positions[gameState.selected_player
      +                          ].y;
  2009  001176  0E80               	movlw	low _gameState
  2010  001178  6FCE               	movwf	??_FNC& (0+255),b
  2011  00117A  0E00               	movlw	high _gameState
  2012  00117C  6FCF               	movwf	(??_FNC+1)& (0+255),b
  2013  00117E  0E02               	movlw	2
  2014  001180  27CE               	addwf	??_FNC& (0+255),f,b
  2015  001182  0E00               	movlw	0
  2016  001184  23CF               	addwfc	(??_FNC+1)& (0+255),f,b
  2017  001186  90D8               	bcf	status,0,c
  2018  001188  3594               	rlcf	(_gameState+20)& (0+255),w,b
  2019  00118A  6ED9               	movwf	fsr2l,c
  2020  00118C  3595               	rlcf	(_gameState+21)& (0+255),w,b
  2021  00118E  6EDA               	movwf	fsr2h,c
  2022  001190  90D8               	bcf	status,0,c
  2023  001192  36D9               	rlcf	fsr2l,f,c
  2024  001194  36DA               	rlcf	fsr2h,f,c
  2025  001196  51CE               	movf	??_FNC& (0+255),w,b
  2026  001198  26D9               	addwf	fsr2l,f,c
  2027  00119A  51CF               	movf	(??_FNC+1)& (0+255),w,b
  2028  00119C  22DA               	addwfc	fsr2h,f,c
  2029  00119E  CFDE F074          	movff	postinc2,FNC@oldY
  2030  0011A2  CFDD F075          	movff	postdec2,FNC@oldY+1
  2031  0011A6                     
  2032                           ; BSR set to: 0
  2033                           ;newmain.c: 128:         if(PORTBbits.RB4)
  2034  0011A6  A881               	btfss	129,4,c	;volatile
  2035  0011A8  EFD8  F008         	goto	i2u165_41
  2036  0011AC  EFDA  F008         	goto	i2u165_40
  2037  0011B0                     i2u165_41:
  2038  0011B0  EFFA  F008         	goto	i2l180
  2039  0011B4                     i2u165_40:
  2040  0011B4                     
  2041                           ; BSR set to: 0
  2042                           ;newmain.c: 129:         {;newmain.c: 130:             printf("Up button!!\n");
  2043  0011B4  0E35               	movlw	low STR_2
  2044  0011B6  6E58               	movwf	printf@fmt^0,c
  2045  0011B8  0E10               	movlw	high STR_2
  2046  0011BA  6E59               	movwf	(printf@fmt+1)^0,c
  2047  0011BC  ECB4  F011         	call	_printf	;wreg free
  2048  0011C0                     
  2049                           ;newmain.c: 131:             gameState.player_positions[gameState.selected_player].y--;
  2050  0011C0  0E80               	movlw	low _gameState
  2051  0011C2  0100               	movlb	0	; () banked
  2052  0011C4  6FCE               	movwf	??_FNC& (0+255),b
  2053  0011C6  0E00               	movlw	high _gameState
  2054  0011C8  6FCF               	movwf	(??_FNC+1)& (0+255),b
  2055  0011CA  0E02               	movlw	2
  2056  0011CC  27CE               	addwf	??_FNC& (0+255),f,b
  2057  0011CE  0E00               	movlw	0
  2058  0011D0  23CF               	addwfc	(??_FNC+1)& (0+255),f,b
  2059  0011D2  90D8               	bcf	status,0,c
  2060  0011D4  3594               	rlcf	(_gameState+20)& (0+255),w,b
  2061  0011D6  6ED9               	movwf	fsr2l,c
  2062  0011D8  3595               	rlcf	(_gameState+21)& (0+255),w,b
  2063  0011DA  6EDA               	movwf	fsr2h,c
  2064  0011DC  90D8               	bcf	status,0,c
  2065  0011DE  36D9               	rlcf	fsr2l,f,c
  2066  0011E0  36DA               	rlcf	fsr2h,f,c
  2067  0011E2  51CE               	movf	??_FNC& (0+255),w,b
  2068  0011E4  26D9               	addwf	fsr2l,f,c
  2069  0011E6  51CF               	movf	(??_FNC+1)& (0+255),w,b
  2070  0011E8  22DA               	addwfc	fsr2h,f,c
  2071  0011EA  06DE               	decf	postinc2,f,c
  2072  0011EC  0E00               	movlw	0
  2073  0011EE  5ADD               	subwfb	postdec2,f,c
  2074                           
  2075                           ;newmain.c: 132:         }
  2076  0011F0  EF52  F009         	goto	i2l2295
  2077  0011F4                     i2l180:
  2078                           
  2079                           ; BSR set to: 0
  2080  0011F4  AA81               	btfss	129,5,c	;volatile
  2081  0011F6  EFFF  F008         	goto	i2u166_41
  2082  0011FA  EF01  F009         	goto	i2u166_40
  2083  0011FE                     i2u166_41:
  2084  0011FE  EF1A  F009         	goto	i2l182
  2085  001202                     i2u166_40:
  2086  001202                     
  2087                           ; BSR set to: 0
  2088                           ;newmain.c: 134:         {;newmain.c: 135:             gameState.player_positions[gameSt
      +                          ate.selected_player].y++;
  2089  001202  0E80               	movlw	low _gameState
  2090  001204  6FCE               	movwf	??_FNC& (0+255),b
  2091  001206  0E00               	movlw	high _gameState
  2092  001208  6FCF               	movwf	(??_FNC+1)& (0+255),b
  2093  00120A  0E02               	movlw	2
  2094  00120C  27CE               	addwf	??_FNC& (0+255),f,b
  2095  00120E  0E00               	movlw	0
  2096  001210  23CF               	addwfc	(??_FNC+1)& (0+255),f,b
  2097  001212  90D8               	bcf	status,0,c
  2098  001214  3594               	rlcf	(_gameState+20)& (0+255),w,b
  2099  001216  6ED9               	movwf	fsr2l,c
  2100  001218  3595               	rlcf	(_gameState+21)& (0+255),w,b
  2101  00121A  6EDA               	movwf	fsr2h,c
  2102  00121C  90D8               	bcf	status,0,c
  2103  00121E  36D9               	rlcf	fsr2l,f,c
  2104  001220  36DA               	rlcf	fsr2h,f,c
  2105  001222  51CE               	movf	??_FNC& (0+255),w,b
  2106  001224  26D9               	addwf	fsr2l,f,c
  2107  001226  51CF               	movf	(??_FNC+1)& (0+255),w,b
  2108  001228  22DA               	addwfc	fsr2h,f,c
  2109  00122A  2ADE               	incf	postinc2,f,c
  2110  00122C  0E00               	movlw	0
  2111  00122E  22DD               	addwfc	postdec2,f,c
  2112                           
  2113                           ;newmain.c: 136:         }
  2114  001230  EF52  F009         	goto	i2l2295
  2115  001234                     i2l182:
  2116                           
  2117                           ; BSR set to: 0
  2118  001234  AC81               	btfss	129,6,c	;volatile
  2119  001236  EF1F  F009         	goto	i2u167_41
  2120  00123A  EF21  F009         	goto	i2u167_40
  2121  00123E                     i2u167_41:
  2122  00123E  EF36  F009         	goto	i2l184
  2123  001242                     i2u167_40:
  2124  001242                     
  2125                           ; BSR set to: 0
  2126                           ;newmain.c: 138:         {;newmain.c: 139:             gameState.player_positions[gameSt
      +                          ate.selected_player].x--;
  2127  001242  0E80               	movlw	low _gameState
  2128  001244  6FCE               	movwf	??_FNC& (0+255),b
  2129  001246  0E00               	movlw	high _gameState
  2130  001248  6FCF               	movwf	(??_FNC+1)& (0+255),b
  2131  00124A  90D8               	bcf	status,0,c
  2132  00124C  3594               	rlcf	(_gameState+20)& (0+255),w,b
  2133  00124E  6ED9               	movwf	fsr2l,c
  2134  001250  3595               	rlcf	(_gameState+21)& (0+255),w,b
  2135  001252  6EDA               	movwf	fsr2h,c
  2136  001254  90D8               	bcf	status,0,c
  2137  001256  36D9               	rlcf	fsr2l,f,c
  2138  001258  36DA               	rlcf	fsr2h,f,c
  2139  00125A  51CE               	movf	??_FNC& (0+255),w,b
  2140  00125C  26D9               	addwf	fsr2l,f,c
  2141  00125E  51CF               	movf	(??_FNC+1)& (0+255),w,b
  2142  001260  22DA               	addwfc	fsr2h,f,c
  2143  001262  06DE               	decf	postinc2,f,c
  2144  001264  0E00               	movlw	0
  2145  001266  5ADD               	subwfb	postdec2,f,c
  2146                           
  2147                           ;newmain.c: 140:         }
  2148  001268  EF52  F009         	goto	i2l2295
  2149  00126C                     i2l184:
  2150                           
  2151                           ; BSR set to: 0
  2152  00126C  AE81               	btfss	129,7,c	;volatile
  2153  00126E  EF3B  F009         	goto	i2u168_41
  2154  001272  EF3D  F009         	goto	i2u168_40
  2155  001276                     i2u168_41:
  2156  001276  EF52  F009         	goto	i2l183
  2157  00127A                     i2u168_40:
  2158  00127A                     
  2159                           ; BSR set to: 0
  2160                           ;newmain.c: 142:         {;newmain.c: 143:             gameState.player_positions[gameSt
      +                          ate.selected_player].x++;
  2161  00127A  0E80               	movlw	low _gameState
  2162  00127C  6FCE               	movwf	??_FNC& (0+255),b
  2163  00127E  0E00               	movlw	high _gameState
  2164  001280  6FCF               	movwf	(??_FNC+1)& (0+255),b
  2165  001282  90D8               	bcf	status,0,c
  2166  001284  3594               	rlcf	(_gameState+20)& (0+255),w,b
  2167  001286  6ED9               	movwf	fsr2l,c
  2168  001288  3595               	rlcf	(_gameState+21)& (0+255),w,b
  2169  00128A  6EDA               	movwf	fsr2h,c
  2170  00128C  90D8               	bcf	status,0,c
  2171  00128E  36D9               	rlcf	fsr2l,f,c
  2172  001290  36DA               	rlcf	fsr2h,f,c
  2173  001292  51CE               	movf	??_FNC& (0+255),w,b
  2174  001294  26D9               	addwf	fsr2l,f,c
  2175  001296  51CF               	movf	(??_FNC+1)& (0+255),w,b
  2176  001298  22DA               	addwfc	fsr2h,f,c
  2177  00129A  2ADE               	incf	postinc2,f,c
  2178  00129C  0E00               	movlw	0
  2179  00129E  22DD               	addwfc	postdec2,f,c
  2180  0012A0  EF52  F009         	goto	i2l2295
  2181  0012A4                     i2l183:
  2182  0012A4                     i2l2295:
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;newmain.c: 146:         updatePlayerPositionOnLCD(oldX, oldY,
  2186  0012A4  C072  F066         	movff	FNC@oldX,updatePlayerPositionOnLCD@oldX
  2187  0012A8  C073  F067         	movff	FNC@oldX+1,updatePlayerPositionOnLCD@oldX+1
  2188  0012AC  C074  F068         	movff	FNC@oldY,updatePlayerPositionOnLCD@oldY
  2189  0012B0  C075  F069         	movff	FNC@oldY+1,updatePlayerPositionOnLCD@oldY+1
  2190  0012B4  0E80               	movlw	low _gameState
  2191  0012B6  6FCE               	movwf	??_FNC& (0+255),b
  2192  0012B8  0E00               	movlw	high _gameState
  2193  0012BA  6FCF               	movwf	(??_FNC+1)& (0+255),b
  2194  0012BC  90D8               	bcf	status,0,c
  2195  0012BE  3594               	rlcf	(_gameState+20)& (0+255),w,b
  2196  0012C0  6ED9               	movwf	fsr2l,c
  2197  0012C2  3595               	rlcf	(_gameState+21)& (0+255),w,b
  2198  0012C4  6EDA               	movwf	fsr2h,c
  2199  0012C6  90D8               	bcf	status,0,c
  2200  0012C8  36D9               	rlcf	fsr2l,f,c
  2201  0012CA  36DA               	rlcf	fsr2h,f,c
  2202  0012CC  51CE               	movf	??_FNC& (0+255),w,b
  2203  0012CE  26D9               	addwf	fsr2l,f,c
  2204  0012D0  51CF               	movf	(??_FNC+1)& (0+255),w,b
  2205  0012D2  22DA               	addwfc	fsr2h,f,c
  2206  0012D4  CFDE F06A          	movff	postinc2,updatePlayerPositionOnLCD@newX
  2207  0012D8  CFDD F06B          	movff	postdec2,updatePlayerPositionOnLCD@newX+1
  2208  0012DC  0E80               	movlw	low _gameState
  2209  0012DE  6FD0               	movwf	(??_FNC+2)& (0+255),b
  2210  0012E0  0E00               	movlw	high _gameState
  2211  0012E2  6FD1               	movwf	(??_FNC+3)& (0+255),b
  2212  0012E4  0E02               	movlw	2
  2213  0012E6  27D0               	addwf	(??_FNC+2)& (0+255),f,b
  2214  0012E8  0E00               	movlw	0
  2215  0012EA  23D1               	addwfc	(??_FNC+3)& (0+255),f,b
  2216  0012EC  90D8               	bcf	status,0,c
  2217  0012EE  3594               	rlcf	(_gameState+20)& (0+255),w,b
  2218  0012F0  6ED9               	movwf	fsr2l,c
  2219  0012F2  3595               	rlcf	(_gameState+21)& (0+255),w,b
  2220  0012F4  6EDA               	movwf	fsr2h,c
  2221  0012F6  90D8               	bcf	status,0,c
  2222  0012F8  36D9               	rlcf	fsr2l,f,c
  2223  0012FA  36DA               	rlcf	fsr2h,f,c
  2224  0012FC  51D0               	movf	(??_FNC+2)& (0+255),w,b
  2225  0012FE  26D9               	addwf	fsr2l,f,c
  2226  001300  51D1               	movf	(??_FNC+3)& (0+255),w,b
  2227  001302  22DA               	addwfc	fsr2h,f,c
  2228  001304  CFDE F06C          	movff	postinc2,updatePlayerPositionOnLCD@newY
  2229  001308  CFDD F06D          	movff	postdec2,updatePlayerPositionOnLCD@newY+1
  2230  00130C  C094  F06E         	movff	_gameState+20,updatePlayerPositionOnLCD@selectedPlayer
  2231  001310  C095  F06F         	movff	_gameState+21,updatePlayerPositionOnLCD@selectedPlayer+1
  2232  001314  ECEC  F00E         	call	_updatePlayerPositionOnLCD	;wreg free
  2233  001318                     
  2234                           ;newmain.c: 155:         INTCONbits.RBIF = 0;
  2235  001318  90F2               	bcf	242,0,c	;volatile
  2236  00131A                     i2l187:
  2237  00131A  C0DB  FFF5         	movff	??_FNC+13,tablat
  2238  00131E  C0DA  FFF8         	movff	??_FNC+12,tblptru
  2239  001322  C0D9  FFF7         	movff	??_FNC+11,tblptrh
  2240  001326  C0D8  FFF6         	movff	??_FNC+10,tblptrl
  2241  00132A  C0D7  FFF4         	movff	??_FNC+9,prodh
  2242  00132E  C0D6  FFF3         	movff	??_FNC+8,prodl
  2243  001332  C0D5  FFDA         	movff	??_FNC+7,fsr2h
  2244  001336  C0D4  FFD9         	movff	??_FNC+6,fsr2l
  2245  00133A  C0D3  FFE2         	movff	??_FNC+5,fsr1h
  2246  00133E  C0D2  FFE1         	movff	??_FNC+4,fsr1l
  2247  001342  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2248  001344  0011               	retfie		f
  2249  001346                     __end_of_FNC:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _updatePlayerPositionOnLCD *****************
  2253 ;; Defined at:
  2254 ;;		line 72 in file "newmain.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  oldX            2  101[COMRAM] int 
  2257 ;;  oldY            2  103[COMRAM] int 
  2258 ;;  newX            2  105[COMRAM] int 
  2259 ;;  newY            2  107[COMRAM] int 
  2260 ;;  selectedPlay    2  109[COMRAM] int 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2272 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;Total ram usage:       12 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    8
  2279 ;; This function calls:
  2280 ;;		_printf
  2281 ;;		i2_LCDAddSpecialCharacter
  2282 ;;		i2_LCDDat
  2283 ;;		i2_LCDGoto
  2284 ;; This function is called by:
  2285 ;;		_FNC
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text9
  2290  001DD8                     __ptext9:
  2291                           	callstack 0
  2292  001DD8                     _updatePlayerPositionOnLCD:
  2293                           	callstack 19
  2294  001DD8                     
  2295                           ;newmain.c: 72: void updatePlayerPositionOnLCD(int oldX, int oldY, int newX, int newY, i
      +                          nt selectedPlayer);newmain.c: 73: {;newmain.c: 74:     printf("Updating player position 
      +                          from (%d, %d) to (%d, %d)\n", oldX, oldY, newX, newY);
  2296  001DD8  0E01               	movlw	low STR_1
  2297  001DDA  6E58               	movwf	printf@fmt^0,c
  2298  001DDC  0E10               	movlw	high STR_1
  2299  001DDE  6E59               	movwf	(printf@fmt+1)^0,c
  2300  001DE0  C066  F05A         	movff	updatePlayerPositionOnLCD@oldX,?_printf+2
  2301  001DE4  C067  F05B         	movff	updatePlayerPositionOnLCD@oldX+1,?_printf+3
  2302  001DE8  C068  F05C         	movff	updatePlayerPositionOnLCD@oldY,?_printf+4
  2303  001DEC  C069  F05D         	movff	updatePlayerPositionOnLCD@oldY+1,?_printf+5
  2304  001DF0  C06A  F05E         	movff	updatePlayerPositionOnLCD@newX,?_printf+6
  2305  001DF4  C06B  F05F         	movff	updatePlayerPositionOnLCD@newX+1,?_printf+7
  2306  001DF8  C06C  F060         	movff	updatePlayerPositionOnLCD@newY,?_printf+8
  2307  001DFC  C06D  F061         	movff	updatePlayerPositionOnLCD@newY+1,?_printf+9
  2308  001E00  ECB4  F011         	call	_printf	;wreg free
  2309  001E04                     
  2310                           ;newmain.c: 76:     LCDAddSpecialCharacter(selectedPlayer, empty);
  2311  001E04  0EE7               	movlw	low _empty
  2312  001E06  6E03               	movwf	i2LCDAddSpecialCharacter@data^0,c
  2313  001E08  0E00               	movlw	high _empty
  2314  001E0A  6E04               	movwf	(i2LCDAddSpecialCharacter@data+1)^0,c
  2315  001E0C  506E               	movf	updatePlayerPositionOnLCD@selectedPlayer^0,w,c
  2316  001E0E  EC18  F011         	call	i2_LCDAddSpecialCharacter
  2317  001E12                     
  2318                           ;newmain.c: 77:     LCDGoto(oldX, oldY);
  2319  001E12  C068  F003         	movff	updatePlayerPositionOnLCD@oldY,i2LCDGoto@p_1
  2320  001E16  5066               	movf	updatePlayerPositionOnLCD@oldX^0,w,c
  2321  001E18  EC08  F010         	call	i2_LCDGoto
  2322  001E1C                     
  2323                           ;newmain.c: 78:     LCDDat(selectedPlayer);
  2324  001E1C  506E               	movf	updatePlayerPositionOnLCD@selectedPlayer^0,w,c
  2325  001E1E  EC83  F011         	call	i2_LCDDat
  2326  001E22                     
  2327                           ;newmain.c: 81:     LCDAddSpecialCharacter(selectedPlayer, selectedPlayer < 2 ? selected
      +                          _teamA_player : selected_teamB_player);
  2328  001E22  BE6F               	btfsc	(updatePlayerPositionOnLCD@selectedPlayer+1)^0,7,c
  2329  001E24  EF1D  F00F         	goto	i2u139_41
  2330  001E28  506F               	movf	(updatePlayerPositionOnLCD@selectedPlayer+1)^0,w,c
  2331  001E2A  E109               	bnz	i2u139_40
  2332  001E2C  0E02               	movlw	2
  2333  001E2E  5C6E               	subwf	updatePlayerPositionOnLCD@selectedPlayer^0,w,c
  2334  001E30  A0D8               	btfss	status,0,c
  2335  001E32  EF1D  F00F         	goto	i2u139_41
  2336  001E36  EF1F  F00F         	goto	i2u139_40
  2337  001E3A                     i2u139_41:
  2338  001E3A  EF25  F00F         	goto	i2l2105
  2339  001E3E                     i2u139_40:
  2340  001E3E  0EAE               	movlw	low _selected_teamB_player
  2341  001E40  6E70               	movwf	_updatePlayerPositionOnLCD$670^0,c
  2342  001E42  0E00               	movlw	high _selected_teamB_player
  2343  001E44  6E71               	movwf	(_updatePlayerPositionOnLCD$670+1)^0,c
  2344  001E46  EF29  F00F         	goto	i2l2107
  2345  001E4A                     i2l2105:
  2346  001E4A  0EB6               	movlw	low _selected_teamA_player
  2347  001E4C  6E70               	movwf	_updatePlayerPositionOnLCD$670^0,c
  2348  001E4E  0E00               	movlw	high _selected_teamA_player
  2349  001E50  6E71               	movwf	(_updatePlayerPositionOnLCD$670+1)^0,c
  2350  001E52                     i2l2107:
  2351  001E52  C070  F003         	movff	_updatePlayerPositionOnLCD$670,i2LCDAddSpecialCharacter@data
  2352  001E56  C071  F004         	movff	_updatePlayerPositionOnLCD$670+1,i2LCDAddSpecialCharacter@data+1
  2353  001E5A  506E               	movf	updatePlayerPositionOnLCD@selectedPlayer^0,w,c
  2354  001E5C  EC18  F011         	call	i2_LCDAddSpecialCharacter
  2355  001E60                     
  2356                           ;newmain.c: 82:     LCDGoto(newX, newY);
  2357  001E60  C06C  F003         	movff	updatePlayerPositionOnLCD@newY,i2LCDGoto@p_1
  2358  001E64  506A               	movf	updatePlayerPositionOnLCD@newX^0,w,c
  2359  001E66  EC08  F010         	call	i2_LCDGoto
  2360  001E6A                     
  2361                           ;newmain.c: 83:     LCDDat(selectedPlayer);
  2362  001E6A  506E               	movf	updatePlayerPositionOnLCD@selectedPlayer^0,w,c
  2363  001E6C  EC83  F011         	call	i2_LCDDat
  2364  001E70  0012               	return		;funcret
  2365  001E72                     __end_of_updatePlayerPositionOnLCD:
  2366                           	callstack 0
  2367                           
  2368 ;; *************** function i2_LCDGoto *****************
  2369 ;; Defined at:
  2370 ;;		line 72 in file "./LCD.h"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  p_2             1    wreg     unsigned char 
  2373 ;;  p_1             1    2[COMRAM] unsigned char 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  p_2             1    3[COMRAM] unsigned char 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, status,2, status,0, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2385 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;Total ram usage:        2 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    1
  2392 ;; This function calls:
  2393 ;;		i2_LCDCmd
  2394 ;; This function is called by:
  2395 ;;		_updatePlayerPositionOnLCD
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text10
  2400  002010                     __ptext10:
  2401                           	callstack 0
  2402  002010                     i2_LCDGoto:
  2403                           	callstack 25
  2404                           
  2405                           ;incstack = 0
  2406                           ;i2LCDGoto@p_2 stored from wreg
  2407  002010  6E04               	movwf	i2LCDGoto@p_2^0,c
  2408  002012                     
  2409                           ;./LCD.h: 73:   if(p_1==1) {
  2410  002012  0403               	decf	i2LCDGoto@p_1^0,w,c
  2411  002014  A4D8               	btfss	status,2,c
  2412  002016  EF0F  F010         	goto	i2u130_41
  2413  00201A  EF11  F010         	goto	i2u130_40
  2414  00201E                     i2u130_41:
  2415  00201E  EF18  F010         	goto	i2l2003
  2416  002022                     i2u130_40:
  2417  002022                     
  2418                           ;./LCD.h: 74:     LCDCmd(0x80 +((p_2-1)%16));
  2419  002022  0404               	decf	i2LCDGoto@p_2^0,w,c
  2420  002024  0B0F               	andlw	15
  2421  002026  0F80               	addlw	128
  2422  002028  EC9C  F011         	call	i2_LCDCmd
  2423                           
  2424                           ;./LCD.h: 75:   }
  2425  00202C  EF3D  F010         	goto	i2l2013
  2426  002030                     i2l2003:
  2427  002030  0E02               	movlw	2
  2428  002032  1803               	xorwf	i2LCDGoto@p_1^0,w,c
  2429  002034  A4D8               	btfss	status,2,c
  2430  002036  EF1F  F010         	goto	i2u131_41
  2431  00203A  EF21  F010         	goto	i2u131_40
  2432  00203E                     i2u131_41:
  2433  00203E  EF28  F010         	goto	i2l2007
  2434  002042                     i2u131_40:
  2435  002042                     
  2436                           ;./LCD.h: 77:     LCDCmd(0xC0 +((p_2-1)%16));
  2437  002042  0404               	decf	i2LCDGoto@p_2^0,w,c
  2438  002044  0B0F               	andlw	15
  2439  002046  0FC0               	addlw	192
  2440  002048  EC9C  F011         	call	i2_LCDCmd
  2441                           
  2442                           ;./LCD.h: 78:   }
  2443  00204C  EF3D  F010         	goto	i2l2013
  2444  002050                     i2l2007:
  2445  002050  0E03               	movlw	3
  2446  002052  1803               	xorwf	i2LCDGoto@p_1^0,w,c
  2447  002054  A4D8               	btfss	status,2,c
  2448  002056  EF2F  F010         	goto	i2u132_41
  2449  00205A  EF31  F010         	goto	i2u132_40
  2450  00205E                     i2u132_41:
  2451  00205E  EF38  F010         	goto	i2l2011
  2452  002062                     i2u132_40:
  2453  002062                     
  2454                           ;./LCD.h: 80:     LCDCmd(0x90 +((p_2-1)%16));
  2455  002062  0404               	decf	i2LCDGoto@p_2^0,w,c
  2456  002064  0B0F               	andlw	15
  2457  002066  0F90               	addlw	144
  2458  002068  EC9C  F011         	call	i2_LCDCmd
  2459                           
  2460                           ;./LCD.h: 81:   }
  2461  00206C  EF3D  F010         	goto	i2l2013
  2462  002070                     i2l2011:
  2463                           
  2464                           ;./LCD.h: 83:     LCDCmd(0xD0 +((p_2-1)%16));
  2465  002070  0404               	decf	i2LCDGoto@p_2^0,w,c
  2466  002072  0B0F               	andlw	15
  2467  002074  0FD0               	addlw	208
  2468  002076  EC9C  F011         	call	i2_LCDCmd
  2469  00207A                     i2l2013:
  2470                           
  2471                           ;./LCD.h: 85:   lcd_x = p_2;
  2472  00207A  C004  F07E         	movff	i2LCDGoto@p_2,_lcd_x
  2473  00207E                     
  2474                           ;./LCD.h: 86:   lcd_y = p_1;
  2475  00207E  C003  F07D         	movff	i2LCDGoto@p_1,_lcd_y
  2476  002082  0012               	return		;funcret
  2477  002084                     __end_ofi2_LCDGoto:
  2478                           	callstack 0
  2479                           
  2480 ;; *************** function i2_LCDAddSpecialCharacter *****************
  2481 ;; Defined at:
  2482 ;;		line 129 in file "./LCD.h"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  character_in    1    wreg     unsigned char 
  2485 ;;  data            2    2[COMRAM] PTR unsigned char 
  2486 ;;		 -> frisbee(8), teamB_player(8), teamA_player(8), selected_teamB_player(8), 
  2487 ;;		 -> selected_teamA_player(8), empty(8), 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  character_in    1    4[COMRAM] unsigned char 
  2490 ;;  i               1    5[COMRAM] unsigned char 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      void 
  2493 ;; Registers used:
  2494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;Total ram usage:        4 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    1
  2507 ;; This function calls:
  2508 ;;		i2_LCDCmd
  2509 ;;		i2_LCDDat
  2510 ;; This function is called by:
  2511 ;;		_updatePlayerPositionOnLCD
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text11
  2516  002230                     __ptext11:
  2517                           	callstack 0
  2518  002230                     i2_LCDAddSpecialCharacter:
  2519                           	callstack 25
  2520                           
  2521                           ;incstack = 0
  2522                           ;i2LCDAddSpecialCharacter@character_index stored from wreg
  2523  002230  6E05               	movwf	i2LCDAddSpecialCharacter@character_index^0,c
  2524  002232                     
  2525                           ;./LCD.h: 135:     LCDCmd(0b01000000+(character_index*8));
  2526  002232  5005               	movf	i2LCDAddSpecialCharacter@character_index^0,w,c
  2527  002234  0D08               	mullw	8
  2528  002236  50F3               	movf	243,w,c
  2529  002238  0F40               	addlw	64
  2530  00223A  EC9C  F011         	call	i2_LCDCmd
  2531  00223E                     
  2532                           ;./LCD.h: 136:     for(byte i=0; i < 8; i++) {
  2533  00223E  0E00               	movlw	0
  2534  002240  6E06               	movwf	i2LCDAddSpecialCharacter@i^0,c
  2535  002242                     i2l2025:
  2536                           
  2537                           ;./LCD.h: 137:         LCDDat(data[i]);
  2538  002242  5006               	movf	i2LCDAddSpecialCharacter@i^0,w,c
  2539  002244  2403               	addwf	i2LCDAddSpecialCharacter@data^0,w,c
  2540  002246  6ED9               	movwf	fsr2l,c
  2541  002248  0E00               	movlw	0
  2542  00224A  2004               	addwfc	(i2LCDAddSpecialCharacter@data+1)^0,w,c
  2543  00224C  6EDA               	movwf	fsr2h,c
  2544  00224E  50DF               	movf	indf2,w,c
  2545  002250  EC83  F011         	call	i2_LCDDat
  2546  002254                     
  2547                           ;./LCD.h: 138:     }
  2548  002254  2A06               	incf	i2LCDAddSpecialCharacter@i^0,f,c
  2549  002256  0E07               	movlw	7
  2550  002258  6406               	cpfsgt	i2LCDAddSpecialCharacter@i^0,c
  2551  00225A  EF31  F011         	goto	i2u133_41
  2552  00225E  EF33  F011         	goto	i2u133_40
  2553  002262                     i2u133_41:
  2554  002262  EF21  F011         	goto	i2l2025
  2555  002266                     i2u133_40:
  2556  002266  0012               	return		;funcret
  2557  002268                     __end_ofi2_LCDAddSpecialCharacter:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function i2_LCDDat *****************
  2561 ;; Defined at:
  2562 ;;		line 58 in file "./LCD.h"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  dat             1    wreg     unsigned char 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  dat             1    1[COMRAM] unsigned char 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;Total ram usage:        2 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_updatePlayerPositionOnLCD
  2586 ;;		i2_LCDAddSpecialCharacter
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text12
  2591  002306                     __ptext12:
  2592                           	callstack 0
  2593  002306                     i2_LCDDat:
  2594                           	callstack 26
  2595                           
  2596                           ;incstack = 0
  2597                           ;i2LCDDat@dat stored from wreg
  2598  002306  6E02               	movwf	i2LCDDat@dat^0,c
  2599  002308                     
  2600                           ;./LCD.h: 59:   PORTEbits.RE1 = 0;
  2601  002308  9284               	bcf	132,1,c	;volatile
  2602                           
  2603                           ;./LCD.h: 60:   PORTEbits.RE2 = 1;
  2604  00230A  8484               	bsf	132,2,c	;volatile
  2605  00230C                     
  2606                           ;./LCD.h: 61:   PORTD = dat;
  2607  00230C  C002  FF83         	movff	i2LCDDat@dat,3971	;volatile
  2608  002310                     
  2609                           ;./LCD.h: 62:   PORTEbits.RE1 = 1;
  2610  002310  8284               	bsf	132,1,c	;volatile
  2611  002312                     
  2612                           ;./LCD.h: 63:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  2613  002312  0E1A               	movlw	26
  2614  002314  6E01               	movwf	??i2_LCDDat^0,c
  2615  002316  0EF8               	movlw	248
  2616  002318                     i2u185_47:
  2617  002318  2EE8               	decfsz	wreg,f,c
  2618  00231A  D7FE               	bra	i2u185_47
  2619  00231C  2E01               	decfsz	??i2_LCDDat^0,f,c
  2620  00231E  D7FC               	bra	i2u185_47
  2621  002320  D000               	nop2	
  2622  002322                     
  2623                           ;./LCD.h: 64:   PORTEbits.RE1 = 0;
  2624  002322  9284               	bcf	132,1,c	;volatile
  2625  002324                     
  2626                           ;./LCD.h: 65:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  2627  002324  0E1A               	movlw	26
  2628  002326  6E01               	movwf	??i2_LCDDat^0,c
  2629  002328  0EF8               	movlw	248
  2630  00232A                     i2u186_47:
  2631  00232A  2EE8               	decfsz	wreg,f,c
  2632  00232C  D7FE               	bra	i2u186_47
  2633  00232E  2E01               	decfsz	??i2_LCDDat^0,f,c
  2634  002330  D7FC               	bra	i2u186_47
  2635  002332  D000               	nop2	
  2636  002334                     
  2637                           ;./LCD.h: 66:   PORTEbits.RE2 = 0;
  2638  002334  9484               	bcf	132,2,c	;volatile
  2639  002336  0012               	return		;funcret
  2640  002338                     __end_ofi2_LCDDat:
  2641                           	callstack 0
  2642                           
  2643 ;; *************** function i2_LCDCmd *****************
  2644 ;; Defined at:
  2645 ;;		line 48 in file "./LCD.h"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  cmd             1    wreg     unsigned char 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  cmd             1    1[COMRAM] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;Total ram usage:        2 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		i2_LCDGoto
  2669 ;;		i2_LCDAddSpecialCharacter
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text13
  2674  002338                     __ptext13:
  2675                           	callstack 0
  2676  002338                     i2_LCDCmd:
  2677                           	callstack 25
  2678                           
  2679                           ;incstack = 0
  2680                           ;i2LCDCmd@cmd stored from wreg
  2681  002338  6E02               	movwf	i2LCDCmd@cmd^0,c
  2682  00233A                     
  2683                           ;./LCD.h: 49:   PORTEbits.RE1 = 0;
  2684  00233A  9284               	bcf	132,1,c	;volatile
  2685                           
  2686                           ;./LCD.h: 50:   PORTEbits.RE2 = 0;
  2687  00233C  9484               	bcf	132,2,c	;volatile
  2688  00233E                     
  2689                           ;./LCD.h: 51:   PORTD = cmd;
  2690  00233E  C002  FF83         	movff	i2LCDCmd@cmd,3971	;volatile
  2691  002342                     
  2692                           ;./LCD.h: 52:   PORTEbits.RE1 = 1;
  2693  002342  8284               	bsf	132,1,c	;volatile
  2694  002344                     
  2695                           ;./LCD.h: 53:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  2696  002344  0E1A               	movlw	26
  2697  002346  6E01               	movwf	??i2_LCDCmd^0,c
  2698  002348  0EF8               	movlw	248
  2699  00234A                     i2u187_47:
  2700  00234A  2EE8               	decfsz	wreg,f,c
  2701  00234C  D7FE               	bra	i2u187_47
  2702  00234E  2E01               	decfsz	??i2_LCDCmd^0,f,c
  2703  002350  D7FC               	bra	i2u187_47
  2704  002352  D000               	nop2	
  2705  002354                     
  2706                           ;./LCD.h: 54:   PORTEbits.RE1 = 0;
  2707  002354  9284               	bcf	132,1,c	;volatile
  2708  002356                     
  2709                           ;./LCD.h: 55:   _delay((unsigned long)((2000)*(40000000L/4000000.0)));
  2710  002356  0E1A               	movlw	26
  2711  002358  6E01               	movwf	??i2_LCDCmd^0,c
  2712  00235A  0EF8               	movlw	248
  2713  00235C                     i2u188_47:
  2714  00235C  2EE8               	decfsz	wreg,f,c
  2715  00235E  D7FE               	bra	i2u188_47
  2716  002360  2E01               	decfsz	??i2_LCDCmd^0,f,c
  2717  002362  D7FC               	bra	i2u188_47
  2718  002364  D000               	nop2	
  2719  002366  0012               	return		;funcret
  2720  002368                     __end_ofi2_LCDCmd:
  2721                           	callstack 0
  2722                           
  2723 ;; *************** function _printf *****************
  2724 ;; Defined at:
  2725 ;;		line 5 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/printf.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  2728 ;;		 -> STR_2(13), STR_1(52), 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  ap              2   99[COMRAM] PTR void [1]
  2731 ;;		 -> ?_printf(2), 
  2732 ;;  ret             2    0        int 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  2   87[COMRAM] int 
  2735 ;; Registers used:
  2736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2742 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;Total ram usage:       14 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    7
  2749 ;; This function calls:
  2750 ;;		_vfprintf
  2751 ;; This function is called by:
  2752 ;;		_updatePlayerPositionOnLCD
  2753 ;;		_FNC
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text14
  2758  002368                     __ptext14:
  2759                           	callstack 0
  2760  002368                     _printf:
  2761                           	callstack 19
  2762  002368  0E5A               	movlw	low (?_printf+2)
  2763  00236A  6E64               	movwf	printf@ap^0,c
  2764  00236C  0E00               	movlw	high (?_printf+2)
  2765  00236E  6E65               	movwf	(printf@ap+1)^0,c
  2766  002370  0E00               	movlw	0
  2767  002372  6E50               	movwf	vfprintf@fp^0,c
  2768  002374  0E00               	movlw	0
  2769  002376  6E51               	movwf	(vfprintf@fp+1)^0,c
  2770  002378  C058  F052         	movff	printf@fmt,vfprintf@fmt
  2771  00237C  C059  F053         	movff	printf@fmt+1,vfprintf@fmt+1
  2772  002380  0E64               	movlw	low printf@ap
  2773  002382  6E54               	movwf	vfprintf@ap^0,c
  2774  002384  0E00               	movlw	high printf@ap
  2775  002386  6E55               	movwf	(vfprintf@ap+1)^0,c
  2776  002388  EC42  F010         	call	_vfprintf	;wreg free
  2777  00238C  0012               	return		;funcret
  2778  00238E                     __end_of_printf:
  2779                           	callstack 0
  2780                           
  2781 ;; *************** function _vfprintf *****************
  2782 ;; Defined at:
  2783 ;;		line 1390 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  2786 ;;		 -> NULL(0), 
  2787 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  2788 ;;		 -> STR_2(13), STR_1(52), 
  2789 ;;  ap              2   83[COMRAM] PTR PTR void 
  2790 ;;		 -> printf@ap(2), 
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  2793 ;;		 -> STR_2(13), STR_1(52), 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  2   79[COMRAM] int 
  2796 ;; Registers used:
  2797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2803 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;Total ram usage:        8 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:    6
  2810 ;; This function calls:
  2811 ;;		_vfpfcnvrt
  2812 ;; This function is called by:
  2813 ;;		_printf
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text15
  2818  002084                     __ptext15:
  2819                           	callstack 0
  2820  002084                     _vfprintf:
  2821                           	callstack 19
  2822  002084                     
  2823                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  2824  002084  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  2825  002088  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2826  00208C                     
  2827                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  2828  00208C  0E00               	movlw	0
  2829  00208E  0100               	movlb	0	; () banked
  2830  002090  6FE3               	movwf	(_nout+1)& (0+255),b
  2831  002092  0E00               	movlw	0
  2832  002094  6FE2               	movwf	_nout& (0+255),b
  2833                           
  2834                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2835  002096  EF60  F010         	goto	i2l1939
  2836  00209A                     i2l1937:
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2840  00209A  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2841  00209E  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2842  0020A2  0E56               	movlw	low vfprintf@cfmt
  2843  0020A4  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2844  0020A6  0E00               	movlw	high vfprintf@cfmt
  2845  0020A8  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2846  0020AA  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2847  0020AE  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2848  0020B2  EC12  F00B         	call	_vfpfcnvrt	;wreg free
  2849  0020B6  5040               	movf	?_vfpfcnvrt^0,w,c
  2850  0020B8  0100               	movlb	0	; () banked
  2851  0020BA  27E2               	addwf	_nout& (0+255),f,b
  2852  0020BC  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  2853  0020BE  23E3               	addwfc	(_nout+1)& (0+255),f,b
  2854  0020C0                     i2l1939:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2858  0020C0  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  2859  0020C4  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2860  0020C8                     	if	0	;tblptru may be non-zero
  2861  0020C8                     	endif
  2862  0020C8                     	if	0	;tblptru may be non-zero
  2863  0020C8                     	endif
  2864  0020C8  0008               	tblrd		*
  2865  0020CA  50F5               	movf	tablat,w,c
  2866  0020CC  0900               	iorlw	0
  2867  0020CE  A4D8               	btfss	status,2,c
  2868  0020D0  EF6C  F010         	goto	i2u129_41
  2869  0020D4  EF6E  F010         	goto	i2u129_40
  2870  0020D8                     i2u129_41:
  2871  0020D8  EF4D  F010         	goto	i2l1937
  2872  0020DC                     i2u129_40:
  2873  0020DC                     
  2874                           ; BSR set to: 0
  2875                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  2876  0020DC  C0E2  F050         	movff	_nout,?_vfprintf
  2877  0020E0  C0E3  F051         	movff	_nout+1,?_vfprintf+1
  2878  0020E4                     
  2879                           ; BSR set to: 0
  2880  0020E4  0012               	return		;funcret
  2881  0020E6                     __end_of_vfprintf:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _vfpfcnvrt *****************
  2885 ;; Defined at:
  2886 ;;		line 692 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2889 ;;		 -> NULL(0), 
  2890 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2891 ;;		 -> vfprintf@cfmt(2), 
  2892 ;;  ap              2   67[COMRAM] PTR PTR void 
  2893 ;;		 -> printf@ap(2), 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  ll              8   71[COMRAM] long long 
  2896 ;;  llu             8    0        unsigned long long 
  2897 ;;  f               4    0        unsigned long long 
  2898 ;;  vp              3    0        PTR void 
  2899 ;;  ct              3    0        unsigned char [3]
  2900 ;;  cp              3    0        PTR unsigned char 
  2901 ;;  i               2    0        int 
  2902 ;;  done            2    0        int 
  2903 ;;  c               1    0        unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  2   63[COMRAM] int 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2913 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;Total ram usage:       16 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    5
  2920 ;; This function calls:
  2921 ;;		_dtoa
  2922 ;;		_fputc
  2923 ;; This function is called by:
  2924 ;;		_vfprintf
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text16
  2929  001624                     __ptext16:
  2930                           	callstack 0
  2931  001624                     _vfpfcnvrt:
  2932                           	callstack 19
  2933  001624                     
  2934                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  2935  001624  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2936  001628  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2937  00162C  CFDE FFF6          	movff	postinc2,tblptrl
  2938  001630  CFDD FFF7          	movff	postdec2,tblptrh
  2939  001634                     	if	0	;tblptru may be non-zero
  2940  001634                     	endif
  2941  001634                     	if	0	;tblptru may be non-zero
  2942  001634                     	endif
  2943  001634  0008               	tblrd		*
  2944  001636  50F5               	movf	tablat,w,c
  2945  001638  0A25               	xorlw	37
  2946  00163A  A4D8               	btfss	status,2,c
  2947  00163C  EF22  F00B         	goto	i2u125_41
  2948  001640  EF24  F00B         	goto	i2u125_40
  2949  001644                     i2u125_41:
  2950  001644  EFD0  F00B         	goto	i2l1925
  2951  001648                     i2u125_40:
  2952  001648                     
  2953                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  2954  001648  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2955  00164C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2956  001650  2ADE               	incf	postinc2,f,c
  2957  001652  0E00               	movlw	0
  2958  001654  22DD               	addwfc	postdec2,f,c
  2959  001656                     
  2960                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  2961  001656  0E00               	movlw	0
  2962  001658  0100               	movlb	0	; () banked
  2963  00165A  6FE5               	movwf	(_width+1)& (0+255),b
  2964  00165C  0E00               	movlw	0
  2965  00165E  6FE4               	movwf	_width& (0+255),b
  2966  001660  C0E4  F078         	movff	_width,_flags
  2967  001664  C0E5  F079         	movff	_width+1,_flags+1
  2968  001668                     
  2969                           ; BSR set to: 0
  2970                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  2971  001668  6876               	setf	_prec^0,c
  2972  00166A  6877               	setf	(_prec+1)^0,c
  2973  00166C                     
  2974                           ; BSR set to: 0
  2975                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2976  00166C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2977  001670  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2978  001674  CFDE FFF6          	movff	postinc2,tblptrl
  2979  001678  CFDD FFF7          	movff	postdec2,tblptrh
  2980  00167C                     	if	0	;tblptru may be non-zero
  2981  00167C                     	endif
  2982  00167C                     	if	0	;tblptru may be non-zero
  2983  00167C                     	endif
  2984  00167C  0008               	tblrd		*
  2985  00167E  50F5               	movf	tablat,w,c
  2986  001680  0A64               	xorlw	100
  2987  001682  B4D8               	btfsc	status,2,c
  2988  001684  EF46  F00B         	goto	i2u126_41
  2989  001688  EF48  F00B         	goto	i2u126_40
  2990  00168C                     i2u126_41:
  2991  00168C  EF5A  F00B         	goto	i2l1903
  2992  001690                     i2u126_40:
  2993  001690                     
  2994                           ; BSR set to: 0
  2995  001690  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2996  001694  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2997  001698  CFDE FFF6          	movff	postinc2,tblptrl
  2998  00169C  CFDD FFF7          	movff	postdec2,tblptrh
  2999  0016A0                     	if	0	;tblptru may be non-zero
  3000  0016A0                     	endif
  3001  0016A0                     	if	0	;tblptru may be non-zero
  3002  0016A0                     	endif
  3003  0016A0  0008               	tblrd		*
  3004  0016A2  50F5               	movf	tablat,w,c
  3005  0016A4  0A69               	xorlw	105
  3006  0016A6  A4D8               	btfss	status,2,c
  3007  0016A8  EF58  F00B         	goto	i2u127_41
  3008  0016AC  EF5A  F00B         	goto	i2u127_40
  3009  0016B0                     i2u127_41:
  3010  0016B0  EF9A  F00B         	goto	i2l1909
  3011  0016B4                     i2u127_40:
  3012  0016B4                     i2l1903:
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
  3016  0016B4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3017  0016B8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3018  0016BC  2ADE               	incf	postinc2,f,c
  3019  0016BE  0E00               	movlw	0
  3020  0016C0  22DD               	addwfc	postdec2,f,c
  3021                           
  3022                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  3023  0016C2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3024  0016C6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3025  0016CA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3026  0016CE  0E02               	movlw	2
  3027  0016D0  26DE               	addwf	postinc2,f,c
  3028  0016D2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3029  0016D6  0E00               	movlw	0
  3030  0016D8  22DD               	addwfc	postdec2,f,c
  3031  0016DA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3032  0016DE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3033  0016E2  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  3034  0016E6  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  3035  0016EA  0E00               	movlw	0
  3036  0016EC  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3037  0016EE  0EFF               	movlw	-1
  3038  0016F0  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  3039  0016F2  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  3040  0016F4  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  3041  0016F6  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  3042  0016F8  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  3043  0016FA  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  3044  0016FC                     
  3045                           ; BSR set to: 0
  3046                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
  3047  0016FC  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3048  001700  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3049  001704  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3050  001708  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3051  00170C  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3052  001710  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3053  001714  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3054  001718  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3055  00171C  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3056  001720  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3057  001724  ECA3  F009         	call	_dtoa	;wreg free
  3058  001728  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  3059  00172C  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3060  001730  EFEB  F00B         	goto	i2l944
  3061  001734                     i2l1909:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  3065  001734  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3066  001738  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3067  00173C  CFDE FFF6          	movff	postinc2,tblptrl
  3068  001740  CFDD FFF7          	movff	postdec2,tblptrh
  3069  001744                     	if	0	;tblptru may be non-zero
  3070  001744                     	endif
  3071  001744                     	if	0	;tblptru may be non-zero
  3072  001744                     	endif
  3073  001744  0008               	tblrd		*
  3074  001746  50F5               	movf	tablat,w,c
  3075  001748  0A25               	xorlw	37
  3076  00174A  A4D8               	btfss	status,2,c
  3077  00174C  EFAA  F00B         	goto	i2u128_41
  3078  001750  EFAC  F00B         	goto	i2u128_40
  3079  001754                     i2u128_41:
  3080  001754  EFC3  F00B         	goto	i2l1919
  3081  001758                     i2u128_40:
  3082  001758                     
  3083                           ; BSR set to: 0
  3084                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  3085  001758  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3086  00175C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3087  001760  2ADE               	incf	postinc2,f,c
  3088  001762  0E00               	movlw	0
  3089  001764  22DD               	addwfc	postdec2,f,c
  3090  001766                     
  3091                           ; BSR set to: 0
  3092                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  3093  001766  0E00               	movlw	0
  3094  001768  6E02               	movwf	(fputc@c+1)^0,c
  3095  00176A  0E25               	movlw	37
  3096  00176C  6E01               	movwf	fputc@c^0,c
  3097  00176E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3098  001772  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3099  001776  EC39  F00F         	call	_fputc	;wreg free
  3100  00177A                     i2l1915:
  3101                           
  3102                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  3103  00177A  0E00               	movlw	0
  3104  00177C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3105  00177E  0E01               	movlw	1
  3106  001780  6E40               	movwf	?_vfpfcnvrt^0,c
  3107  001782  EFEB  F00B         	goto	i2l944
  3108  001786                     i2l1919:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  3112  001786  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3113  00178A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3114  00178E  2ADE               	incf	postinc2,f,c
  3115  001790  0E00               	movlw	0
  3116  001792  22DD               	addwfc	postdec2,f,c
  3117  001794                     
  3118                           ; BSR set to: 0
  3119                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  3120  001794  0E00               	movlw	0
  3121  001796  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3122  001798  0E00               	movlw	0
  3123  00179A  6E40               	movwf	?_vfpfcnvrt^0,c
  3124  00179C  EFEB  F00B         	goto	i2l944
  3125  0017A0                     i2l1925:
  3126                           
  3127                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  3128  0017A0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3129  0017A4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3130  0017A8  CFDE FFF6          	movff	postinc2,tblptrl
  3131  0017AC  CFDD FFF7          	movff	postdec2,tblptrh
  3132  0017B0                     	if	0	;tblptru may be non-zero
  3133  0017B0                     	endif
  3134  0017B0                     	if	0	;tblptru may be non-zero
  3135  0017B0                     	endif
  3136  0017B0  0008               	tblrd		*
  3137  0017B2  50F5               	movf	tablat,w,c
  3138  0017B4  6E01               	movwf	fputc@c^0,c
  3139  0017B6  6A02               	clrf	(fputc@c+1)^0,c
  3140  0017B8  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3141  0017BC  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3142  0017C0  EC39  F00F         	call	_fputc	;wreg free
  3143  0017C4                     
  3144                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  3145  0017C4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3146  0017C8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3147  0017CC  2ADE               	incf	postinc2,f,c
  3148  0017CE  0E00               	movlw	0
  3149  0017D0  22DD               	addwfc	postdec2,f,c
  3150  0017D2  EFBD  F00B         	goto	i2l1915
  3151  0017D6                     i2l944:
  3152  0017D6  0012               	return		;funcret
  3153  0017D8                     __end_of_vfpfcnvrt:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _dtoa *****************
  3157 ;; Defined at:
  3158 ;;		line 287 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3161 ;;		 -> NULL(0), 
  3162 ;;  d               8   29[COMRAM] long long 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  n               8   53[COMRAM] long long 
  3165 ;;  i               2   61[COMRAM] int 
  3166 ;;  s               2   51[COMRAM] int 
  3167 ;;  w               2   49[COMRAM] int 
  3168 ;;  p               2   47[COMRAM] int 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  2   27[COMRAM] int 
  3171 ;; Registers used:
  3172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3178 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;Total ram usage:       36 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    4
  3185 ;; This function calls:
  3186 ;;		___aodiv
  3187 ;;		___aomod
  3188 ;;		_abs
  3189 ;;		_pad
  3190 ;; This function is called by:
  3191 ;;		_vfpfcnvrt
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text17
  3196  001346                     __ptext17:
  3197                           	callstack 0
  3198  001346                     _dtoa:
  3199                           	callstack 19
  3200  001346                     
  3201                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.30/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .30/pic/sources/c99/common/doprnt.c: 293:     n = d;
  3202  001346  C01E  F036         	movff	dtoa@d,dtoa@n
  3203  00134A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  3204  00134E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  3205  001352  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  3206  001356  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  3207  00135A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  3208  00135E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  3209  001362  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  3210  001366                     
  3211                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
  3212  001366  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  3213  001368  EFB8  F009         	goto	i2u110_41
  3214  00136C  EFBB  F009         	goto	i2u110_40
  3215  001370                     i2u110_41:
  3216  001370  0E01               	movlw	1
  3217  001372  EFBC  F009         	goto	i2u111_40
  3218  001376                     i2u110_40:
  3219  001376  0E00               	movlw	0
  3220  001378                     i2u111_40:
  3221  001378  6E34               	movwf	dtoa@s^0,c
  3222  00137A  6A35               	clrf	(dtoa@s+1)^0,c
  3223                           
  3224                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  3225  00137C  5034               	movf	dtoa@s^0,w,c
  3226  00137E  1035               	iorwf	(dtoa@s+1)^0,w,c
  3227  001380  B4D8               	btfsc	status,2,c
  3228  001382  EFC5  F009         	goto	i2u112_41
  3229  001386  EFC7  F009         	goto	i2u112_40
  3230  00138A                     i2u112_41:
  3231  00138A  EFD7  F009         	goto	i2l1835
  3232  00138E                     i2u112_40:
  3233  00138E                     
  3234                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  3235  00138E  1E3D               	comf	(dtoa@n+7)^0,f,c
  3236  001390  1E3C               	comf	(dtoa@n+6)^0,f,c
  3237  001392  1E3B               	comf	(dtoa@n+5)^0,f,c
  3238  001394  1E3A               	comf	(dtoa@n+4)^0,f,c
  3239  001396  1E39               	comf	(dtoa@n+3)^0,f,c
  3240  001398  1E38               	comf	(dtoa@n+2)^0,f,c
  3241  00139A  1E37               	comf	(dtoa@n+1)^0,f,c
  3242  00139C  6C36               	negf	dtoa@n^0,c
  3243  00139E  0E00               	movlw	0
  3244  0013A0  2237               	addwfc	(dtoa@n+1)^0,f,c
  3245  0013A2  2238               	addwfc	(dtoa@n+2)^0,f,c
  3246  0013A4  2239               	addwfc	(dtoa@n+3)^0,f,c
  3247  0013A6  223A               	addwfc	(dtoa@n+4)^0,f,c
  3248  0013A8  223B               	addwfc	(dtoa@n+5)^0,f,c
  3249  0013AA  223C               	addwfc	(dtoa@n+6)^0,f,c
  3250  0013AC  223D               	addwfc	(dtoa@n+7)^0,f,c
  3251  0013AE                     i2l1835:
  3252                           
  3253                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
  3254  0013AE  BE77               	btfsc	(_prec+1)^0,7,c
  3255  0013B0  EFDC  F009         	goto	i2u113_41
  3256  0013B4  EFDE  F009         	goto	i2u113_40
  3257  0013B8                     i2u113_41:
  3258  0013B8  EFDF  F009         	goto	i2l1839
  3259  0013BC                     i2u113_40:
  3260  0013BC                     
  3261                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
  3262  0013BC  9278               	bcf	_flags^0,1,c
  3263  0013BE                     i2l1839:
  3264                           
  3265                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
  3266  0013BE  BE77               	btfsc	(_prec+1)^0,7,c
  3267  0013C0  EFEC  F009         	goto	i2u114_40
  3268  0013C4  5077               	movf	(_prec+1)^0,w,c
  3269  0013C6  E106               	bnz	i2u114_41
  3270  0013C8  0476               	decf	_prec^0,w,c
  3271  0013CA  B0D8               	btfsc	status,0,c
  3272  0013CC  EFEA  F009         	goto	i2u114_41
  3273  0013D0  EFEC  F009         	goto	i2u114_40
  3274  0013D4                     i2u114_41:
  3275  0013D4  EFF2  F009         	goto	i2l917
  3276  0013D8                     i2u114_40:
  3277  0013D8  0E00               	movlw	0
  3278  0013DA  6E31               	movwf	(dtoa@p+1)^0,c
  3279  0013DC  0E01               	movlw	1
  3280  0013DE  6E30               	movwf	dtoa@p^0,c
  3281  0013E0  EFF6  F009         	goto	i2l919
  3282  0013E4                     i2l917:
  3283  0013E4  C076  F030         	movff	_prec,dtoa@p
  3284  0013E8  C077  F031         	movff	_prec+1,dtoa@p+1
  3285  0013EC                     i2l919:
  3286                           
  3287                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 304:     w = width;
  3288  0013EC  C0E4  F032         	movff	_width,dtoa@w
  3289  0013F0  C0E5  F033         	movff	_width+1,dtoa@w+1
  3290  0013F4                     
  3291                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
  3292  0013F4  5034               	movf	dtoa@s^0,w,c
  3293  0013F6  1035               	iorwf	(dtoa@s+1)^0,w,c
  3294  0013F8  A4D8               	btfss	status,2,c
  3295  0013FA  EF01  F00A         	goto	i2u115_41
  3296  0013FE  EF03  F00A         	goto	i2u115_40
  3297  001402                     i2u115_41:
  3298  001402  EF0A  F00A         	goto	i2l1847
  3299  001406                     i2u115_40:
  3300  001406  A478               	btfss	_flags^0,2,c
  3301  001408  EF08  F00A         	goto	i2u116_41
  3302  00140C  EF0A  F00A         	goto	i2u116_40
  3303  001410                     i2u116_41:
  3304  001410  EF0D  F00A         	goto	i2l1849
  3305  001414                     i2u116_40:
  3306  001414                     i2l1847:
  3307                           
  3308                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 306:         --w;
  3309  001414  0632               	decf	dtoa@w^0,f,c
  3310  001416  A0D8               	btfss	status,0,c
  3311  001418  0633               	decf	(dtoa@w+1)^0,f,c
  3312  00141A                     i2l1849:
  3313                           
  3314                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
  3315  00141A  0E00               	movlw	0
  3316  00141C  6E3F               	movwf	(dtoa@i+1)^0,c
  3317  00141E  0E1F               	movlw	31
  3318  001420  6E3E               	movwf	dtoa@i^0,c
  3319  001422                     
  3320                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
  3321  001422  0E00               	movlw	0
  3322  001424  0101               	movlb	1	; () banked
  3323  001426  6F65               	movwf	(_dbuf+31)& (0+255),b
  3324                           
  3325                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3326  001428  EF92  F00A         	goto	i2l1863
  3327  00142C                     i2l1853:
  3328                           
  3329                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 313:         --i;
  3330  00142C  063E               	decf	dtoa@i^0,f,c
  3331  00142E  A0D8               	btfss	status,0,c
  3332  001430  063F               	decf	(dtoa@i+1)^0,f,c
  3333  001432                     
  3334                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  3335  001432  0E46               	movlw	low _dbuf
  3336  001434  243E               	addwf	dtoa@i^0,w,c
  3337  001436  6ED9               	movwf	fsr2l,c
  3338  001438  0E01               	movlw	high _dbuf
  3339  00143A  203F               	addwfc	(dtoa@i+1)^0,w,c
  3340  00143C  6EDA               	movwf	fsr2h,c
  3341  00143E  C036  F001         	movff	dtoa@n,___aomod@dividend
  3342  001442  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3343  001446  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3344  00144A  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3345  00144E  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3346  001452  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3347  001456  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3348  00145A  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3349  00145E  0E0A               	movlw	10
  3350  001460  6E09               	movwf	___aomod@divisor^0,c
  3351  001462  0E00               	movlw	0
  3352  001464  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3353  001466  0E00               	movlw	0
  3354  001468  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3355  00146A  0E00               	movlw	0
  3356  00146C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3357  00146E  0E00               	movlw	0
  3358  001470  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3359  001472  0E00               	movlw	0
  3360  001474  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3361  001476  0E00               	movlw	0
  3362  001478  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3363  00147A  0E00               	movlw	0
  3364  00147C  6E10               	movwf	(___aomod@divisor+7)^0,c
  3365  00147E  ECB0  F00C         	call	___aomod	;wreg free
  3366  001482  C001  F026         	movff	?___aomod,??_dtoa
  3367  001486  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3368  00148A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3369  00148E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3370  001492  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3371  001496  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3372  00149A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3373  00149E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3374  0014A2  C026  F013         	movff	??_dtoa,abs@a
  3375  0014A6  C028  F014         	movff	??_dtoa+2,abs@a+1
  3376  0014AA  ECDC  F010         	call	_abs	;wreg free
  3377  0014AE  5013               	movf	?_abs^0,w,c
  3378  0014B0  0F30               	addlw	48
  3379  0014B2  6EDF               	movwf	indf2,c
  3380  0014B4                     
  3381                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 315:         --p;
  3382  0014B4  0630               	decf	dtoa@p^0,f,c
  3383  0014B6  A0D8               	btfss	status,0,c
  3384  0014B8  0631               	decf	(dtoa@p+1)^0,f,c
  3385  0014BA                     
  3386                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 316:         --w;
  3387  0014BA  0632               	decf	dtoa@w^0,f,c
  3388  0014BC  A0D8               	btfss	status,0,c
  3389  0014BE  0633               	decf	(dtoa@w+1)^0,f,c
  3390  0014C0                     
  3391                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
  3392  0014C0  C036  F001         	movff	dtoa@n,___aodiv@dividend
  3393  0014C4  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3394  0014C8  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3395  0014CC  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3396  0014D0  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3397  0014D4  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3398  0014D8  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3399  0014DC  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3400  0014E0  0E0A               	movlw	10
  3401  0014E2  6E09               	movwf	___aodiv@divisor^0,c
  3402  0014E4  0E00               	movlw	0
  3403  0014E6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3404  0014E8  0E00               	movlw	0
  3405  0014EA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3406  0014EC  0E00               	movlw	0
  3407  0014EE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3408  0014F0  0E00               	movlw	0
  3409  0014F2  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3410  0014F4  0E00               	movlw	0
  3411  0014F6  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3412  0014F8  0E00               	movlw	0
  3413  0014FA  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3414  0014FC  0E00               	movlw	0
  3415  0014FE  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3416  001500  ECEC  F00B         	call	___aodiv	;wreg free
  3417  001504  C001  F036         	movff	?___aodiv,dtoa@n
  3418  001508  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  3419  00150C  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  3420  001510  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  3421  001514  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  3422  001518  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  3423  00151C  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  3424  001520  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  3425  001524                     i2l1863:
  3426                           
  3427                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3428  001524  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  3429  001526  EF9D  F00A         	goto	i2u117_41
  3430  00152A  503F               	movf	(dtoa@i+1)^0,w,c
  3431  00152C  E108               	bnz	i2u117_40
  3432  00152E  043E               	decf	dtoa@i^0,w,c
  3433  001530  A0D8               	btfss	status,0,c
  3434  001532  EF9D  F00A         	goto	i2u117_41
  3435  001536  EF9F  F00A         	goto	i2u117_40
  3436  00153A                     i2u117_41:
  3437  00153A  EFCF  F00A         	goto	i2l1873
  3438  00153E                     i2u117_40:
  3439  00153E  5036               	movf	dtoa@n^0,w,c
  3440  001540  1037               	iorwf	(dtoa@n+1)^0,w,c
  3441  001542  1038               	iorwf	(dtoa@n+2)^0,w,c
  3442  001544  1039               	iorwf	(dtoa@n+3)^0,w,c
  3443  001546  103A               	iorwf	(dtoa@n+4)^0,w,c
  3444  001548  103B               	iorwf	(dtoa@n+5)^0,w,c
  3445  00154A  103C               	iorwf	(dtoa@n+6)^0,w,c
  3446  00154C  103D               	iorwf	(dtoa@n+7)^0,w,c
  3447  00154E  A4D8               	btfss	status,2,c
  3448  001550  EFAC  F00A         	goto	i2u118_41
  3449  001554  EFAE  F00A         	goto	i2u118_40
  3450  001558                     i2u118_41:
  3451  001558  EF16  F00A         	goto	i2l1853
  3452  00155C                     i2u118_40:
  3453  00155C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3454  00155E  EFBB  F00A         	goto	i2u119_40
  3455  001562  5031               	movf	(dtoa@p+1)^0,w,c
  3456  001564  E106               	bnz	i2u119_41
  3457  001566  0430               	decf	dtoa@p^0,w,c
  3458  001568  B0D8               	btfsc	status,0,c
  3459  00156A  EFB9  F00A         	goto	i2u119_41
  3460  00156E  EFBB  F00A         	goto	i2u119_40
  3461  001572                     i2u119_41:
  3462  001572  EF16  F00A         	goto	i2l1853
  3463  001576                     i2u119_40:
  3464  001576  BE33               	btfsc	(dtoa@w+1)^0,7,c
  3465  001578  EFC6  F00A         	goto	i2u120_41
  3466  00157C  5033               	movf	(dtoa@w+1)^0,w,c
  3467  00157E  E108               	bnz	i2u120_40
  3468  001580  0432               	decf	dtoa@w^0,w,c
  3469  001582  A0D8               	btfss	status,0,c
  3470  001584  EFC6  F00A         	goto	i2u120_41
  3471  001588  EFC8  F00A         	goto	i2u120_40
  3472  00158C                     i2u120_41:
  3473  00158C  EFCF  F00A         	goto	i2l1873
  3474  001590                     i2u120_40:
  3475  001590  B278               	btfsc	_flags^0,1,c
  3476  001592  EFCD  F00A         	goto	i2u121_41
  3477  001596  EFCF  F00A         	goto	i2u121_40
  3478  00159A                     i2u121_41:
  3479  00159A  EF16  F00A         	goto	i2l1853
  3480  00159E                     i2u121_40:
  3481  00159E                     i2l1873:
  3482                           
  3483                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
  3484  00159E  5034               	movf	dtoa@s^0,w,c
  3485  0015A0  1035               	iorwf	(dtoa@s+1)^0,w,c
  3486  0015A2  A4D8               	btfss	status,2,c
  3487  0015A4  EFD6  F00A         	goto	i2u122_41
  3488  0015A8  EFD8  F00A         	goto	i2u122_40
  3489  0015AC                     i2u122_41:
  3490  0015AC  EFDF  F00A         	goto	i2l1877
  3491  0015B0                     i2u122_40:
  3492  0015B0  A478               	btfss	_flags^0,2,c
  3493  0015B2  EFDD  F00A         	goto	i2u123_41
  3494  0015B6  EFDF  F00A         	goto	i2u123_40
  3495  0015BA                     i2u123_41:
  3496  0015BA  EFFD  F00A         	goto	i2l1887
  3497  0015BE                     i2u123_40:
  3498  0015BE                     i2l1877:
  3499                           
  3500                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 322:         --i;
  3501  0015BE  063E               	decf	dtoa@i^0,f,c
  3502  0015C0  A0D8               	btfss	status,0,c
  3503  0015C2  063F               	decf	(dtoa@i+1)^0,f,c
  3504  0015C4                     
  3505                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
  3506  0015C4  5034               	movf	dtoa@s^0,w,c
  3507  0015C6  1035               	iorwf	(dtoa@s+1)^0,w,c
  3508  0015C8  A4D8               	btfss	status,2,c
  3509  0015CA  EFE9  F00A         	goto	i2u124_41
  3510  0015CE  EFEB  F00A         	goto	i2u124_40
  3511  0015D2                     i2u124_41:
  3512  0015D2  EFF1  F00A         	goto	i2l1883
  3513  0015D6                     i2u124_40:
  3514  0015D6  0E00               	movlw	0
  3515  0015D8  6E2F               	movwf	(_dtoa$1228+1)^0,c
  3516  0015DA  0E2B               	movlw	43
  3517  0015DC  6E2E               	movwf	_dtoa$1228^0,c
  3518  0015DE  EFF5  F00A         	goto	i2l1885
  3519  0015E2                     i2l1883:
  3520  0015E2  0E00               	movlw	0
  3521  0015E4  6E2F               	movwf	(_dtoa$1228+1)^0,c
  3522  0015E6  0E2D               	movlw	45
  3523  0015E8  6E2E               	movwf	_dtoa$1228^0,c
  3524  0015EA                     i2l1885:
  3525  0015EA  0E46               	movlw	low _dbuf
  3526  0015EC  243E               	addwf	dtoa@i^0,w,c
  3527  0015EE  6ED9               	movwf	fsr2l,c
  3528  0015F0  0E01               	movlw	high _dbuf
  3529  0015F2  203F               	addwfc	(dtoa@i+1)^0,w,c
  3530  0015F4  6EDA               	movwf	fsr2h,c
  3531  0015F6  C02E  FFDF         	movff	_dtoa$1228,indf2
  3532  0015FA                     i2l1887:
  3533                           
  3534                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
  3535  0015FA  C01C  F011         	movff	dtoa@fp,pad@fp
  3536  0015FE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3537  001602  0E46               	movlw	low _dbuf
  3538  001604  243E               	addwf	dtoa@i^0,w,c
  3539  001606  6E13               	movwf	pad@buf^0,c
  3540  001608  0E01               	movlw	high _dbuf
  3541  00160A  203F               	addwfc	(dtoa@i+1)^0,w,c
  3542  00160C  6E14               	movwf	(pad@buf+1)^0,c
  3543  00160E  C032  F015         	movff	dtoa@w,pad@p
  3544  001612  C033  F016         	movff	dtoa@w+1,pad@p+1
  3545  001616  ECE4  F00D         	call	_pad	;wreg free
  3546  00161A  C011  F01C         	movff	?_pad,?_dtoa
  3547  00161E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  3548  001622  0012               	return		;funcret
  3549  001624                     __end_of_dtoa:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _pad *****************
  3553 ;; Defined at:
  3554 ;;		line 72 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3557 ;;		 -> NULL(0), 
  3558 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3559 ;;		 -> dbuf(32), 
  3560 ;;  p               2   20[COMRAM] int 
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;  w               2   25[COMRAM] int 
  3563 ;;  i               2   23[COMRAM] int 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  2   16[COMRAM] int 
  3566 ;; Registers used:
  3567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3573 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;Total ram usage:       11 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:    3
  3580 ;; This function calls:
  3581 ;;		_fputc
  3582 ;;		_fputs
  3583 ;;		_strlen
  3584 ;; This function is called by:
  3585 ;;		_dtoa
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text18
  3590  001BC8                     __ptext18:
  3591                           	callstack 0
  3592  001BC8                     _pad:
  3593                           	callstack 19
  3594  001BC8                     
  3595                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.30/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  3596  001BC8  A078               	btfss	_flags^0,0,c
  3597  001BCA  EFE9  F00D         	goto	i2u105_41
  3598  001BCE  EFEB  F00D         	goto	i2u105_40
  3599  001BD2                     i2u105_41:
  3600  001BD2  EFF5  F00D         	goto	i2l1807
  3601  001BD6                     i2u105_40:
  3602  001BD6                     
  3603                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  3604  001BD6  C013  F00A         	movff	pad@buf,fputs@s
  3605  001BDA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3606  001BDE  C011  F00C         	movff	pad@fp,fputs@fp
  3607  001BE2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3608  001BE6  EC9A  F010         	call	_fputs	;wreg free
  3609  001BEA                     i2l1807:
  3610                           
  3611                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  3612  001BEA  BE16               	btfsc	(pad@p+1)^0,7,c
  3613  001BEC  EFFA  F00D         	goto	i2u106_41
  3614  001BF0  EFFC  F00D         	goto	i2u106_40
  3615  001BF4                     i2u106_41:
  3616  001BF4  EF02  F00E         	goto	i2l1811
  3617  001BF8                     i2u106_40:
  3618  001BF8  C015  F01A         	movff	pad@p,pad@w
  3619  001BFC  C016  F01B         	movff	pad@p+1,pad@w+1
  3620  001C00  EF06  F00E         	goto	i2l906
  3621  001C04                     i2l1811:
  3622  001C04  0E00               	movlw	0
  3623  001C06  6E1B               	movwf	(pad@w+1)^0,c
  3624  001C08  0E00               	movlw	0
  3625  001C0A  6E1A               	movwf	pad@w^0,c
  3626  001C0C                     i2l906:
  3627                           
  3628                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3629  001C0C  0E00               	movlw	0
  3630  001C0E  6E19               	movwf	(pad@i+1)^0,c
  3631  001C10  0E00               	movlw	0
  3632  001C12  6E18               	movwf	pad@i^0,c
  3633                           
  3634                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3635  001C14  EF18  F00E         	goto	i2l1817
  3636  001C18                     i2l1813:
  3637                           
  3638                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  3639  001C18  0E00               	movlw	0
  3640  001C1A  6E02               	movwf	(fputc@c+1)^0,c
  3641  001C1C  0E20               	movlw	32
  3642  001C1E  6E01               	movwf	fputc@c^0,c
  3643  001C20  C011  F003         	movff	pad@fp,fputc@fp
  3644  001C24  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3645  001C28  EC39  F00F         	call	_fputc	;wreg free
  3646  001C2C                     
  3647                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3648  001C2C  4A18               	infsnz	pad@i^0,f,c
  3649  001C2E  2A19               	incf	(pad@i+1)^0,f,c
  3650  001C30                     i2l1817:
  3651                           
  3652                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3653  001C30  501A               	movf	pad@w^0,w,c
  3654  001C32  5C18               	subwf	pad@i^0,w,c
  3655  001C34  5019               	movf	(pad@i+1)^0,w,c
  3656  001C36  0A80               	xorlw	128
  3657  001C38  6E17               	movwf	??_pad^0,c
  3658  001C3A  501B               	movf	(pad@w+1)^0,w,c
  3659  001C3C  0A80               	xorlw	128
  3660  001C3E  5817               	subwfb	??_pad^0,w,c
  3661  001C40  A0D8               	btfss	status,0,c
  3662  001C42  EF25  F00E         	goto	i2u107_41
  3663  001C46  EF27  F00E         	goto	i2u107_40
  3664  001C4A                     i2u107_41:
  3665  001C4A  EF0C  F00E         	goto	i2l1813
  3666  001C4E                     i2u107_40:
  3667  001C4E                     
  3668                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  3669  001C4E  B078               	btfsc	_flags^0,0,c
  3670  001C50  EF2C  F00E         	goto	i2u108_41
  3671  001C54  EF2E  F00E         	goto	i2u108_40
  3672  001C58                     i2u108_41:
  3673  001C58  EF38  F00E         	goto	i2l1821
  3674  001C5C                     i2u108_40:
  3675  001C5C                     
  3676                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  3677  001C5C  C013  F00A         	movff	pad@buf,fputs@s
  3678  001C60  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3679  001C64  C011  F00C         	movff	pad@fp,fputs@fp
  3680  001C68  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3681  001C6C  EC9A  F010         	call	_fputs	;wreg free
  3682  001C70                     i2l1821:
  3683                           
  3684                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  3685  001C70  C013  F001         	movff	pad@buf,strlen@s
  3686  001C74  C014  F002         	movff	pad@buf+1,strlen@s+1
  3687  001C78  EC4F  F011         	call	_strlen	;wreg free
  3688  001C7C  501A               	movf	pad@w^0,w,c
  3689  001C7E  2401               	addwf	?_strlen^0,w,c
  3690  001C80  6E11               	movwf	?_pad^0,c
  3691  001C82  501B               	movf	(pad@w+1)^0,w,c
  3692  001C84  2002               	addwfc	(?_strlen+1)^0,w,c
  3693  001C86  6E12               	movwf	(?_pad+1)^0,c
  3694  001C88  0012               	return		;funcret
  3695  001C8A                     __end_of_pad:
  3696                           	callstack 0
  3697                           
  3698 ;; *************** function _strlen *****************
  3699 ;; Defined at:
  3700 ;;		line 5 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/strlen.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3703 ;;		 -> dbuf(32), 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3706 ;;		 -> dbuf(32), 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  2    0[COMRAM] unsigned int 
  3709 ;; Registers used:
  3710 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;Total ram usage:        4 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_pad
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text19
  3730  00229E                     __ptext19:
  3731                           	callstack 0
  3732  00229E                     _strlen:
  3733                           	callstack 21
  3734  00229E  C001  F003         	movff	strlen@s,strlen@a
  3735  0022A2  C002  F004         	movff	strlen@s+1,strlen@a+1
  3736  0022A6  EF57  F011         	goto	i2l1717
  3737  0022AA                     i2l1715:
  3738  0022AA  4A01               	infsnz	strlen@s^0,f,c
  3739  0022AC  2A02               	incf	(strlen@s+1)^0,f,c
  3740  0022AE                     i2l1717:
  3741  0022AE  C001  FFD9         	movff	strlen@s,fsr2l
  3742  0022B2  C002  FFDA         	movff	strlen@s+1,fsr2h
  3743  0022B6  50DF               	movf	indf2,w,c
  3744  0022B8  A4D8               	btfss	status,2,c
  3745  0022BA  EF61  F011         	goto	i2u91_41
  3746  0022BE  EF63  F011         	goto	i2u91_40
  3747  0022C2                     i2u91_41:
  3748  0022C2  EF55  F011         	goto	i2l1715
  3749  0022C6                     i2u91_40:
  3750  0022C6  5003               	movf	strlen@a^0,w,c
  3751  0022C8  5C01               	subwf	strlen@s^0,w,c
  3752  0022CA  6E01               	movwf	?_strlen^0,c
  3753  0022CC  5004               	movf	(strlen@a+1)^0,w,c
  3754  0022CE  5802               	subwfb	(strlen@s+1)^0,w,c
  3755  0022D0  6E02               	movwf	(?_strlen+1)^0,c
  3756  0022D2  0012               	return		;funcret
  3757  0022D4                     __end_of_strlen:
  3758                           	callstack 0
  3759                           
  3760 ;; *************** function _fputs *****************
  3761 ;; Defined at:
  3762 ;;		line 8 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/nf_fputs.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3765 ;;		 -> dbuf(32), 
  3766 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3767 ;;		 -> NULL(0), 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  i               2   14[COMRAM] int 
  3770 ;;  c               1   13[COMRAM] unsigned char 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  2    9[COMRAM] int 
  3773 ;; Registers used:
  3774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;Total ram usage:        7 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:    2
  3787 ;; This function calls:
  3788 ;;		_fputc
  3789 ;; This function is called by:
  3790 ;;		_pad
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text20
  3795  002134                     __ptext20:
  3796                           	callstack 0
  3797  002134                     _fputs:
  3798                           	callstack 19
  3799  002134  0E00               	movlw	0
  3800  002136  6E10               	movwf	(fputs@i+1)^0,c
  3801  002138  0E00               	movlw	0
  3802  00213A  6E0F               	movwf	fputs@i^0,c
  3803  00213C  EFAB  F010         	goto	i2l1711
  3804  002140                     i2l1707:
  3805  002140  C00E  F001         	movff	fputs@c,fputc@c
  3806  002144  6A02               	clrf	(fputc@c+1)^0,c
  3807  002146  C00C  F003         	movff	fputs@fp,fputc@fp
  3808  00214A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3809  00214E  EC39  F00F         	call	_fputc	;wreg free
  3810  002152  4A0F               	infsnz	fputs@i^0,f,c
  3811  002154  2A10               	incf	(fputs@i+1)^0,f,c
  3812  002156                     i2l1711:
  3813  002156  500F               	movf	fputs@i^0,w,c
  3814  002158  240A               	addwf	fputs@s^0,w,c
  3815  00215A  6ED9               	movwf	fsr2l,c
  3816  00215C  5010               	movf	(fputs@i+1)^0,w,c
  3817  00215E  200B               	addwfc	(fputs@s+1)^0,w,c
  3818  002160  6EDA               	movwf	fsr2h,c
  3819  002162  50DF               	movf	indf2,w,c
  3820  002164  6E0E               	movwf	fputs@c^0,c
  3821  002166  500E               	movf	fputs@c^0,w,c
  3822  002168  A4D8               	btfss	status,2,c
  3823  00216A  EFB9  F010         	goto	i2u90_41
  3824  00216E  EFBB  F010         	goto	i2u90_40
  3825  002172                     i2u90_41:
  3826  002172  EFA0  F010         	goto	i2l1707
  3827  002176                     i2u90_40:
  3828  002176  0012               	return		;funcret
  3829  002178                     __end_of_fputs:
  3830                           	callstack 0
  3831                           
  3832 ;; *************** function _fputc *****************
  3833 ;; Defined at:
  3834 ;;		line 8 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/nf_fputc.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  c               2    0[COMRAM] int 
  3837 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3838 ;;		 -> NULL(0), 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  2    0[COMRAM] int 
  3843 ;; Registers used:
  3844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3850 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;Total ram usage:        9 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    1
  3857 ;; This function calls:
  3858 ;;		_putch
  3859 ;; This function is called by:
  3860 ;;		_pad
  3861 ;;		_vfpfcnvrt
  3862 ;;		_fputs
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text21
  3867  001E72                     __ptext21:
  3868                           	callstack 0
  3869  001E72                     _fputc:
  3870                           	callstack 22
  3871  001E72  5003               	movf	fputc@fp^0,w,c
  3872  001E74  1004               	iorwf	(fputc@fp+1)^0,w,c
  3873  001E76  B4D8               	btfsc	status,2,c
  3874  001E78  EF40  F00F         	goto	i2u86_41
  3875  001E7C  EF42  F00F         	goto	i2u86_40
  3876  001E80                     i2u86_41:
  3877  001E80  EF4B  F00F         	goto	i2l1695
  3878  001E84                     i2u86_40:
  3879  001E84  5003               	movf	fputc@fp^0,w,c
  3880  001E86  1004               	iorwf	(fputc@fp+1)^0,w,c
  3881  001E88  A4D8               	btfss	status,2,c
  3882  001E8A  EF49  F00F         	goto	i2u87_41
  3883  001E8E  EF4B  F00F         	goto	i2u87_40
  3884  001E92                     i2u87_41:
  3885  001E92  EF50  F00F         	goto	i2l1697
  3886  001E96                     i2u87_40:
  3887  001E96                     i2l1695:
  3888  001E96  5001               	movf	fputc@c^0,w,c
  3889  001E98  ECE7  F011         	call	_putch
  3890  001E9C  EF83  F00F         	goto	i2l970
  3891  001EA0                     i2l1697:
  3892  001EA0  EE20 F004          	lfsr	2,4
  3893  001EA4  5003               	movf	fputc@fp^0,w,c
  3894  001EA6  26D9               	addwf	fsr2l,f,c
  3895  001EA8  5004               	movf	(fputc@fp+1)^0,w,c
  3896  001EAA  22DA               	addwfc	fsr2h,f,c
  3897  001EAC  50DE               	movf	postinc2,w,c
  3898  001EAE  10DE               	iorwf	postinc2,w,c
  3899  001EB0  B4D8               	btfsc	status,2,c
  3900  001EB2  EF5D  F00F         	goto	i2u88_41
  3901  001EB6  EF5F  F00F         	goto	i2u88_40
  3902  001EBA                     i2u88_41:
  3903  001EBA  EF7A  F00F         	goto	i2l1701
  3904  001EBE                     i2u88_40:
  3905  001EBE  EE20 F004          	lfsr	2,4
  3906  001EC2  5003               	movf	fputc@fp^0,w,c
  3907  001EC4  26D9               	addwf	fsr2l,f,c
  3908  001EC6  5004               	movf	(fputc@fp+1)^0,w,c
  3909  001EC8  22DA               	addwfc	fsr2h,f,c
  3910  001ECA  EE10 F002          	lfsr	1,2
  3911  001ECE  5003               	movf	fputc@fp^0,w,c
  3912  001ED0  26E1               	addwf	fsr1l,f,c
  3913  001ED2  5004               	movf	(fputc@fp+1)^0,w,c
  3914  001ED4  22E2               	addwfc	fsr1h,f,c
  3915  001ED6  50DE               	movf	postinc2,w,c
  3916  001ED8  5CE6               	subwf	postinc1,w,c
  3917  001EDA  50E6               	movf	postinc1,w,c
  3918  001EDC  0A80               	xorlw	128
  3919  001EDE  6E09               	movwf	(??_fputc+4)^0,c
  3920  001EE0  50DE               	movf	postinc2,w,c
  3921  001EE2  0A80               	xorlw	128
  3922  001EE4  5809               	subwfb	(??_fputc+4)^0,w,c
  3923  001EE6  B0D8               	btfsc	status,0,c
  3924  001EE8  EF78  F00F         	goto	i2u89_41
  3925  001EEC  EF7A  F00F         	goto	i2u89_40
  3926  001EF0                     i2u89_41:
  3927  001EF0  EF83  F00F         	goto	i2l970
  3928  001EF4                     i2u89_40:
  3929  001EF4                     i2l1701:
  3930  001EF4  EE20 F002          	lfsr	2,2
  3931  001EF8  5003               	movf	fputc@fp^0,w,c
  3932  001EFA  26D9               	addwf	fsr2l,f,c
  3933  001EFC  5004               	movf	(fputc@fp+1)^0,w,c
  3934  001EFE  22DA               	addwfc	fsr2h,f,c
  3935  001F00  2ADE               	incf	postinc2,f,c
  3936  001F02  0E00               	movlw	0
  3937  001F04  22DD               	addwfc	postdec2,f,c
  3938  001F06                     i2l970:
  3939  001F06  0012               	return		;funcret
  3940  001F08                     __end_of_fputc:
  3941                           	callstack 0
  3942                           
  3943 ;; *************** function _putch *****************
  3944 ;; Defined at:
  3945 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/putch.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  c               1    wreg     unsigned char 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  c               1    0[COMRAM] unsigned char 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		wreg
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_fputc
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text22
  3973  0023CE                     __ptext22:
  3974                           	callstack 0
  3975  0023CE                     _putch:
  3976                           	callstack 22
  3977  0023CE  0012               	return		;funcret
  3978  0023D0                     __end_of_putch:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function _abs *****************
  3982 ;; Defined at:
  3983 ;;		line 1 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/abs.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  a               2   18[COMRAM] int 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;		None
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  2   18[COMRAM] int 
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, status,0
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;Total ram usage:        4 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		_dtoa
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text23
  4011  0021B8                     __ptext23:
  4012                           	callstack 0
  4013  0021B8                     _abs:
  4014                           	callstack 22
  4015  0021B8  BE14               	btfsc	(abs@a+1)^0,7,c
  4016  0021BA  EFE9  F010         	goto	i2u109_40
  4017  0021BE  5014               	movf	(abs@a+1)^0,w,c
  4018  0021C0  E106               	bnz	i2u109_41
  4019  0021C2  0413               	decf	abs@a^0,w,c
  4020  0021C4  B0D8               	btfsc	status,0,c
  4021  0021C6  EFE7  F010         	goto	i2u109_41
  4022  0021CA  EFE9  F010         	goto	i2u109_40
  4023  0021CE                     i2u109_41:
  4024  0021CE  EFF7  F010         	goto	i2l955
  4025  0021D2                     i2u109_40:
  4026  0021D2  C013  F015         	movff	abs@a,??_abs
  4027  0021D6  C014  F016         	movff	abs@a+1,??_abs+1
  4028  0021DA  1E15               	comf	??_abs^0,f,c
  4029  0021DC  1E16               	comf	(??_abs+1)^0,f,c
  4030  0021DE  4A15               	infsnz	??_abs^0,f,c
  4031  0021E0  2A16               	incf	(??_abs+1)^0,f,c
  4032  0021E2  C015  F013         	movff	??_abs,?_abs
  4033  0021E6  C016  F014         	movff	??_abs+1,?_abs+1
  4034  0021EA  EFFB  F010         	goto	i2l958
  4035  0021EE                     i2l955:
  4036  0021EE  C013  F013         	movff	abs@a,?_abs
  4037  0021F2  C014  F014         	movff	abs@a+1,?_abs+1
  4038  0021F6                     i2l958:
  4039  0021F6  0012               	return		;funcret
  4040  0021F8                     __end_of_abs:
  4041                           	callstack 0
  4042                           
  4043 ;; *************** function ___aomod *****************
  4044 ;; Defined at:
  4045 ;;		line 9 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/aomod.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  dividend        8    0[COMRAM] long long 
  4048 ;;  divisor         8    8[COMRAM] long long 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  sign            1   17[COMRAM] unsigned char 
  4051 ;;  counter         1   16[COMRAM] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  8    0[COMRAM] long long 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, status,0
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4061 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;Total ram usage:       18 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; This function calls:
  4068 ;;		Nothing
  4069 ;; This function is called by:
  4070 ;;		_dtoa
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text24
  4075  001960                     __ptext24:
  4076                           	callstack 0
  4077  001960                     ___aomod:
  4078                           	callstack 22
  4079  001960  0E00               	movlw	0
  4080  001962  6E12               	movwf	___aomod@sign^0,c
  4081  001964  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  4082  001966  EFB9  F00C         	goto	i2u99_40
  4083  00196A  EFB7  F00C         	goto	i2u99_41
  4084  00196E                     i2u99_41:
  4085  00196E  EFCB  F00C         	goto	i2l1775
  4086  001972                     i2u99_40:
  4087  001972  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4088  001974  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4089  001976  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4090  001978  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4091  00197A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4092  00197C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4093  00197E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4094  001980  6C01               	negf	___aomod@dividend^0,c
  4095  001982  0E00               	movlw	0
  4096  001984  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4097  001986  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4098  001988  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4099  00198A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4100  00198C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4101  00198E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4102  001990  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4103  001992  0E01               	movlw	1
  4104  001994  6E12               	movwf	___aomod@sign^0,c
  4105  001996                     i2l1775:
  4106  001996  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  4107  001998  EFD2  F00C         	goto	i2u100_40
  4108  00199C  EFD0  F00C         	goto	i2u100_41
  4109  0019A0                     i2u100_41:
  4110  0019A0  EFE2  F00C         	goto	i2l1779
  4111  0019A4                     i2u100_40:
  4112  0019A4  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4113  0019A6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4114  0019A8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4115  0019AA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4116  0019AC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4117  0019AE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  4118  0019B0  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  4119  0019B2  6C09               	negf	___aomod@divisor^0,c
  4120  0019B4  0E00               	movlw	0
  4121  0019B6  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  4122  0019B8  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  4123  0019BA  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  4124  0019BC  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  4125  0019BE  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  4126  0019C0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  4127  0019C2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  4128  0019C4                     i2l1779:
  4129  0019C4  5009               	movf	___aomod@divisor^0,w,c
  4130  0019C6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  4131  0019C8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  4132  0019CA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  4133  0019CC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  4134  0019CE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  4135  0019D0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  4136  0019D2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  4137  0019D4  B4D8               	btfsc	status,2,c
  4138  0019D6  EFEF  F00C         	goto	i2u101_41
  4139  0019DA  EFF1  F00C         	goto	i2u101_40
  4140  0019DE                     i2u101_41:
  4141  0019DE  EF39  F00D         	goto	i2l1795
  4142  0019E2                     i2u101_40:
  4143  0019E2  0E01               	movlw	1
  4144  0019E4  6E11               	movwf	___aomod@counter^0,c
  4145  0019E6  EFFF  F00C         	goto	i2l1785
  4146  0019EA                     i2l1783:
  4147  0019EA  90D8               	bcf	status,0,c
  4148  0019EC  3609               	rlcf	___aomod@divisor^0,f,c
  4149  0019EE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  4150  0019F0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  4151  0019F2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  4152  0019F4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  4153  0019F6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  4154  0019F8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  4155  0019FA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  4156  0019FC  2A11               	incf	___aomod@counter^0,f,c
  4157  0019FE                     i2l1785:
  4158  0019FE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  4159  001A00  EF04  F00D         	goto	i2u102_41
  4160  001A04  EF06  F00D         	goto	i2u102_40
  4161  001A08                     i2u102_41:
  4162  001A08  EFF5  F00C         	goto	i2l1783
  4163  001A0C                     i2u102_40:
  4164  001A0C                     i2l1787:
  4165  001A0C  5009               	movf	___aomod@divisor^0,w,c
  4166  001A0E  5C01               	subwf	___aomod@dividend^0,w,c
  4167  001A10  500A               	movf	(___aomod@divisor+1)^0,w,c
  4168  001A12  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  4169  001A14  500B               	movf	(___aomod@divisor+2)^0,w,c
  4170  001A16  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  4171  001A18  500C               	movf	(___aomod@divisor+3)^0,w,c
  4172  001A1A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  4173  001A1C  500D               	movf	(___aomod@divisor+4)^0,w,c
  4174  001A1E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  4175  001A20  500E               	movf	(___aomod@divisor+5)^0,w,c
  4176  001A22  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  4177  001A24  500F               	movf	(___aomod@divisor+6)^0,w,c
  4178  001A26  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  4179  001A28  5010               	movf	(___aomod@divisor+7)^0,w,c
  4180  001A2A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  4181  001A2C  A0D8               	btfss	status,0,c
  4182  001A2E  EF1B  F00D         	goto	i2u103_41
  4183  001A32  EF1D  F00D         	goto	i2u103_40
  4184  001A36                     i2u103_41:
  4185  001A36  EF2D  F00D         	goto	i2l1791
  4186  001A3A                     i2u103_40:
  4187  001A3A  5009               	movf	___aomod@divisor^0,w,c
  4188  001A3C  5E01               	subwf	___aomod@dividend^0,f,c
  4189  001A3E  500A               	movf	(___aomod@divisor+1)^0,w,c
  4190  001A40  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  4191  001A42  500B               	movf	(___aomod@divisor+2)^0,w,c
  4192  001A44  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  4193  001A46  500C               	movf	(___aomod@divisor+3)^0,w,c
  4194  001A48  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  4195  001A4A  500D               	movf	(___aomod@divisor+4)^0,w,c
  4196  001A4C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  4197  001A4E  500E               	movf	(___aomod@divisor+5)^0,w,c
  4198  001A50  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  4199  001A52  500F               	movf	(___aomod@divisor+6)^0,w,c
  4200  001A54  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  4201  001A56  5010               	movf	(___aomod@divisor+7)^0,w,c
  4202  001A58  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  4203  001A5A                     i2l1791:
  4204  001A5A  90D8               	bcf	status,0,c
  4205  001A5C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  4206  001A5E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  4207  001A60  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  4208  001A62  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  4209  001A64  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  4210  001A66  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  4211  001A68  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  4212  001A6A  3209               	rrcf	___aomod@divisor^0,f,c
  4213  001A6C  2E11               	decfsz	___aomod@counter^0,f,c
  4214  001A6E  EF06  F00D         	goto	i2l1787
  4215  001A72                     i2l1795:
  4216  001A72  5012               	movf	___aomod@sign^0,w,c
  4217  001A74  B4D8               	btfsc	status,2,c
  4218  001A76  EF3F  F00D         	goto	i2u104_41
  4219  001A7A  EF41  F00D         	goto	i2u104_40
  4220  001A7E                     i2u104_41:
  4221  001A7E  EF51  F00D         	goto	i2l1799
  4222  001A82                     i2u104_40:
  4223  001A82  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4224  001A84  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4225  001A86  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4226  001A88  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4227  001A8A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4228  001A8C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4229  001A8E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4230  001A90  6C01               	negf	___aomod@dividend^0,c
  4231  001A92  0E00               	movlw	0
  4232  001A94  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4233  001A96  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4234  001A98  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4235  001A9A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4236  001A9C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4237  001A9E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4238  001AA0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4239  001AA2                     i2l1799:
  4240  001AA2  C001  F001         	movff	___aomod@dividend,?___aomod
  4241  001AA6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4242  001AAA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4243  001AAE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4244  001AB2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4245  001AB6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4246  001ABA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4247  001ABE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  4248  001AC2  0012               	return		;funcret
  4249  001AC4                     __end_of___aomod:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function ___aodiv *****************
  4253 ;; Defined at:
  4254 ;;		line 9 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/aodiv.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  dividend        8    0[COMRAM] long long 
  4257 ;;  divisor         8    8[COMRAM] long long 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  quotient        8   18[COMRAM] long long 
  4260 ;;  sign            1   17[COMRAM] unsigned char 
  4261 ;;  counter         1   16[COMRAM] unsigned char 
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  8    0[COMRAM] long long 
  4264 ;; Registers used:
  4265 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4271 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;Total ram usage:       26 bytes
  4276 ;; Hardware stack levels used:    1
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_dtoa
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text25
  4285  0017D8                     __ptext25:
  4286                           	callstack 0
  4287  0017D8                     ___aodiv:
  4288                           	callstack 22
  4289  0017D8  0E00               	movlw	0
  4290  0017DA  6E12               	movwf	___aodiv@sign^0,c
  4291  0017DC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  4292  0017DE  EFF5  F00B         	goto	i2u92_40
  4293  0017E2  EFF3  F00B         	goto	i2u92_41
  4294  0017E6                     i2u92_41:
  4295  0017E6  EF07  F00C         	goto	i2l1731
  4296  0017EA                     i2u92_40:
  4297  0017EA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  4298  0017EC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  4299  0017EE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  4300  0017F0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  4301  0017F2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  4302  0017F4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  4303  0017F6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  4304  0017F8  6C09               	negf	___aodiv@divisor^0,c
  4305  0017FA  0E00               	movlw	0
  4306  0017FC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  4307  0017FE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  4308  001800  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  4309  001802  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  4310  001804  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  4311  001806  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  4312  001808  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  4313  00180A  0E01               	movlw	1
  4314  00180C  6E12               	movwf	___aodiv@sign^0,c
  4315  00180E                     i2l1731:
  4316  00180E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  4317  001810  EF0E  F00C         	goto	i2u93_40
  4318  001814  EF0C  F00C         	goto	i2u93_41
  4319  001818                     i2u93_41:
  4320  001818  EF20  F00C         	goto	i2l1737
  4321  00181C                     i2u93_40:
  4322  00181C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  4323  00181E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  4324  001820  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  4325  001822  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  4326  001824  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  4327  001826  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  4328  001828  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  4329  00182A  6C01               	negf	___aodiv@dividend^0,c
  4330  00182C  0E00               	movlw	0
  4331  00182E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  4332  001830  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  4333  001832  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  4334  001834  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  4335  001836  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  4336  001838  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4337  00183A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4338  00183C  0E01               	movlw	1
  4339  00183E  1A12               	xorwf	___aodiv@sign^0,f,c
  4340  001840                     i2l1737:
  4341  001840  EE20  F013         	lfsr	2,___aodiv@quotient
  4342  001844  0E07               	movlw	7
  4343  001846                     i2u94_41:
  4344  001846  6ADE               	clrf	postinc2,c
  4345  001848  06E8               	decf	wreg,f,c
  4346  00184A  E2FD               	bc	i2u94_41
  4347  00184C  5009               	movf	___aodiv@divisor^0,w,c
  4348  00184E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4349  001850  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4350  001852  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4351  001854  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4352  001856  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4353  001858  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4354  00185A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4355  00185C  B4D8               	btfsc	status,2,c
  4356  00185E  EF33  F00C         	goto	i2u95_41
  4357  001862  EF35  F00C         	goto	i2u95_40
  4358  001866                     i2u95_41:
  4359  001866  EF87  F00C         	goto	i2l1759
  4360  00186A                     i2u95_40:
  4361  00186A  0E01               	movlw	1
  4362  00186C  6E11               	movwf	___aodiv@counter^0,c
  4363  00186E  EF43  F00C         	goto	i2l1745
  4364  001872                     i2l1743:
  4365  001872  90D8               	bcf	status,0,c
  4366  001874  3609               	rlcf	___aodiv@divisor^0,f,c
  4367  001876  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4368  001878  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4369  00187A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4370  00187C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4371  00187E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4372  001880  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4373  001882  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4374  001884  2A11               	incf	___aodiv@counter^0,f,c
  4375  001886                     i2l1745:
  4376  001886  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4377  001888  EF48  F00C         	goto	i2u96_41
  4378  00188C  EF4A  F00C         	goto	i2u96_40
  4379  001890                     i2u96_41:
  4380  001890  EF39  F00C         	goto	i2l1743
  4381  001894                     i2u96_40:
  4382  001894                     i2l1747:
  4383  001894  90D8               	bcf	status,0,c
  4384  001896  3613               	rlcf	___aodiv@quotient^0,f,c
  4385  001898  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4386  00189A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4387  00189C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4388  00189E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4389  0018A0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4390  0018A2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4391  0018A4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4392  0018A6  5009               	movf	___aodiv@divisor^0,w,c
  4393  0018A8  5C01               	subwf	___aodiv@dividend^0,w,c
  4394  0018AA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4395  0018AC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4396  0018AE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4397  0018B0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4398  0018B2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4399  0018B4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4400  0018B6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4401  0018B8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4402  0018BA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4403  0018BC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4404  0018BE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4405  0018C0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4406  0018C2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4407  0018C4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4408  0018C6  A0D8               	btfss	status,0,c
  4409  0018C8  EF68  F00C         	goto	i2u97_41
  4410  0018CC  EF6A  F00C         	goto	i2u97_40
  4411  0018D0                     i2u97_41:
  4412  0018D0  EF7B  F00C         	goto	i2l1755
  4413  0018D4                     i2u97_40:
  4414  0018D4  5009               	movf	___aodiv@divisor^0,w,c
  4415  0018D6  5E01               	subwf	___aodiv@dividend^0,f,c
  4416  0018D8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4417  0018DA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4418  0018DC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4419  0018DE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4420  0018E0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4421  0018E2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4422  0018E4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4423  0018E6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4424  0018E8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4425  0018EA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4426  0018EC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4427  0018EE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4428  0018F0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4429  0018F2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4430  0018F4  8013               	bsf	___aodiv@quotient^0,0,c
  4431  0018F6                     i2l1755:
  4432  0018F6  90D8               	bcf	status,0,c
  4433  0018F8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4434  0018FA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4435  0018FC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4436  0018FE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4437  001900  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4438  001902  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4439  001904  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4440  001906  3209               	rrcf	___aodiv@divisor^0,f,c
  4441  001908  2E11               	decfsz	___aodiv@counter^0,f,c
  4442  00190A  EF4A  F00C         	goto	i2l1747
  4443  00190E                     i2l1759:
  4444  00190E  5012               	movf	___aodiv@sign^0,w,c
  4445  001910  B4D8               	btfsc	status,2,c
  4446  001912  EF8D  F00C         	goto	i2u98_41
  4447  001916  EF8F  F00C         	goto	i2u98_40
  4448  00191A                     i2u98_41:
  4449  00191A  EF9F  F00C         	goto	i2l1763
  4450  00191E                     i2u98_40:
  4451  00191E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4452  001920  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4453  001922  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4454  001924  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4455  001926  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4456  001928  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4457  00192A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4458  00192C  6C13               	negf	___aodiv@quotient^0,c
  4459  00192E  0E00               	movlw	0
  4460  001930  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4461  001932  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4462  001934  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4463  001936  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4464  001938  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4465  00193A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4466  00193C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4467  00193E                     i2l1763:
  4468  00193E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4469  001942  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4470  001946  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4471  00194A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4472  00194E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4473  001952  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4474  001956  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4475  00195A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4476  00195E  0012               	return		;funcret
  4477  001960                     __end_of___aodiv:
  4478                           	callstack 0
  4479                           
  4480 ;; *************** function ___awmod *****************
  4481 ;; Defined at:
  4482 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/awmod.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  dividend        2    0[COMRAM] int 
  4485 ;;  divisor         2    2[COMRAM] int 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  sign            1    5[COMRAM] unsigned char 
  4488 ;;  counter         1    4[COMRAM] unsigned char 
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  2    0[COMRAM] int 
  4491 ;; Registers used:
  4492 ;;		wreg, status,2, status,0
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4498 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;Total ram usage:        6 bytes
  4503 ;; Hardware stack levels used:    1
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_FNC
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text26
  4512  001C8A                     __ptext26:
  4513                           	callstack 0
  4514  001C8A                     ___awmod:
  4515                           	callstack 27
  4516  001C8A  0E00               	movlw	0
  4517  001C8C  6E06               	movwf	___awmod@sign^0,c
  4518  001C8E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4519  001C90  EF4E  F00E         	goto	i2u140_40
  4520  001C94  EF4C  F00E         	goto	i2u140_41
  4521  001C98                     i2u140_41:
  4522  001C98  EF54  F00E         	goto	i2l2121
  4523  001C9C                     i2u140_40:
  4524  001C9C  6C01               	negf	___awmod@dividend^0,c
  4525  001C9E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4526  001CA0  B0D8               	btfsc	status,0,c
  4527  001CA2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4528  001CA4  0E01               	movlw	1
  4529  001CA6  6E06               	movwf	___awmod@sign^0,c
  4530  001CA8                     i2l2121:
  4531  001CA8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4532  001CAA  EF5B  F00E         	goto	i2u141_40
  4533  001CAE  EF59  F00E         	goto	i2u141_41
  4534  001CB2                     i2u141_41:
  4535  001CB2  EF5F  F00E         	goto	i2l2125
  4536  001CB6                     i2u141_40:
  4537  001CB6  6C03               	negf	___awmod@divisor^0,c
  4538  001CB8  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4539  001CBA  B0D8               	btfsc	status,0,c
  4540  001CBC  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4541  001CBE                     i2l2125:
  4542  001CBE  5003               	movf	___awmod@divisor^0,w,c
  4543  001CC0  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4544  001CC2  B4D8               	btfsc	status,2,c
  4545  001CC4  EF66  F00E         	goto	i2u142_41
  4546  001CC8  EF68  F00E         	goto	i2u142_40
  4547  001CCC                     i2u142_41:
  4548  001CCC  EF8C  F00E         	goto	i2l2141
  4549  001CD0                     i2u142_40:
  4550  001CD0  0E01               	movlw	1
  4551  001CD2  6E05               	movwf	___awmod@counter^0,c
  4552  001CD4  EF70  F00E         	goto	i2l2131
  4553  001CD8                     i2l2129:
  4554  001CD8  90D8               	bcf	status,0,c
  4555  001CDA  3603               	rlcf	___awmod@divisor^0,f,c
  4556  001CDC  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4557  001CDE  2A05               	incf	___awmod@counter^0,f,c
  4558  001CE0                     i2l2131:
  4559  001CE0  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4560  001CE2  EF75  F00E         	goto	i2u143_41
  4561  001CE6  EF77  F00E         	goto	i2u143_40
  4562  001CEA                     i2u143_41:
  4563  001CEA  EF6C  F00E         	goto	i2l2129
  4564  001CEE                     i2u143_40:
  4565  001CEE                     i2l2133:
  4566  001CEE  5003               	movf	___awmod@divisor^0,w,c
  4567  001CF0  5C01               	subwf	___awmod@dividend^0,w,c
  4568  001CF2  5004               	movf	(___awmod@divisor+1)^0,w,c
  4569  001CF4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4570  001CF6  A0D8               	btfss	status,0,c
  4571  001CF8  EF80  F00E         	goto	i2u144_41
  4572  001CFC  EF82  F00E         	goto	i2u144_40
  4573  001D00                     i2u144_41:
  4574  001D00  EF86  F00E         	goto	i2l2137
  4575  001D04                     i2u144_40:
  4576  001D04  5003               	movf	___awmod@divisor^0,w,c
  4577  001D06  5E01               	subwf	___awmod@dividend^0,f,c
  4578  001D08  5004               	movf	(___awmod@divisor+1)^0,w,c
  4579  001D0A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4580  001D0C                     i2l2137:
  4581  001D0C  90D8               	bcf	status,0,c
  4582  001D0E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4583  001D10  3203               	rrcf	___awmod@divisor^0,f,c
  4584  001D12  2E05               	decfsz	___awmod@counter^0,f,c
  4585  001D14  EF77  F00E         	goto	i2l2133
  4586  001D18                     i2l2141:
  4587  001D18  5006               	movf	___awmod@sign^0,w,c
  4588  001D1A  B4D8               	btfsc	status,2,c
  4589  001D1C  EF92  F00E         	goto	i2u145_41
  4590  001D20  EF94  F00E         	goto	i2u145_40
  4591  001D24                     i2u145_41:
  4592  001D24  EF98  F00E         	goto	i2l2145
  4593  001D28                     i2u145_40:
  4594  001D28  6C01               	negf	___awmod@dividend^0,c
  4595  001D2A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4596  001D2C  B0D8               	btfsc	status,0,c
  4597  001D2E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4598  001D30                     i2l2145:
  4599  001D30  C001  F001         	movff	___awmod@dividend,?___awmod
  4600  001D34  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4601  001D38  0012               	return		;funcret
  4602  001D3A                     __end_of___awmod:
  4603                           	callstack 0
  4604                           
  4605                           	psect	rparam
  4606  0000                     
  4607                           	psect	temp
  4608  00007F                     btemp:
  4609                           	callstack 0
  4610  00007F                     	ds	1
  4611  0000                     int$flags	set	btemp
  4612  0000                     wtemp8	set	btemp+1
  4613  0000                     ttemp5	set	btemp+1
  4614  0000                     ttemp6	set	btemp+4
  4615  0000                     ttemp7	set	btemp+8
  4616                           
  4617                           	psect	idloc
  4618                           
  4619                           ;Config register IDLOC0 @ 0x200000
  4620                           ;	unspecified, using default values
  4621  200000                     	org	2097152
  4622  200000  FF                 	db	255
  4623                           
  4624                           ;Config register IDLOC1 @ 0x200001
  4625                           ;	unspecified, using default values
  4626  200001                     	org	2097153
  4627  200001  FF                 	db	255
  4628                           
  4629                           ;Config register IDLOC2 @ 0x200002
  4630                           ;	unspecified, using default values
  4631  200002                     	org	2097154
  4632  200002  FF                 	db	255
  4633                           
  4634                           ;Config register IDLOC3 @ 0x200003
  4635                           ;	unspecified, using default values
  4636  200003                     	org	2097155
  4637  200003  FF                 	db	255
  4638                           
  4639                           ;Config register IDLOC4 @ 0x200004
  4640                           ;	unspecified, using default values
  4641  200004                     	org	2097156
  4642  200004  FF                 	db	255
  4643                           
  4644                           ;Config register IDLOC5 @ 0x200005
  4645                           ;	unspecified, using default values
  4646  200005                     	org	2097157
  4647  200005  FF                 	db	255
  4648                           
  4649                           ;Config register IDLOC6 @ 0x200006
  4650                           ;	unspecified, using default values
  4651  200006                     	org	2097158
  4652  200006  FF                 	db	255
  4653                           
  4654                           ;Config register IDLOC7 @ 0x200007
  4655                           ;	unspecified, using default values
  4656  200007                     	org	2097159
  4657  200007  FF                 	db	255
  4658                           
  4659                           	psect	config
  4660                           
  4661                           ; Padding undefined space
  4662  300000                     	org	3145728
  4663  300000  FF                 	db	255
  4664                           
  4665                           ;Config register CONFIG1H @ 0x300001
  4666                           ;	Oscillator Selection bits
  4667                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  4668                           ;	Fail-Safe Clock Monitor Enable bit
  4669                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4670                           ;	Internal/External Oscillator Switchover bit
  4671                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4672  300001                     	org	3145729
  4673  300001  08                 	db	8
  4674                           
  4675                           ;Config register CONFIG2L @ 0x300002
  4676                           ;	Power-up Timer Enable bit
  4677                           ;	PWRT = OFF, PWRT disabled
  4678                           ;	Brown-out Reset Enable bits
  4679                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4680                           ;	Brown Out Reset Voltage bits
  4681                           ;	BORV = 3, Minimum setting
  4682  300002                     	org	3145730
  4683  300002  1F                 	db	31
  4684                           
  4685                           ;Config register CONFIG2H @ 0x300003
  4686                           ;	Watchdog Timer Enable bit
  4687                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4688                           ;	Watchdog Timer Postscale Select bits
  4689                           ;	WDTPS = 32768, 1:32768
  4690  300003                     	org	3145731
  4691  300003  1E                 	db	30
  4692                           
  4693                           ; Padding undefined space
  4694  300004                     	org	3145732
  4695  300004  FF                 	db	255
  4696                           
  4697                           ;Config register CONFIG3H @ 0x300005
  4698                           ;	CCP2 MUX bit
  4699                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4700                           ;	PORTB A/D Enable bit
  4701                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4702                           ;	Low-Power Timer1 Oscillator Enable bit
  4703                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4704                           ;	MCLR Pin Enable bit
  4705                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4706  300005                     	org	3145733
  4707  300005  83                 	db	131
  4708                           
  4709                           ;Config register CONFIG4L @ 0x300006
  4710                           ;	Stack Full/Underflow Reset Enable bit
  4711                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4712                           ;	Single-Supply ICSP Enable bit
  4713                           ;	LVP = OFF, Single-Supply ICSP disabled
  4714                           ;	Extended Instruction Set Enable bit
  4715                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4716                           ;	Background Debugger Enable bit
  4717                           ;	DEBUG = 0x1, unprogrammed default
  4718  300006                     	org	3145734
  4719  300006  81                 	db	129
  4720                           
  4721                           ; Padding undefined space
  4722  300007                     	org	3145735
  4723  300007  FF                 	db	255
  4724                           
  4725                           ;Config register CONFIG5L @ 0x300008
  4726                           ;	Code Protection bit
  4727                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4728                           ;	Code Protection bit
  4729                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4730                           ;	Code Protection bit
  4731                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4732                           ;	Code Protection bit
  4733                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4734  300008                     	org	3145736
  4735  300008  0F                 	db	15
  4736                           
  4737                           ;Config register CONFIG5H @ 0x300009
  4738                           ;	Boot Block Code Protection bit
  4739                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4740                           ;	Data EEPROM Code Protection bit
  4741                           ;	CPD = OFF, Data EEPROM not code-protected
  4742  300009                     	org	3145737
  4743  300009  C0                 	db	192
  4744                           
  4745                           ;Config register CONFIG6L @ 0x30000A
  4746                           ;	Write Protection bit
  4747                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4748                           ;	Write Protection bit
  4749                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4750                           ;	Write Protection bit
  4751                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4752                           ;	Write Protection bit
  4753                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4754  30000A                     	org	3145738
  4755  30000A  0F                 	db	15
  4756                           
  4757                           ;Config register CONFIG6H @ 0x30000B
  4758                           ;	Configuration Register Write Protection bit
  4759                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4760                           ;	Boot Block Write Protection bit
  4761                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4762                           ;	Data EEPROM Write Protection bit
  4763                           ;	WRTD = OFF, Data EEPROM not write-protected
  4764  30000B                     	org	3145739
  4765  30000B  E0                 	db	224
  4766                           
  4767                           ;Config register CONFIG7L @ 0x30000C
  4768                           ;	Table Read Protection bit
  4769                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4770                           ;	Table Read Protection bit
  4771                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4772                           ;	Table Read Protection bit
  4773                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4774                           ;	Table Read Protection bit
  4775                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4776  30000C                     	org	3145740
  4777  30000C  0F                 	db	15
  4778                           
  4779                           ;Config register CONFIG7H @ 0x30000D
  4780                           ;	Boot Block Table Read Protection bit
  4781                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4782  30000D                     	org	3145741
  4783  30000D  40                 	db	64
  4784                           tosu	equ	0xFFF
  4785                           tosh	equ	0xFFE
  4786                           tosl	equ	0xFFD
  4787                           stkptr	equ	0xFFC
  4788                           pclatu	equ	0xFFB
  4789                           pclath	equ	0xFFA
  4790                           pcl	equ	0xFF9
  4791                           tblptru	equ	0xFF8
  4792                           tblptrh	equ	0xFF7
  4793                           tblptrl	equ	0xFF6
  4794                           tablat	equ	0xFF5
  4795                           prodh	equ	0xFF4
  4796                           prodl	equ	0xFF3
  4797                           indf0	equ	0xFEF
  4798                           postinc0	equ	0xFEE
  4799                           postdec0	equ	0xFED
  4800                           preinc0	equ	0xFEC
  4801                           plusw0	equ	0xFEB
  4802                           fsr0h	equ	0xFEA
  4803                           fsr0l	equ	0xFE9
  4804                           wreg	equ	0xFE8
  4805                           indf1	equ	0xFE7
  4806                           postinc1	equ	0xFE6
  4807                           postdec1	equ	0xFE5
  4808                           preinc1	equ	0xFE4
  4809                           plusw1	equ	0xFE3
  4810                           fsr1h	equ	0xFE2
  4811                           fsr1l	equ	0xFE1
  4812                           bsr	equ	0xFE0
  4813                           indf2	equ	0xFDF
  4814                           postinc2	equ	0xFDE
  4815                           postdec2	equ	0xFDD
  4816                           preinc2	equ	0xFDC
  4817                           plusw2	equ	0xFDB
  4818                           fsr2h	equ	0xFDA
  4819                           fsr2l	equ	0xFD9
  4820                           status	equ	0xFD8

Data Sizes:
    Strings     65
    Constant    0
    Data        105
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    117     126
    BANK0           128     20     111
    BANK1           256     12     138
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1164_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_2(CODE[13]), STR_1(CODE[52]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 52
		 -> STR_2(CODE[13]), STR_1(CODE[52]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_2(CODE[13]), STR_1(CODE[52]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    updatePlayerPositionOnLCD$670	PTR unsigned char  size(2) Largest target is 8
		 -> selected_teamB_player(BANK0[8]), selected_teamA_player(BANK0[8]), 

    LCDAddSpecialCharacter@data	PTR unsigned char  size(2) Largest target is 8
		 -> frisbee(BANK0[8]), teamB_player(BANK0[8]), teamA_player(BANK0[8]), selected_teamB_player(BANK0[8]), 
		 -> selected_teamA_player(BANK0[8]), empty(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _FNC in COMRAM

    _FNC->_updatePlayerPositionOnLCD
    _updatePlayerPositionOnLCD->_printf
    i2_LCDGoto->i2_LCDCmd
    i2_LCDAddSpecialCharacter->i2_LCDCmd
    i2_LCDAddSpecialCharacter->i2_LCDDat
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod

Critical Paths under _main in BANK0

    _main->_LCDAddSpecialCharacter
    _LCDGoto->_LCDCmd
    _LCDAddSpecialCharacter->_LCDCmd
    _LCDAddSpecialCharacter->_LCDDat
    _InitLCD->_LCDCmd

Critical Paths under _FNC in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _FNC in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _FNC in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _FNC in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _FNC in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _FNC in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _FNC in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _FNC in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _FNC in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _FNC in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _FNC in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _FNC in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _FNC in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _FNC in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _FNC in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _FNC in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    1848
                                              0 BANK1     12    12      0
                            _InitLCD
             _LCDAddSpecialCharacter
                             _LCDDat
                            _LCDGoto
                            _initADC
                     _readADCChannel
 ---------------------------------------------------------------------------------
 (1) _readADCChannel                                       5     3      2     124
                                             14 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              2     1      1     870
                                             16 BANK0      2     1      1
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (1) _LCDAddSpecialCharacter                               4     2      2     783
                                             16 BANK0      4     2      2
                             _LCDCmd
                             _LCDDat
 ---------------------------------------------------------------------------------
 (1) _LCDDat                                               2     2      0      31
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0      31
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (2) _LCDCmd                                               2     2      0      31
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _FNC                                                 18    18      0   13912
                                            113 COMRAM     4     4      0
                                              0 BANK0     14    14      0
                            ___awmod
                             _printf
          _updatePlayerPositionOnLCD
 ---------------------------------------------------------------------------------
 (4) _updatePlayerPositionOnLCD                           12     2     10    7305
                                            101 COMRAM    12     2     10
                             _printf
           i2_LCDAddSpecialCharacter
                           i2_LCDDat
                          i2_LCDGoto
 ---------------------------------------------------------------------------------
 (5) i2_LCDGoto                                            2     1      1     272
                                              2 COMRAM     2     1      1
                           i2_LCDCmd
 ---------------------------------------------------------------------------------
 (5) i2_LCDAddSpecialCharacter                             4     2      2     208
                                              2 COMRAM     4     2      2
                           i2_LCDCmd
                           i2_LCDDat
 ---------------------------------------------------------------------------------
 (5) i2_LCDDat                                             2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) i2_LCDCmd                                             2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _printf                                              14     4     10    6113
                                             87 COMRAM    14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (6) _vfprintf                                             8     2      6    5907
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (7) _vfpfcnvrt                                           42    36      6    5553
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _dtoa                                                36    26     10    4226
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (9) _pad                                                 11     5      6    2577
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (10) _strlen                                              4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _fputs                                               7     3      4    1169
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     768
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (9) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (9) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitLCD
     _LCDCmd
   _LCDAddSpecialCharacter
     _LCDCmd
     _LCDDat
   _LCDDat
   _LCDGoto
     _LCDCmd
   _initADC
   _readADCChannel

 _FNC (ROOT)
   ___awmod
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
   _updatePlayerPositionOnLCD
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
     i2_LCDAddSpecialCharacter
       i2_LCDCmd
       i2_LCDDat
     i2_LCDDat
     i2_LCDGoto
       i2_LCDCmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      C      8A       7       53.9%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     14      6F       5       86.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     75      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     177      34        0.0%
DATA                 0      0     177       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat May 27 06:49:40 2023

                                     l51 1DB2                                       l53 1DC0  
                                     l54 1DD6                                       l64 229C  
                                     l57 23B0                                       l67 222E  
                                     l92 21B6                                       l76 200E  
                                     l87 2304               LCDAddSpecialCharacter@data 00DE  
i2LCDAddSpecialCharacter@character_index 0005    LCDAddSpecialCharacter@character_index 00E0  
                                    _FNC 0008                                      _abs 21B8  
                                    _pad 1BC8                             ___awmod@sign 0006  
                                    wreg 000FE8                          __end_of_LCDGoto 2010  
                                   ?_FNC 0001                                     ?_abs 0013  
                                   l2411 2276                                     l2413 2288  
                                   l2405 226C                                     l2421 2204  
                                   l2415 228A                                     l2407 2270  
                                   l2423 2206                                     l2431 1D3E  
                                   l2409 2274                                     l2425 2218  
                                   l2417 21FC                                     l2441 1F9C  
                                   l2433 1DB0                                     l2521 1AF0  
                                   l2513 1AC4                                     l2427 221A  
                                   l2419 2200                                     l2451 1FEE  
                                   l2443 1FAE                                     l2435 1DC2  
                                   l2531 1B32                                     l2523 1B00  
                                   l2515 1AC8                                     l2461 22D8  
                                   l2429 222C                                     l2453 1FFC  
                                   l2445 1FBC                                     l2541 1B62  
                                   l2533 1B3E                                     l2525 1B10  
                                   l2517 1AD0                                     l2471 22EC  
                                   l2463 22DC                                     l2447 1FCE  
                                   l2455 2006                                     l2439 238E  
                                   l2551 1B86                                     l2543 1B68  
                                   l2535 1B44                                     l2527 1B20  
                                   l2519 1AE0                                     l2473 22F2  
                                   l2465 22DE                                     l2481 218A  
                                   l2457 200A                                     l2449 1FDC  
                                   l2561 1B90                                     l2553 1B88  
                                   l2545 1B74                                     l2537 1B50  
                                   l2529 1B2C                                     l2475 22F8  
                                   l2467 22E0                                     l2459 22D4  
                                   l2491 21A6                                     l2571 1B9A  
                                   l2563 1B92                                     l2555 1B8A  
                                   l2547 1B7A                                     l2539 1B56  
                                   l2477 22FE                                     l2469 22E6  
                                   l2581 1BBA                                     l2573 1B9C  
                                   l2565 1B94                                     l2557 1B8C  
                                   l2549 1B86                                     l2487 2190  
                                   l2479 217C                                     l2575 1B9E  
                                   l2567 1B96                                     l2559 1B8E  
                                   l2489 21A2                                     l2577 1BA2  
                                   l2569 1B98                                     l2579 1BB4  
                                   ?_pad 0011                                     STR_1 1001  
                                   STR_2 1035                                     _LATA 000F89  
                                   _LATB 000F8A                                     u1710 1DC0  
                                   u1711 1DBC                                     u1720 1FAE  
                                   u1800 1BB4                                     u1721 1FAA  
                                   u1801 1BB0                                     u1730 1FCE  
                                   u1731 1FCA                                     u1740 1FEE  
                                   u1741 1FEA                                     u1750 21B6  
                                   u1751 21B2                                     u1817 220E  
                                   u1827 2222                                     u1837 227E  
                                   u1847 2292                                     u1791 1B80  
                                   i2l64 2366                                     i2l67 2336  
                                   i2l92 2266                                     i2l76 2082  
                                   _TMR0 000FD6                                     abs@a 0013  
                                   _dash 007C                                     _dbuf 0146  
                                   _main 1AC4                                     _dtoa 1346  
                                   _prec 0076                                     _nout 00E2  
                                   pad@i 0018                                     pad@p 0015  
                                   fsr1h 000FE2                                     fsr2h 000FDA  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   pad@w 001A                                     fsr2l 000FD9  
                                   btemp 007F                                     prodh 000FF4  
                                   prodl 000FF3                                     start 000E  
                           ___param_bank 000000                          __end_of_InitLCD 2306  
                                  ??_FNC 00CE                                    ??_abs 0015  
                                  ??_pad 0017                       __size_ofi2_LCDGoto 0074  
                        __end_of___aodiv 1960                                    ?_main 0001  
                                  ?_dtoa 001C                          __end_of___aomod 1AC4  
                        __end_of___awmod 1D3A                                    _T0CON 000FD5  
                       __end_ofi2_LCDDat 2338                         __end_ofi2_LCDCmd 2368  
                                  i2l315 195E                                    i2l180 11F4  
                                  i2l182 1234                                    i2l167 1E70  
                                  i2l183 12A4                                    i2l328 1AC2  
                                  i2l184 126C                                    i2l187 131A  
                                  i2l445 1D38                                    i2l911 1C88  
                                  i2l906 1C0C                                    i2l909 1C4E  
                                  i2l917 13E4                                    i2l950 20DC  
                                  i2l919 13EC                                    i2l951 20E4  
                                  i2l944 17D6                                    i2l937 1622  
                                  i2l970 1F06                                    i2l955 21EE  
                                  i2l981 23CE                                    i2l958 21F6  
                                  i2l879 238C                                    i2l978 2176  
                                  i2l987 22D2                             vfpfcnvrt@fmt 0042  
                                  _PORTA 000F80                                    _PORTD 000F83  
                                  _TRISA 000F92                                    _TRISD 000F95  
                        __end_of_initADC 23B2                                    _flags 0078  
                                  _lcd_x 007E                                    _lcd_y 007D  
                                  _empty 00E7                                    _fputc 1E72  
                                  _fputs 2134                                    pad@fp 0011  
                                  _width 00E4                                    _putch 23CE  
                                  dtoa@d 001E                                    dtoa@i 003E  
                                  dtoa@n 0036                                    dtoa@p 0030  
                                  dtoa@s 0034                                    dtoa@w 0032  
                                  tablat 000FF5                                    ttemp5 0080  
                                  ttemp6 0083                                    ttemp7 0087  
                                  status 000FD8                                    wtemp8 0080  
          updatePlayerPositionOnLCD@oldX 0066            updatePlayerPositionOnLCD@oldY 0068  
          updatePlayerPositionOnLCD@newX 006A            updatePlayerPositionOnLCD@newY 006C  
                        __initialization 1F08                             __end_of_main 1BC8  
                           __end_of_dtoa 1624                           _readADCChannel 1D3A  
             ??i2_LCDAddSpecialCharacter 0005                                   ??_main 00E2  
                                 ??_dtoa 0026                            __activetblptr 000002  
                              ??_LCDGoto 00DF                                   ?_fputc 0001  
                                 ?_fputs 000A                                   _ADRESH 000FC4  
                                 _ADRESL 000FC3                                   ?_putch 0001  
                                 _LCDDat 21F8                                   _LCDCmd 2268  
                      __end_ofi2_LCDGoto 2084                                   i2l2001 2022  
                                 i2l2011 2070                                   i2l2003 2030  
                                 i2l2005 2042                                   i2l2013 207A  
                                 i2l2101 1E22                                   i2l2015 207E  
                                 i2l2007 2050                                   i2l2111 1E6A  
                                 i2l2103 1E3E                                   i2l2121 1CA8  
                                 i2l2113 1C8A                                   i2l2025 2242  
                                 i2l2017 2232                                   i2l2009 2062  
                                 i2l2105 1E4A                                   i2l2131 1CE0  
                                 i2l2123 1CB6                                   i2l2115 1C8E  
                                 i2l2027 2254                                   i2l2019 223E  
                                 i2l2107 1E52                                   i2l2133 1CEE  
                                 i2l2141 1D18                                   i2l2125 1CBE  
                                 i2l2117 1C9C                                   i2l2029 2256  
                                 i2l2109 1E60                                   i2l2143 1D28  
                                 i2l2135 1D04                                   i2l2127 1CD0  
                                 i2l2119 1CA4                                   i2l2145 1D30  
                                 i2l2137 1D0C                                   i2l2129 1CD8  
                                 i2l2139 1D12                                   i2l2251 108A  
                                 i2l1701 1EF4                                   i2l2093 1DD8  
                                 i2l2261 10B6                                   i2l2253 108E  
                                 i2l2245 106E                                   i2l1711 2156  
                                 i2l2095 1E04                                   i2l2263 10BA  
                                 i2l2271 1108                                   i2l2255 109E  
                                 i2l2247 107C                                   i2l1705 2134  
                                 i2l1713 229E                                   i2l2097 1E12  
                                 i2l2281 114C                                   i2l2265 10CA  
                                 i2l2257 10A6                                   i2l2249 107E  
                                 i2l2273 1128                                   i2l1731 180E  
                                 i2l1723 17D8                                   i2l1707 2140  
                                 i2l1715 22AA                                   i2l1811 1C04  
                                 i2l1803 1BC8                                   i2l2099 1E1C  
                                 i2l2291 1242                                   i2l2283 11A6  
                                 i2l2275 1136                                   i2l2259 10AA  
                                 i2l1741 186A                                   i2l1733 181C  
                                 i2l1725 17DC                                   i2l1709 2152  
                                 i2l1717 22AE                                   i2l1821 1C70  
                                 i2l1813 1C18                                   i2l1805 1BD6  
                                 i2l1901 1690                                   i2l2293 127A  
                                 i2l2285 11B4                                   i2l2277 113C  
                                 i2l2613 10EA                                   i2l2269 10D2  
                                 i2l1751 18D4                                   i2l1743 1872  
                                 i2l1735 183C                                   i2l1727 17EA  
                                 i2l1719 22C6                                   i2l1815 1C2C  
                                 i2l1807 1BEA                                   i2l1831 1366  
                                 i2l1911 1758                                   i2l1903 16B4  
                                 i2l2295 12A4                                   i2l2287 11C0  
                                 i2l2279 113E                                   i2l1761 191E  
                                 i2l1753 18F4                                   i2l1745 1886  
                                 i2l1737 1840                                   i2l1729 180A  
                                 i2l1825 21B8                                   i2l1817 1C30  
                                 i2l1809 1BF8                                   i2l1841 13D8  
                                 i2l1833 138E                                   i2l1921 1794  
                                 i2l1913 1766                                   i2l1905 16FC  
                                 i2l2297 1318                                   i2l2289 1202  
                                 i2l1763 193E                                   i2l1755 18F6  
                                 i2l1747 1894                                   i2l1739 184C  
                                 i2l1771 1972                                   i2l1827 21D2  
                                 i2l1691 1E72                                   i2l1819 1C5C  
                                 i2l1851 1422                                   i2l1843 13F4  
                                 i2l1835 13AE                                   i2l1915 177A  
                                 i2l1757 1908                                   i2l1749 18A6  
                                 i2l1781 19E2                                   i2l1773 1992  
                                 i2l1693 1E84                                   i2l1861 14C0  
                                 i2l1853 142C                                   i2l1845 1406  
                                 i2l1837 13BC                                   i2l1829 1346  
                                 i2l1909 1734                                   i2l1925 17A0  
                                 i2l1933 2084                                   i2l1941 233A  
                                 i2l1759 190E                                   i2l1791 1A5A  
                                 i2l1783 19EA                                   i2l1775 1996  
                                 i2l1767 1960                                   i2l1695 1E96  
                                 i2l1871 1590                                   i2l1855 1432  
                                 i2l1863 1524                                   i2l1847 1414  
                                 i2l1839 13BE                                   i2l1927 17C4  
                                 i2l1919 1786                                   i2l1935 208C  
                                 i2l1951 2356                                   i2l1943 233E  
                                 i2l1793 1A6C                                   i2l1785 19FE  
                                 i2l1777 19A4                                   i2l1769 1964  
                                 i2l1697 1EA0                                   i2l1881 15D6  
                                 i2l1865 153E                                   i2l1873 159E  
                                 i2l1857 14B4                                   i2l1849 141A  
                                 i2l1937 209A                                   i2l1945 2342  
                                 i2l1961 2322                                   i2l1953 2308  
                                 i2l1787 1A0C                                   i2l1795 1A72  
                                 i2l1779 19C4                                   i2l1699 1EBE  
                                 i2l1883 15E2                                   i2l1875 15B0  
                                 i2l1867 155C                                   i2l1859 14BA  
                                 i2l1891 1624                                   i2l1939 20C0  
                                 i2l1947 2344                                   i2l1963 2324  
                                 i2l1955 230C                                   i2l1797 1A82  
                                 i2l1789 1A3A                                   i2l1885 15EA  
                                 i2l1877 15BE                                   i2l1869 1576  
                                 i2l1893 1648                                   i2l1949 2354  
                                 i2l1965 2334                                   i2l1957 2310  
                                 i2l1799 1AA2                                   i2l1879 15C4  
                                 i2l1887 15FA                                   i2l1895 1656  
                                 i2l1959 2312                                   i2l1897 1668  
                                 i2l1993 2368                                   i2l1899 166C  
                                 i2l1995 2370                                   i2l1999 2012  
                                 _TMR0IF 007F92                                ??_InitLCD 00DE  
     __size_of_updatePlayerPositionOnLCD 009A                             vfprintf@cfmt 0056  
                 __end_of_readADCChannel 1DD8                                ??___aodiv 0011  
                              ??___aomod 0011                                ??___awmod 0005  
                                 _digits 009C                                   clear_0 1F6C  
                                 clear_1 1F78                          ___awmod@divisor 0003  
                        ___awmod@counter 0005                                   _printf 2368  
                                 pad@buf 0013                                   dtoa@fp 001C  
                                 _strlen 229E                                ??_initADC 00DC  
                                 fputc@c 0001                                   fputs@c 000E  
                                 fputs@i 000F                             __pdataCOMRAM 007C  
                                 fputs@s 000A                            _frisbee_steps 0100  
                           __mediumconst 0000                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
                                 putch@c 0001                         __end_of_vfprintf 20E6  
                              LCDDat@dat 00DD                                LCDCmd@cmd 00DD  
                             __accesstop 0080                  __end_of__initialization 1F8A  
                          ___rparam_used 000001                                ?i2_LCDDat 0001  
                              ?i2_LCDCmd 0001        __end_of_updatePlayerPositionOnLCD 1E72  
                         __pcstackCOMRAM 0001                          ?_readADCChannel 00DC  
                           __pidataBANK0 20E6                             __pidataBANK1 23B2  
                          __end_of_fputc 1F08                 ??_LCDAddSpecialCharacter 00E0  
                          __end_of_fputs 2178                            __end_of_putch 23D0  
                                ??_fputc 0005                                  ??_fputs 000E  
                                ??_putch 0001                                  FNC@oldX 0072  
                                FNC@oldY 0074                                  ?_LCDDat 0001  
                                ?_LCDCmd 0001                               __pbssBANK0 00E2  
                             __pbssBANK1 0100                             i2LCDGoto@p_1 0003  
                           i2LCDGoto@p_2 0004                               ??i2_LCDDat 0001  
                             ??i2_LCDCmd 0001                                  ?_printf 0058  
                                ?_strlen 0001                                  _CONVERT 00E6  
                                _LCDGoto 1F98                       __size_of_vfpfcnvrt 01B4  
                                i2u90_40 2176                                  i2u90_41 2172  
                                i2u91_40 22C6                                  i2u91_41 22C2  
                                i2u92_40 17EA                                  i2u92_41 17E6  
                                i2u93_40 181C                                  i2u93_41 1818  
                                i2u86_40 1E84                                  i2u94_41 1846  
                                i2u86_41 1E80                                  i2u95_40 186A  
                                i2u87_40 1E96                                  i2u95_41 1866  
                                i2u87_41 1E92                                  i2u96_40 1894  
                                i2u88_40 1EBE                                  i2u96_41 1890  
                                i2u88_41 1EBA                                  i2u97_40 18D4  
                                i2u89_40 1EF4                                  i2u97_41 18D0  
                                i2u89_41 1EF0                                  i2u98_40 191E  
                                i2u98_41 191A                                  i2u99_40 1972  
                                i2u99_41 196E                          __size_of_LCDDat 0038  
                        __size_of_LCDCmd 0036                                  _InitLCD 22D4  
                                __Hparam 0000                                  __Lparam 0000  
                                ___aodiv 17D8                                  ___aomod 1960  
                                ___awmod 1C8A                                ?_vfprintf 0050  
                           __psmallconst 1000          __size_of_LCDAddSpecialCharacter 0040  
                                __pcinit 1F08                                  __ramtop 1000  
                                __ptext0 1AC4                                  __ptext1 1D3A  
                                __ptext2 238E                                  __ptext3 1F98  
                                __ptext4 2178                                  __ptext5 21F8  
                                __ptext6 22D4                                  __ptext7 2268  
                                __ptext9 1DD8                          __size_of_printf 0026  
                                _initADC 238E                             __size_of_FNC 133E  
                        __size_of_strlen 0036                                  _frisbee 00A6  
                           __size_of_abs 0040                             __size_of_pad 00C2  
                       ___awmod@dividend 0001                           __pintcode_body 1044  
                   end_of_initialization 1F8A                           _frisbee_target 0166  
                                fputc@fp 0003                            __Lmediumconst 0000  
                                int_func 1044                                  fputs@fp 000C  
                              i2_LCDGoto 2010                        __end_of_vfpfcnvrt 17D8  
                                postdec1 000FE5                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc1 000FE6  
                                postinc2 000FDE                               ??_vfprintf 0056  
                                strlen@a 0003                                  strlen@s 0001  
                              _PORTBbits 000F81                                _PORTEbits 000F84  
                              _TRISAbits 000F92                                _TRISBbits 000F93  
                              _TRISEbits 000F96        __size_ofi2_LCDAddSpecialCharacter 0038  
              ?i2_LCDAddSpecialCharacter 0003                   _LCDAddSpecialCharacter 2178  
                         __end_of_LCDDat 2230                           __end_of_LCDCmd 229E  
                       ??_readADCChannel 00DE                               LCDGoto@p_1 00DE  
                             LCDGoto@p_2 00DF                               ?i2_LCDGoto 0003  
                             main@values 017E       _selected_teamA_player_with_frisbee 0176  
                      __size_ofi2_LCDDat 0032                        __size_ofi2_LCDCmd 0030  
                            vfpfcnvrt@ap 0044                              vfpfcnvrt@fp 0040  
                            vfpfcnvrt@ll 0048                            __pidataCOMRAM 23CA  
                         __end_of_printf 238E                           __end_of_strlen 22D4  
                    start_initialization 1F08                              __end_of_FNC 1346  
                            __end_of_abs 21F8                              __end_of_pad 1C8A  
                               ??_LCDDat 00DC                                 ??_LCDCmd 00DC  
                            vfprintf@fmt 0052                  LCDAddSpecialCharacter@i 00E1  
             ?_updatePlayerPositionOnLCD 0066                              __pdataBANK0 0080  
                            __pdataBANK1 0166                                 ??_printf 0062  
                               ??_strlen 0003                                 ?_LCDGoto 00DE  
                            __pbssCOMRAM 0076                            __pcstackBANK0 00CE  
                          __pcstackBANK1 017E                         ___aodiv@dividend 0001  
                            i2LCDDat@dat 0002                              i2LCDCmd@cmd 0002  
                               ?_InitLCD 0001                              ??i2_LCDGoto 0004  
                              _gameState 0080                                _dtoa$1228 002E  
                              __pintcode 0008                                 ?___aodiv 0001  
                               ?___aomod 0001                         ___aodiv@quotient 0013  
                               ?___awmod 0001                        __size_of_vfprintf 0062  
                               ?_initADC 0001                              __smallconst 1000  
                           _teamA_player 00C6                             _teamB_player 00BE  
                         __size_of_fputc 0096                           __size_of_fputs 0044  
                         __size_of_putch 0002                    readADCChannel@channel 00E0  
                  _selected_teamA_player 00B6                    _selected_teamB_player 00AE  
                               i2_LCDDat 2306                                 i2_LCDCmd 2338  
                               i2u100_40 19A4                                 i2u100_41 19A0  
                               i2u101_40 19E2                                 i2u101_41 19DE  
                               i2u102_40 1A0C                                 i2u110_40 1376  
                               i2u102_41 1A08                                 i2u110_41 1370  
                               i2u103_40 1A3A                                 i2u111_40 1378  
                               i2u103_41 1A36                                 i2u104_40 1A82  
                               i2u120_40 1590                                 i2u112_40 138E  
                               i2u104_41 1A7E                                 i2u120_41 158C  
                               i2u112_41 138A                                 i2u105_40 1BD6  
                               i2u121_40 159E                                 i2u113_40 13BC  
                               i2u105_41 1BD2                                 i2u121_41 159A  
                               i2u113_41 13B8                                 i2u106_40 1BF8  
                               i2u122_40 15B0                                 i2u114_40 13D8  
                               i2u130_40 2022                                 i2u106_41 1BF4  
                               i2u122_41 15AC                                 i2u114_41 13D4  
                               i2u130_41 201E                                 i2u107_40 1C4E  
                               i2u123_40 15BE                                 i2u115_40 1406  
                               i2u131_40 2042                                 i2u107_41 1C4A  
                               i2u123_41 15BA                                 i2u115_41 1402  
                               i2u131_41 203E                                 i2u140_40 1C9C  
                               i2u108_40 1C5C                                 i2u124_40 15D6  
                               i2u116_40 1414                                 i2u132_40 2062  
                               i2u140_41 1C98                                 i2u108_41 1C58  
                               i2u124_41 15D2                                 i2u116_41 1410  
                               i2u132_41 205E                                 i2u141_40 1CB6  
                               i2u109_40 21D2                                 i2u117_40 153E  
                               i2u125_40 1648                                 i2u133_40 2266  
                               i2u141_41 1CB2                                 i2u109_41 21CE  
                               i2u117_41 153A                                 i2u125_41 1644  
                               i2u133_41 2262                                 i2u142_40 1CD0  
                               i2u118_40 155C                                 i2u126_40 1690  
                               i2u142_41 1CCC                                 i2u118_41 1558  
                               i2u126_41 168C                                 i2u143_40 1CEE  
                               i2u119_40 1576                                 i2u127_40 16B4  
                               i2u143_41 1CEA                                 i2u119_41 1572  
                               i2u127_41 16B0                                 i2u144_40 1D04  
                               i2u128_40 1758                                 i2u144_41 1D00  
                               i2u128_41 1754                                 i2u145_40 1D28  
                               i2u129_40 20DC                                 i2u145_41 1D24  
                               i2u129_41 20D8                                 i2u162_40 107C  
                               i2u162_41 1078                                 i2u139_40 1E3E  
                               i2u163_40 1136                                 i2u139_41 1E3A  
                               i2u163_41 1132                                 i2u164_40 114C  
                               i2u164_41 1148                                 i2u165_40 11B4  
                               i2u165_41 11B0                                 i2u166_40 1202  
                               i2u166_41 11FE                                 i2u167_40 1242  
                               i2u167_41 123E                                 i2u168_40 127A  
                               i2u168_41 1276                                 _PIR1bits 000F9E  
                               i2u185_47 2318                                 i2u186_47 232A  
                               i2u187_47 234A                                 i2u188_47 235C  
                              main@F3016 013C                                _vfpfcnvrt 1624  
       __end_ofi2_LCDAddSpecialCharacter 2268                               _ADCON0bits 000FC2  
                             _ADCON1bits 000FC1                               _ADCON2bits 000FC0  
                       __size_of_LCDGoto 0078                  ?_LCDAddSpecialCharacter 00DE  
                              copy_data0 1F1C                                copy_data1 1F3C  
                       __size_of_InitLCD 0032                                 __Hrparam 0000  
                             vfprintf@ap 0054                                 __Lrparam 0000  
                             vfprintf@fp 0050                         __size_of___aodiv 0188  
                       __size_of___aomod 0164                         __size_of___awmod 00B0  
                             ?_vfpfcnvrt 0040                          ___aodiv@divisor 0009  
                        ___aodiv@counter 0011           __end_of_LCDAddSpecialCharacter 21B8  
                       __size_of_initADC 0024            _updatePlayerPositionOnLCD$670 0070  
                               __ptext10 2010                                 __ptext11 2230  
                               __ptext20 2134                                 __ptext12 2306  
                               __ptext21 1E72                                 __ptext13 2338  
                               __ptext22 23CE                                 __ptext14 2368  
                               __ptext23 21B8                                 __ptext15 2084  
                               __ptext24 1960                                 __ptext16 1624  
                               __ptext25 17D8                                 __ptext17 1346  
                               __ptext26 1C8A                                 __ptext18 1BC8  
                               __ptext19 229E                            __size_of_main 0104  
                          __size_of_dtoa 02DE       _selected_teamB_player_with_frisbee 016E  
                               int$flags 007F              ??_updatePlayerPositionOnLCD 0070  
                               _vfprintf 2084                                printf@fmt 0058  
                       ___aomod@dividend 0001                               _INTCONbits 000FF2  
               i2_LCDAddSpecialCharacter 2230                                 intlevel2 0000  
updatePlayerPositionOnLCD@selectedPlayer 006E                                 printf@ap 0064  
           i2LCDAddSpecialCharacter@data 0003                          ___aomod@divisor 0009  
                __size_of_readADCChannel 009E                              ??_vfpfcnvrt 0046  
                        ___aomod@counter 0011                i2LCDAddSpecialCharacter@i 0006  
              _updatePlayerPositionOnLCD 1DD8                             ___aodiv@sign 0012  
                          _display_state 007A                             ___aomod@sign 0012  
